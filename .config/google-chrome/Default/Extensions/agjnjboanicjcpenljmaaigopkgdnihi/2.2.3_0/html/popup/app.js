var pmd;pmd=(()=>{var t={6693:(t,e,a)=>{(e=a(3645)(!1)).push([t.id,'*:not(i){font-family:Inter}::-webkit-scrollbar{width:8px;height:0.6rem}::-webkit-scrollbar-track{background:#23272a;border:none}::-webkit-scrollbar-thumb{transition:background 0.15s ease-out;border:3px solid #23272a;border-radius:20px;background:#515b62}::-webkit-scrollbar-thumb:hover{background:#5d6870}::-webkit-scrollbar-corner{background:transparent}::selection{background-color:#7289da;color:white}.link{color:#7289da;text-decoration:none;font-weight:600}*{scrollbar-color:#515b62 #23272a;scrollbar-width:thin}@keyframes pulseWarn{0%{box-shadow:0 0 0 0 rgba(255,255,0,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}@keyframes pulseError{0%{box-shadow:0 0 0 0 rgba(255,50,50,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}.slideDown-enter-active,.slideDown-leave-active{transition:all 0.15s;user-select:none}.slideDown-enter,.slideDown-leave-to{opacity:0;transform:translateY(-5px);margin:0}.slideRight-enter-active,.slideRight-leave-active{transition:all 0.15s;user-select:none}.slideRight-enter,.slideRight-leave-to{opacity:0;transform:translateX(100%);margin:0}.categoryHeight-enter-active,.categoryHeight-leave-active{transition:all 0.15s;max-height:30px}.categoryHeight-enter,.categoryHeight-leave-to{opacity:0;max-height:0}.fade-enter-active,.fade-leave-active{transition:all 0.1s}.fade-enter,.fade-leave-to{transform:scale(0.9);opacity:0}.pop-enter-active,.pop-leave-active{transition:all 0.15s;transform:scale(1)}.pop-enter,.pop-leave-to{transform:scale(0)}@font-face{font-family:"Discord Font";font-weight:900;src:url("/assets/fonts/DiscordFontBlack.woff2") format("woff2");font-style:normal}@font-face{font-family:Inter;src:url("/assets/fonts/Inter/Inter-Regular.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:500;src:url("/assets/fonts/Inter/Inter-Medium.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:700;src:url("/assets/fonts/Inter/Inter-Bold.woff2") format("woff2")}*{font-family:Inter;box-sizing:border-box;user-select:none}html,body{min-width:300px;margin:0;padding:0;background-color:#23272a}h1,h2,h3,h4,h5,p{margin:0;padding:0}.link{text-decoration:none;font-weight:600;color:#7289da}\n',""]),t.exports=e},9291:(t,e,a)=>{(e=a(3645)(!1)).push([t.id,'*[data-v-6da00a24]:not(i){font-family:Inter}[data-v-6da00a24]::-webkit-scrollbar{width:8px;height:0.6rem}[data-v-6da00a24]::-webkit-scrollbar-track{background:#23272a;border:none}[data-v-6da00a24]::-webkit-scrollbar-thumb{transition:background 0.15s ease-out;border:3px solid #23272a;border-radius:20px;background:#515b62}[data-v-6da00a24]::-webkit-scrollbar-thumb:hover{background:#5d6870}[data-v-6da00a24]::-webkit-scrollbar-corner{background:transparent}[data-v-6da00a24]::selection{background-color:#7289da;color:white}.link[data-v-6da00a24]{color:#7289da;text-decoration:none;font-weight:600}*[data-v-6da00a24]{scrollbar-color:#515b62 #23272a;scrollbar-width:thin}@keyframes pulseWarn-data-v-6da00a24{0%{box-shadow:0 0 0 0 rgba(255,255,0,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}@keyframes pulseError-data-v-6da00a24{0%{box-shadow:0 0 0 0 rgba(255,50,50,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}.slideDown-enter-active[data-v-6da00a24],.slideDown-leave-active[data-v-6da00a24]{transition:all 0.15s;user-select:none}.slideDown-enter[data-v-6da00a24],.slideDown-leave-to[data-v-6da00a24]{opacity:0;transform:translateY(-5px);margin:0}.slideRight-enter-active[data-v-6da00a24],.slideRight-leave-active[data-v-6da00a24]{transition:all 0.15s;user-select:none}.slideRight-enter[data-v-6da00a24],.slideRight-leave-to[data-v-6da00a24]{opacity:0;transform:translateX(100%);margin:0}.categoryHeight-enter-active[data-v-6da00a24],.categoryHeight-leave-active[data-v-6da00a24]{transition:all 0.15s;max-height:30px}.categoryHeight-enter[data-v-6da00a24],.categoryHeight-leave-to[data-v-6da00a24]{opacity:0;max-height:0}.fade-enter-active[data-v-6da00a24],.fade-leave-active[data-v-6da00a24]{transition:all 0.1s}.fade-enter[data-v-6da00a24],.fade-leave-to[data-v-6da00a24]{transform:scale(0.9);opacity:0}.pop-enter-active[data-v-6da00a24],.pop-leave-active[data-v-6da00a24]{transition:all 0.15s;transform:scale(1)}.pop-enter[data-v-6da00a24],.pop-leave-to[data-v-6da00a24]{transform:scale(0)}@font-face{font-family:"Discord Font";font-weight:900;src:url("/assets/fonts/DiscordFontBlack.woff2") format("woff2");font-style:normal}@font-face{font-family:Inter;src:url("/assets/fonts/Inter/Inter-Regular.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:500;src:url("/assets/fonts/Inter/Inter-Medium.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:700;src:url("/assets/fonts/Inter/Inter-Bold.woff2") format("woff2")}#checkbox[data-v-6da00a24]{cursor:pointer;position:relative;display:block;width:35px;height:15px}#checkbox input[data-v-6da00a24]{position:absolute;opacity:0;height:0;width:0}#checkbox input:checked ~ #checkmark span[data-v-6da00a24]{left:15px}#checkbox #checkmark[data-v-6da00a24]{transition:0.15s all ease-out;border-radius:15px;position:absolute;left:0;height:100%;width:100%}#checkbox #checkmark span[data-v-6da00a24]{transition:0.15s all ease-out;content:"";position:absolute;top:-2px;left:-5px;width:20px;height:20px;border-radius:10px}\n',""]),t.exports=e},8783:(t,e,a)=>{(e=a(3645)(!1)).push([t.id,'*[data-v-7da51c78]:not(i){font-family:Inter}[data-v-7da51c78]::-webkit-scrollbar{width:8px;height:0.6rem}[data-v-7da51c78]::-webkit-scrollbar-track{background:#23272a;border:none}[data-v-7da51c78]::-webkit-scrollbar-thumb{transition:background 0.15s ease-out;border:3px solid #23272a;border-radius:20px;background:#515b62}[data-v-7da51c78]::-webkit-scrollbar-thumb:hover{background:#5d6870}[data-v-7da51c78]::-webkit-scrollbar-corner{background:transparent}[data-v-7da51c78]::selection{background-color:#7289da;color:white}.link[data-v-7da51c78]{color:#7289da;text-decoration:none;font-weight:600}*[data-v-7da51c78]{scrollbar-color:#515b62 #23272a;scrollbar-width:thin}@keyframes pulseWarn-data-v-7da51c78{0%{box-shadow:0 0 0 0 rgba(255,255,0,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}@keyframes pulseError-data-v-7da51c78{0%{box-shadow:0 0 0 0 rgba(255,50,50,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}.slideDown-enter-active[data-v-7da51c78],.slideDown-leave-active[data-v-7da51c78]{transition:all 0.15s;user-select:none}.slideDown-enter[data-v-7da51c78],.slideDown-leave-to[data-v-7da51c78]{opacity:0;transform:translateY(-5px);margin:0}.slideRight-enter-active[data-v-7da51c78],.slideRight-leave-active[data-v-7da51c78]{transition:all 0.15s;user-select:none}.slideRight-enter[data-v-7da51c78],.slideRight-leave-to[data-v-7da51c78]{opacity:0;transform:translateX(100%);margin:0}.categoryHeight-enter-active[data-v-7da51c78],.categoryHeight-leave-active[data-v-7da51c78]{transition:all 0.15s;max-height:30px}.categoryHeight-enter[data-v-7da51c78],.categoryHeight-leave-to[data-v-7da51c78]{opacity:0;max-height:0}.fade-enter-active[data-v-7da51c78],.fade-leave-active[data-v-7da51c78]{transition:all 0.1s}.fade-enter[data-v-7da51c78],.fade-leave-to[data-v-7da51c78]{transform:scale(0.9);opacity:0}.pop-enter-active[data-v-7da51c78],.pop-leave-active[data-v-7da51c78]{transition:all 0.15s;transform:scale(1)}.pop-enter[data-v-7da51c78],.pop-leave-to[data-v-7da51c78]{transform:scale(0)}@font-face{font-family:"Discord Font";font-weight:900;src:url("/assets/fonts/DiscordFontBlack.woff2") format("woff2");font-style:normal}@font-face{font-family:Inter;src:url("/assets/fonts/Inter/Inter-Regular.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:500;src:url("/assets/fonts/Inter/Inter-Medium.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:700;src:url("/assets/fonts/Inter/Inter-Bold.woff2") format("woff2")}#select[data-v-7da51c78]{color:#99aab5;position:relative;height:25px;min-width:75px;cursor:pointer}#select[data-v-7da51c78]::after{right:5px;position:absolute;content:"";border:4px solid transparent;border-color:#fff transparent transparent transparent;top:11px}#select.active[data-v-7da51c78]::after{border-color:transparent transparent #fff transparent;top:6px}#select #show[data-v-7da51c78]{color:white;margin-right:13px;margin-bottom:2px}#select #wrapper[data-v-7da51c78]{display:grid;font-size:12px;background-color:#23272a;outline:none;border-radius:5px;border:none;min-height:25px;min-width:75px;padding:5px;overflow-y:auto}#select span[data-v-7da51c78]{transition:0.15s all ease-out}#select span[data-v-7da51c78]:hover{color:white !important}#select.active[data-v-7da51c78]{position:relative;z-index:1}#select.active span[data-v-7da51c78]{display:block}#select span[data-v-7da51c78]{display:none}\n',""]),t.exports=e},410:(t,e,a)=>{(e=a(3645)(!1)).push([t.id,'*[data-v-63101fff]:not(i){font-family:Inter}[data-v-63101fff]::-webkit-scrollbar{width:8px;height:0.6rem}[data-v-63101fff]::-webkit-scrollbar-track{background:#23272a;border:none}[data-v-63101fff]::-webkit-scrollbar-thumb{transition:background 0.15s ease-out;border:3px solid #23272a;border-radius:20px;background:#515b62}[data-v-63101fff]::-webkit-scrollbar-thumb:hover{background:#5d6870}[data-v-63101fff]::-webkit-scrollbar-corner{background:transparent}[data-v-63101fff]::selection{background-color:#7289da;color:white}.link[data-v-63101fff]{color:#7289da;text-decoration:none;font-weight:600}*[data-v-63101fff]{scrollbar-color:#515b62 #23272a;scrollbar-width:thin}@keyframes pulseWarn-data-v-63101fff{0%{box-shadow:0 0 0 0 rgba(255,255,0,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}@keyframes pulseError-data-v-63101fff{0%{box-shadow:0 0 0 0 rgba(255,50,50,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}.slideDown-enter-active[data-v-63101fff],.slideDown-leave-active[data-v-63101fff]{transition:all 0.15s;user-select:none}.slideDown-enter[data-v-63101fff],.slideDown-leave-to[data-v-63101fff]{opacity:0;transform:translateY(-5px);margin:0}.slideRight-enter-active[data-v-63101fff],.slideRight-leave-active[data-v-63101fff]{transition:all 0.15s;user-select:none}.slideRight-enter[data-v-63101fff],.slideRight-leave-to[data-v-63101fff]{opacity:0;transform:translateX(100%);margin:0}.categoryHeight-enter-active[data-v-63101fff],.categoryHeight-leave-active[data-v-63101fff]{transition:all 0.15s;max-height:30px}.categoryHeight-enter[data-v-63101fff],.categoryHeight-leave-to[data-v-63101fff]{opacity:0;max-height:0}.fade-enter-active[data-v-63101fff],.fade-leave-active[data-v-63101fff]{transition:all 0.1s}.fade-enter[data-v-63101fff],.fade-leave-to[data-v-63101fff]{transform:scale(0.9);opacity:0}.pop-enter-active[data-v-63101fff],.pop-leave-active[data-v-63101fff]{transition:all 0.15s;transform:scale(1)}.pop-enter[data-v-63101fff],.pop-leave-to[data-v-63101fff]{transform:scale(0)}@font-face{font-family:"Discord Font";font-weight:900;src:url("/assets/fonts/DiscordFontBlack.woff2") format("woff2");font-style:normal}@font-face{font-family:Inter;src:url("/assets/fonts/Inter/Inter-Regular.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:500;src:url("/assets/fonts/Inter/Inter-Medium.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:700;src:url("/assets/fonts/Inter/Inter-Bold.woff2") format("woff2")}#navbar[data-v-63101fff]{position:relative;z-index:100;user-select:none;width:100%;color:#fff;background-color:#7289da;height:45px;display:grid;grid-template-columns:min-content auto min-content min-content;align-items:center}#navbar #infoPopup[data-v-63101fff]{position:absolute;max-width:225px;background-color:#2c2f33;box-shadow:0px 2px 5px rgba(0,0,0,0.5);border-radius:5px;top:40px;right:42px;z-index:100;padding:5px}#navbar #infoPopup[data-v-63101fff]::before{position:absolute;right:5px;margin-top:-10px;content:"";width:0;height:0;border-left:10px solid transparent;border-right:10px solid transparent;border-bottom:10px solid #2c2f33}#navbar #infoPopup h1[data-v-63101fff]{color:#7289da;font-size:15px;margin-left:5px}#navbar #infoPopup p[data-v-63101fff]{margin-left:5px}#navbar #logo[data-v-63101fff]{align-self:center;justify-self:center;height:35px;margin-right:5px;margin-left:10px}#navbar h1[data-v-63101fff]{font-family:"Discord Font";font-size:25px}#navbar #info[data-v-63101fff]{cursor:help;height:20px;width:20px;margin-right:10px;color:#23272a;border-radius:100%;font-size:15px;font-weight:900;text-align:center;box-shadow:0 0 0 0 inset}#navbar #info.error[data-v-63101fff]{background-color:#ff5050;animation:pulseError-data-v-63101fff 2s infinite}#navbar #info.warning[data-v-63101fff]{background-color:#ffff00;animation:pulseWarn-data-v-63101fff 2s infinite}#navbar #userWrapper[data-v-63101fff]{height:35px;width:35px;margin-right:5px}#navbar #userWrapper #user[data-v-63101fff]{transition:0.1s all ease-out;border-radius:100%;height:35px;cursor:pointer}#navbar #userWrapper #user[data-v-63101fff]:active{transform:scale(0.9)}#navbar #userWrapper #settingsOverlay[data-v-63101fff]{position:absolute;right:5px;margin-top:5px;z-index:10;background-color:#2c2f33;box-shadow:0px 2px 5px rgba(0,0,0,0.5);border-radius:5px}#navbar #userWrapper #settingsOverlay[data-v-63101fff]::before{position:absolute;right:5px;margin-top:-10px;content:"";width:0;height:0;border-left:10px solid transparent;border-right:10px solid transparent;border-bottom:10px solid #2c2f33}#navbar #userWrapper #settingsOverlay h1[data-v-63101fff]{color:#7289da;font-size:15px;margin-left:5px}#navbar #userWrapper #settingsOverlay #settings[data-v-63101fff]{display:grid;grid-template-columns:auto;align-items:center}#navbar #userWrapper #settingsOverlay #settings #setting[data-v-63101fff]{display:inline-grid;grid-template-columns:min-content auto min-content;grid-gap:5px;align-items:center;height:30px;font-size:17px;margin:0 5px}#navbar #userWrapper #settingsOverlay #settings #setting svg[data-v-63101fff]{width:20px}#navbar #userWrapper #settingsOverlay #settings #setting p[data-v-63101fff]{margin-right:15px}\n',""]),t.exports=e},3260:(t,e,a)=>{(e=a(3645)(!1)).push([t.id,'*[data-v-6f7fd1c1]:not(i){font-family:Inter}[data-v-6f7fd1c1]::-webkit-scrollbar{width:8px;height:0.6rem}[data-v-6f7fd1c1]::-webkit-scrollbar-track{background:#23272a;border:none}[data-v-6f7fd1c1]::-webkit-scrollbar-thumb{transition:background 0.15s ease-out;border:3px solid #23272a;border-radius:20px;background:#515b62}[data-v-6f7fd1c1]::-webkit-scrollbar-thumb:hover{background:#5d6870}[data-v-6f7fd1c1]::-webkit-scrollbar-corner{background:transparent}[data-v-6f7fd1c1]::selection{background-color:#7289da;color:white}.link[data-v-6f7fd1c1]{color:#7289da;text-decoration:none;font-weight:600}*[data-v-6f7fd1c1]{scrollbar-color:#515b62 #23272a;scrollbar-width:thin}@keyframes pulseWarn-data-v-6f7fd1c1{0%{box-shadow:0 0 0 0 rgba(255,255,0,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}@keyframes pulseError-data-v-6f7fd1c1{0%{box-shadow:0 0 0 0 rgba(255,50,50,0.8)}70%{box-shadow:0 0 0 5px rgba(0,0,0,0)}100%{box-shadow:0 0 0 0 rgba(0,0,0,0)}}.slideDown-enter-active[data-v-6f7fd1c1],.slideDown-leave-active[data-v-6f7fd1c1]{transition:all 0.15s;user-select:none}.slideDown-enter[data-v-6f7fd1c1],.slideDown-leave-to[data-v-6f7fd1c1]{opacity:0;transform:translateY(-5px);margin:0}.slideRight-enter-active[data-v-6f7fd1c1],.slideRight-leave-active[data-v-6f7fd1c1]{transition:all 0.15s;user-select:none}.slideRight-enter[data-v-6f7fd1c1],.slideRight-leave-to[data-v-6f7fd1c1]{opacity:0;transform:translateX(100%);margin:0}.categoryHeight-enter-active[data-v-6f7fd1c1],.categoryHeight-leave-active[data-v-6f7fd1c1]{transition:all 0.15s;max-height:30px}.categoryHeight-enter[data-v-6f7fd1c1],.categoryHeight-leave-to[data-v-6f7fd1c1]{opacity:0;max-height:0}.fade-enter-active[data-v-6f7fd1c1],.fade-leave-active[data-v-6f7fd1c1]{transition:all 0.1s}.fade-enter[data-v-6f7fd1c1],.fade-leave-to[data-v-6f7fd1c1]{transform:scale(0.9);opacity:0}.pop-enter-active[data-v-6f7fd1c1],.pop-leave-active[data-v-6f7fd1c1]{transition:all 0.15s;transform:scale(1)}.pop-enter[data-v-6f7fd1c1],.pop-leave-to[data-v-6f7fd1c1]{transform:scale(0)}@font-face{font-family:"Discord Font";font-weight:900;src:url("/assets/fonts/DiscordFontBlack.woff2") format("woff2");font-style:normal}@font-face{font-family:Inter;src:url("/assets/fonts/Inter/Inter-Regular.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:500;src:url("/assets/fonts/Inter/Inter-Medium.woff2") format("woff2")}@font-face{font-family:Inter;font-weight:700;src:url("/assets/fonts/Inter/Inter-Bold.woff2") format("woff2")}#mainWrapper[data-v-6f7fd1c1]{display:grid}#mainWrapper *[data-v-6f7fd1c1]{position:relative}#mainWrapper #presenceSettings[data-v-6f7fd1c1]{max-height:470px}#mainWrapper #presenceWrapper[data-v-6f7fd1c1]{max-height:450px}#mainWrapper #presenceSettings[data-v-6f7fd1c1]{overflow-y:scroll;overflow-x:hidden}#mainWrapper #presenceSettings #presenceInfo p[data-v-6f7fd1c1]{max-width:300px}#mainWrapper #presenceSettings #headingWrapper[data-v-6f7fd1c1]{height:150px}#mainWrapper #presenceSettings #headingWrapper #backBtn[data-v-6f7fd1c1]{transition:0.15s all ease-out;cursor:pointer;color:white;font-size:25px;position:absolute;margin-top:5px;margin-left:5px;z-index:10}#mainWrapper #presenceSettings #headingWrapper #backBtn[data-v-6f7fd1c1]:hover{color:#7289da}#mainWrapper #presenceSettings #headingWrapper #backBtn[data-v-6f7fd1c1]:active{transform:scale(0.9);color:#5e78d5}#mainWrapper #presenceSettings #headingWrapper #heading[data-v-6f7fd1c1]{top:10px;display:grid;justify-items:center;text-align:center}#mainWrapper #presenceSettings #headingWrapper #heading h1[data-v-6f7fd1c1]{color:white;font-size:25px}#mainWrapper #presenceSettings #headingWrapper #heading img[data-v-6f7fd1c1]{max-height:100px;border-radius:5px}#mainWrapper #presenceSettings #headingWrapper #bg[data-v-6f7fd1c1]{position:absolute;filter:blur(3px) contrast(0.75);z-index:0;min-width:100%;max-height:150px}#mainWrapper #presenceSettings .container[data-v-6f7fd1c1]{margin:5px;margin-top:15px;padding:3px 5px;background-color:#2c2f33;border-radius:5px}#mainWrapper #presenceSettings .container h1[data-v-6f7fd1c1]{color:#7289da;font-family:"Discord Font";font-size:15px;padding-bottom:5px}#mainWrapper #presenceSettings .container p[data-v-6f7fd1c1]{color:#99aab5;font-weight:500}#mainWrapper #presenceSettings #setting[data-v-6f7fd1c1]{display:grid;grid-template-columns:auto min-content;align-items:center;min-height:25px;margin:5px 0;margin-top:0;grid-gap:5px}#mainWrapper #presenceSettings #setting span[data-v-6f7fd1c1]{white-space:nowrap;font-size:14px;max-width:190px;overflow:hidden;text-overflow:ellipsis;color:#99aab5}#mainWrapper #presenceSettings #setting span i[data-v-6f7fd1c1]{text-align:center;width:15px;margin-right:5px;color:#fff}#mainWrapper #presenceSettings #setting input[data-v-6f7fd1c1]{grid-row:none}#mainWrapper #presenceSettings #setting input[data-v-6f7fd1c1],#mainWrapper #presenceSettings #setting select[data-v-6f7fd1c1]{color:#fff;font-size:12px;background-color:#23272a;outline:none;border-radius:5px;border:none;height:25px;padding:0 5px}#mainWrapper #presenceWrapper[data-v-6f7fd1c1]{display:grid;background-color:#2c2f33;margin:10px;padding:5px;border-radius:5px;overflow:auto;overflow-x:hidden}#mainWrapper #presenceWrapper #titleWrapper[data-v-6f7fd1c1]{display:inline-grid;grid-template-columns:auto min-content;grid-gap:10px}#mainWrapper #presenceWrapper #titleWrapper #title[data-v-6f7fd1c1]{font-family:"Discord Font";color:#7289da;font-size:15px}#mainWrapper #presenceWrapper #titleWrapper #loadPresence[data-v-6f7fd1c1]{transition:0.15s color ease-out;cursor:pointer;white-space:nowrap;color:#99aab5}#mainWrapper #presenceWrapper #titleWrapper #loadPresence[data-v-6f7fd1c1]:hover{color:#fff}#mainWrapper #presenceWrapper #titleWrapper #loadPresence[data-v-6f7fd1c1]:active{color:#e6e6e6}#mainWrapper #presenceWrapper #titleWrapper #actions[data-v-6f7fd1c1]{display:inline-grid;grid-template-columns:min-content min-content;grid-gap:5px}#mainWrapper #presenceWrapper #titleWrapper #actions i[data-v-6f7fd1c1]{cursor:pointer;transition:color 0.15s ease-out;color:#99aab5;font-size:20px}#mainWrapper #presenceWrapper #titleWrapper #actions i[data-v-6f7fd1c1]:hover,#mainWrapper #presenceWrapper #titleWrapper #actions i.active[data-v-6f7fd1c1]{color:white}#mainWrapper #presenceWrapper #titleWrapper #actions i[data-v-6f7fd1c1]:active{color:#e6e6e6}#mainWrapper #presenceWrapper #categories[data-v-6f7fd1c1]{display:flex;flex-flow:nowrap;width:262px;height:30px;overflow:hidden;align-items:flex-end}#mainWrapper #presenceWrapper #categories span[data-v-6f7fd1c1]{transition:0.15s all ease-out;height:25px;cursor:pointer;display:inline-grid;grid-gap:5px;grid-template-columns:min-content max-content;align-items:center;margin:0 2px;background-color:#23272a;color:white;padding:0 5px;border-radius:5px}#mainWrapper #presenceWrapper #categories span h1[data-v-6f7fd1c1]{font-weight:500;font-size:14px}#mainWrapper #presenceWrapper #categories span[data-v-6f7fd1c1]:hover,#mainWrapper #presenceWrapper #categories span.active[data-v-6f7fd1c1]{background-color:#7289da}#mainWrapper #presenceWrapper #categories span.active[data-v-6f7fd1c1]:hover{background-color:#869adf}#mainWrapper #presenceWrapper #categories span[data-v-6f7fd1c1]:active{background-color:#5e78d5}#mainWrapper #presenceWrapper #loader-container[data-v-6f7fd1c1]{text-align:center;margin-bottom:10px}#mainWrapper #presenceWrapper #loader-container .loader img[data-v-6f7fd1c1]{width:50px;height:50px;transform:translateX(10px);animation:loaderAnimation-data-v-6f7fd1c1 0.5s ease-out infinite}#mainWrapper #presenceWrapper #loader-container .loader p[data-v-6f7fd1c1]{color:#fff;font-size:1.2em;font-weight:bold}@keyframes loaderAnimation-data-v-6f7fd1c1{50%{transform:translateX(-10px)}100%{transform:translateX(10px)}}#mainWrapper #presenceWrapper #presences #presence[data-v-6f7fd1c1]{margin:7px 0;display:grid;grid-template-columns:min-content auto min-content min-content;grid-gap:5px;align-items:center}#mainWrapper #presenceWrapper #presences #presence[data-v-6f7fd1c1]:first-of-type{margin-top:3px}#mainWrapper #presenceWrapper #presences #presence img[data-v-6f7fd1c1]{width:25px;border-radius:5px}#mainWrapper #presenceWrapper #presences #presence h1[data-v-6f7fd1c1]{color:white;font-size:17px;font-weight:normal;justify-content:center;max-width:100%;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap}#mainWrapper #presenceWrapper #presences #presence h1 span[data-v-6f7fd1c1]{font-size:10px;background:#c84b4b;vertical-align:middle;padding:2px 4px;border-radius:5px;position:relative;margin-right:5px;top:-2px}#mainWrapper #presenceWrapper #presences #presence .action[data-v-6f7fd1c1]{transition:0.1s color ease-out;cursor:pointer;color:#99aab5;font-size:17px}#mainWrapper #presenceWrapper #presences #presence .action[data-v-6f7fd1c1]:hover{color:#fff}#mainWrapper #presenceWrapper #presences #presence .action#settings[data-v-6f7fd1c1]{margin-right:5px}#mainWrapper #presenceWrapper #presences #presence #checkbox[data-v-6f7fd1c1]{grid-column-end:5}#mainWrapper #presenceWrapper #noPresences[data-v-6f7fd1c1]{font-size:15px;text-align:center;margin-bottom:5px;font-weight:600;color:#99aab5}#mainWrapper #presenceWrapper #noPresences #reinit[data-v-6f7fd1c1]{color:#7289da;cursor:pointer}#mainWrapper #presenceWrapper #noPresences #reinit[data-v-6f7fd1c1]:hover{text-decoration:underline}#mainWrapper #presenceWrapper #presenceStoreBtn[data-v-6f7fd1c1]{transition:0.1s background-color ease-out;font-weight:600;width:90%;background-color:#7289da;justify-self:center;padding:5px 5px;font-size:17px;color:white;text-decoration:none;text-align:center;border-radius:20px;margin-bottom:10px}#mainWrapper #presenceWrapper #presenceStoreBtn[data-v-6f7fd1c1]:hover{background-color:#869adf}#mainWrapper #presenceWrapper #presenceStoreBtn[data-v-6f7fd1c1]:active{background-color:#5e78d5}\n',""]),t.exports=e},9387:(t,e,a)=>{"use strict";a.d(e,{XJ:()=>n,t0:()=>r});const n="https://api.premid.app/v3/",r="RELEASE"},58:(t,e,a)=>{"use strict";a.r(e);var n=a(144),r=a(7152),s=a(8345),i=a(629),o=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("navigation"),t._v(" "),a("router-view")],1)};o._withStripped=!0;var c=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{id:"navbar"}},[a("img",{attrs:{id:"logo",draggable:"false",src:"/assets/images/icon.svg"}}),t._v(" "),a("h1",[t._v("PreMiD")]),t._v(" "),a("transition",{attrs:{name:"pop"}},[t.showWarningError?a("span",{class:this.$store.state.connected?"error":"warning",attrs:{id:"info"},on:{mouseenter:function(e){t.hoverInfo=!0},mouseleave:function(e){t.hoverInfo=!1}}},[t._v("!")]):t._e()]),t._v(" "),a("transition",{attrs:{name:"slideDown"}},[a("div",{directives:[{name:"show",rawName:"v-show",value:t.hoverInfo,expression:"hoverInfo"}],attrs:{id:"infoPopup"},on:{mouseenter:function(e){t.hoverInfo=!0},mouseleave:function(e){t.hoverInfo=!1}}},[a("h1",{directives:[{name:"t",rawName:"v-t",value:t.onLine?this.$store.state.appVersionSupported?this.$store.state.latestExtensionVersion.urgentUpdate?"popup.info.safari.urgentUpdate":this.$store.state.latestExtensionVersion.latestVersion?"popup.info.notConnected":"popup.info.safari.outdatedExtension":"popup.info.unsupportedAppVersion":"popup.info.noInternet",expression:"\n\t\t\t\t\t!onLine\n\t\t\t\t\t\t? 'popup.info.noInternet'\n\t\t\t\t\t\t: !this.$store.state.appVersionSupported\n\t\t\t\t\t\t? 'popup.info.unsupportedAppVersion'\n\t\t\t\t\t\t: this.$store.state.latestExtensionVersion.urgentUpdate\n\t\t\t\t\t\t? 'popup.info.safari.urgentUpdate'\n\t\t\t\t\t\t: !this.$store.state.latestExtensionVersion.latestVersion\n\t\t\t\t\t\t? 'popup.info.safari.outdatedExtension'\n\t\t\t\t\t\t: 'popup.info.notConnected'\n\t\t\t\t"}]}),t._v(" "),a("p",{domProps:{innerHTML:t._s(t.infoMessage)}})])]),t._v(" "),a("div",{attrs:{id:"userWrapper"},on:{mouseenter:function(e){t.hoverUser=!0},mouseleave:function(e){t.hoverUser=!1}}},[a("img",{attrs:{id:"user",draggable:"false",src:this.$store.state.userAvatar},on:{click:function(e){t.userClick=!t.userClick}}}),t._v(" "),a("transition",{attrs:{name:"slideDown"}},[a("div",{directives:[{name:"show",rawName:"v-show",value:t.userClick,expression:"userClick"}],attrs:{id:"settingsOverlay"}},[a("h1",{directives:[{name:"t",rawName:"v-t",value:"popup.navigation.settings",expression:"'popup.navigation.settings'"}]}),t._v(" "),a("div",{attrs:{id:"settings"}},[a("div",{attrs:{id:"setting"}},[a("i",{staticClass:"fas fa-power-off"}),t._v(" "),a("p",{directives:[{name:"t",rawName:"v-t",value:"popup.setting.enabled",expression:"'popup.setting.enabled'"}]}),t._v(" "),a("checkbox",{attrs:{checked:t.settings.enabled},nativeOn:{change:function(e){return t.updateSetting("enabled")}}})],1),t._v(" "),t.platform.includes("Linux")?t._e():a("div",{attrs:{id:"setting"}},[a("i",{staticClass:"fas fa-rocket"}),t._v(" "),a("p",{directives:[{name:"t",rawName:"v-t",value:"popup.setting.autoLaunch",expression:"'popup.setting.autoLaunch'"}]}),t._v(" "),a("checkbox",{attrs:{checked:t.settings.autoLaunch},on:{change:function(e){return t.updateSetting("autoLaunch")}}})],1),t._v(" "),"MacIntel"===t.platform?a("div",{attrs:{id:"setting"}},[a("i",{staticClass:"fab fa-apple"}),t._v(" "),a("p",{directives:[{name:"t",rawName:"v-t",value:"popup.setting.titleMenubar",expression:"'popup.setting.titleMenubar'"}]}),t._v(" "),a("checkbox",{attrs:{checked:t.settings.titleMenubar},on:{change:function(e){return t.updateSetting("titleMenubar")}}})],1):t._e()])])])],1)],1)};c._withStripped=!0;var d=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("label",{attrs:{id:"checkbox"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:t.isChecked,expression:"isChecked"}],attrs:{type:"checkbox"},domProps:{checked:t.isChecked,checked:Array.isArray(t.isChecked)?t._i(t.isChecked,null)>-1:t.isChecked},on:{change:[function(e){var a=t.isChecked,n=e.target,r=!!n.checked;if(Array.isArray(a)){var s=t._i(a,null);n.checked?s<0&&(t.isChecked=a.concat([null])):s>-1&&(t.isChecked=a.slice(0,s).concat(a.slice(s+1)))}else t.isChecked=r},t.update]}}),t._v(" "),a("span",{style:[t.isChecked?{"background-color":t.bgColor}:{"background-color":"rgb(87, 107, 120)"}],attrs:{id:"checkmark"}},[a("span",{style:"background-color:"+(t.isChecked?this.nobColor:"#fff")})])])};d._withStripped=!0;var p=a(7621);const l=n.Z.extend({props:["checked","color"],data(){return{isChecked:this.checked}},computed:{nobColor(){return this.color?p(this.color).getBrightness()<=50?p(this.color).brighten(25):this.color:"#fff"},bgColor(){return this.color?p(this.color).darken(25):"#7289da"}},watch:{checked(){this.isChecked=this.checked}},methods:{update(){this.$emit("change",this.isChecked)}}});a(425);var f=a(1900),g=(0,f.Z)(l,d,[],!1,null,"6da00a24",null);g.options.__file="src/html/popup/components/checkbox.vue";const u=g.exports,v={data(){return{platform:window.navigator.platform,hoverUser:!1,userClick:!1,hoverInfo:!1,settings:Object.assign({},...Object.keys(this.$store.state.settings).map((t=>({[t]:this.$store.state.settings[t].value})))),onLine:navigator.onLine}},created(){document.addEventListener("click",this.settingsPopup),window.addEventListener("online",this.updateOnlineStatus),window.addEventListener("offline",this.updateOnlineStatus)},beforeDestroy(){document.removeEventListener("click",this.settingsPopup),window.removeEventListener("online",this.updateOnlineStatus),window.removeEventListener("offline",this.updateOnlineStatus)},components:{checkbox:u},computed:{infoMessage(){if(!this.onLine)return this.$t("popup.info.noInternet.message");if(!this.$store.state.appVersionSupported)return this.$t("popup.info.unsupportedAppVersion.message");if(this.$store.state.latestExtensionVersion.urgentUpdate)return this.$t("popup.info.safari.urgentUpdate.message");if(!this.$store.state.latestExtensionVersion.latestVersion)return this.$t("popup.info.safari.outdatedExtension.message");const t=/(\*.*?\*)/g,e="popup.info.notConnected.message";let a=this.$t(e);t.test(a)||(a=this.$t(e,this.$root.$options.i18n.fallbackLocale));const n=a.match(t)[0];return a=a.replace(n,`<a class="link" target="_blank" href="https://docs.premid.app/troubleshooting">${n.slice(1,n.length-1)}</a>`),a},showWarningError(){return!(!this.$store.state.latestExtensionVersion.urgentUpdate&&this.$store.state.latestExtensionVersion.latestVersion&&this.$store.state.connected&&this.$store.state.appVersionSupported&&this.onLine)}},methods:{settingsPopup(){!this.hoverUser&&this.userClick&&(this.userClick=!1)},updateSetting(t){this.$store.commit("updateSetting",t),this.settings=Object.assign({},...Object.keys(this.$store.state.settings).map((t=>({[t]:this.$store.state.settings[t].value}))))},updateOnlineStatus(){this.onLine=navigator.onLine}}};a(2803);var h=(0,f.Z)(v,c,[],!1,null,"63101fff",null);h.options.__file="src/html/popup/components/navigation.vue";const m={components:{navigation:h.exports},created:async function(){this.$store.commit("updatePort",chrome.runtime.connect({name:"popup"})),this.$store.state.port.onMessage.addListener((t=>this.$store.commit("updateConnectionState",t)))}};a(6442);var b=(0,f.Z)(m,o,[],!1,null,null,null);b.options.__file="src/html/popup/app.vue";const w=b.exports;var x=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{id:"mainWrapper"}},[a("transition",{attrs:{name:"fade",mode:"out-in"}},[t.inPresenceSettingsView?a("div",{key:"1",attrs:{id:"presenceSettings"}},[a("div",{attrs:{id:"headingWrapper"}},[a("i",{staticClass:"fas fa-arrow-left",attrs:{id:"backBtn"},on:{click:function(e){t.inPresenceSettingsView=!1}}}),t._v(" "),a("img",{attrs:{id:"bg",src:t.pSettingsPresence.metadata.thumbnail,draggable:"false"}}),t._v(" "),a("div",{attrs:{id:"heading"}},[a("img",{attrs:{src:t.pSettingsPresence.metadata.logo,draggable:"false"}}),t._v(" "),a("h1",{domProps:{textContent:t._s(t.pSettingsPresence.metadata.service)}})])]),t._v(" "),a("div",{staticClass:"container",attrs:{id:"presenceInfo"}},[a("h1",[t._v(t._s(t.$t("popup.headings.description")))]),t._v(" "),a("p",{domProps:{innerHTML:t._s(t.presenceDescription)}})]),t._v(" "),a("div",{ref:"settingsContainer",staticClass:"container",attrs:{id:"settings"}},[a("h1",[t._v(t._s(t.$t("popup.headings.settings")))]),t._v(" "),a("div",{attrs:{id:"settingsContainer"}},t._l(t.settingsFiltered,(function(e,n){return a("div",{key:n,class:"number"==typeof e.value||e.multiLanguage&&e.values&&e.values.length>1?"select":"",attrs:{id:"setting"}},[a("span",{attrs:{title:e.title}},[a("i",{class:e.icon}),t._v("\n\t\t\t\t\t\t\t"+t._s(e.title)+"\n\t\t\t\t\t\t")]),t._v(" "),e.multiLanguage?t._e():["boolean"==typeof e.value?a("checkbox",{attrs:{checked:e.value},on:{change:function(a){return t.updatePresenceSetting(e.id,a)}}}):t._e(),t._v(" "),"string"==typeof e.value?a("input",{ref:e.id,refInFor:!0,attrs:{type:"text",spellcheck:"false",placeholder:e.placeholder},domProps:{value:e.value},on:{change:function(a){return t.updatePresenceSetting(e.id,a.target.value)}}}):t._e()],t._v(" "),"number"==typeof e.value||e.multiLanguage&&e.values&&e.values.length>1?a("customSelect",{attrs:{options:e.values,selected:e.value},on:{change:function(a){return t.updatePresenceSetting(e.id,a)},active:t.selectToggle,inactive:t.selectToggle}}):t._e()],2)})),0)])]):a("div",{key:"2",attrs:{id:"presenceWrapper"}},[a("div",{attrs:{id:"titleWrapper"}},[t.defaultAdded?a("h1",{attrs:{id:"title"}},[t._v("\n\t\t\t\t\t"+t._s(t.$t("popup.headings.presences"))+"\n\t\t\t\t")]):t._e(),t._v(" "),a("transition",{attrs:{name:"slideRight",mode:"out-in"}},[t.shiftPressed&&t.$store.state.connected?a("span",[a("a",{attrs:{id:"loadPresence"},on:{click:t.loadPresence}},[t._v("\n\t\t\t\t\t\t\t"+t._s(t.$t("popup.presences.load"))+"\n\t\t\t\t\t\t")])]):this.presences.length>0?a("div",{attrs:{id:"actions"}},[t.showDelete?t._e():a("i",{staticClass:"fas fa-tag",class:t.showCategories?"active":"",on:{click:function(e){t.showCategories=!t.showCategories}}}),t._v(" "),t.showDelete?a("i",{staticClass:"fas fa-check-circle",staticStyle:{"grid-column-end":"none"},attrs:{id:"deletePresence"},on:{click:function(e){t.showDelete=!t.showDelete}}}):a("i",{staticClass:"fas fa-trash-alt",on:{click:function(e){t.showDelete=!t.showDelete}}})]):t._e()])],1),t._v(" "),a("transition",{attrs:{name:"categoryHeight"}},[t.showCategories?a("div",{attrs:{id:"categories"},on:{mousewheel:function(e){return t.catScroll(e,"wheel")},mousedown:function(e){return t.catScroll(e,"down")},mouseup:function(e){return t.catScroll(e,"up")},mousemove:function(e){return t.catScroll(e,"move")},mouseleave:function(e){t.catMDown=!1}}},t._l(t.filteredCategories,(function(e){return a("span",{key:e.id,class:t.activeCategory===e.id?"active":"",on:{click:function(a){t.activeCategory=e.id}}},[a("i",{class:e.icon}),t._v(" "),a("h1",{domProps:{textContent:t._s(e.text)}})])})),0):t._e()]),t._v(" "),t.loadingPresences?a("div",{attrs:{id:"loader-container"}},[a("div",{staticClass:"loader"},[a("img",{attrs:{src:"/assets/images/icon.svg"}}),t._v(" "),a("p",[t._v(t._s(t.loadingString))])])]):this.filteredPresences.length>0?a("div",{attrs:{id:"presences"}},t._l(t.filteredPresences,(function(e,n){return a("div",{key:"p"+n,attrs:{id:"presence"}},[a("img",{attrs:{src:e.metadata.logo,draggable:"false",title:e.metadata.service}}),t._v(" "),a("h1",{attrs:{title:e.metadata.service}},[e.tmp?a("span",[t._v("TMP")]):t._e(),t._v(t._s(e.metadata.service)+"\n\t\t\t\t\t")]),t._v(" "),!e.noCog&&e.metadata.settings&&e.metadata.settings.length>0&&!t.showDelete?a("i",{staticClass:"fas fa-cog action",attrs:{id:"settings"},on:{click:function(e){return t.togglePresenceSettings(n)}}}):t._e(),t._v(" "),a("transition",{attrs:{name:"fade",mode:"out-in"}},[t.showDelete&&!e.metaTag?a("span",[a("i",{staticClass:"fas fa-trash-alt action",on:{click:function(e){return t.deletePresence(n)}}})]):a("checkbox",{attrs:{checked:e.enabled,color:e.metadata.color},on:{change:function(e){return t.updatePresence(n,e)}}})],1)],1)})),0):a("div",{attrs:{id:"noPresences"}},[t.defaultAdded?a("p",[t._v(t._s(t.$t("popup.presences.noPresences")))]):a("div",[a("p",[t._v("\n\t\t\t\t\t\tExtension did not initialize correctly.\n\t\t\t\t\t")]),t._v(" "),a("span",{attrs:{id:"reinit"},on:{click:t.reinit}},[t._v("Reinitialize")])])]),t._v(" "),t.defaultAdded?a("a",{attrs:{id:"presenceStoreBtn",href:"https://premid.app/store",target:"_blank",draggable:"false"}},[t._v(t._s(t.$t("popup.buttons.presenceStore")))]):t._e()],1)])],1)};x._withStripped=!0;var y=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{class:t.active?"active":null,attrs:{id:"select"},on:{click:t.toggleActive}},[a("div",{ref:"wrapper",style:{maxHeight:t.selectHeight+"px"},attrs:{id:"wrapper"}},[t.$props.options&&"object"==typeof t.$props.options[0]?[a("p",{attrs:{id:"show"},domProps:{textContent:t._s(t.$props.options.find((function(e){return e.value===(t.$props.selected&&!0!==t.$props.selected?t.$props.selected:t.DEFAULT_LOCALE)})).name)}}),t._v(" "),t._l(t.$props.options.filter((function(e){return e.value!==t.$props.selected})),(function(e){return a("span",{key:e.value,domProps:{textContent:t._s(e.name)},on:{click:function(a){return t.$emit("change",e.value)}}})}))]:[a("p",{attrs:{id:"show"},domProps:{textContent:t._s(t.$props.options[t.$props.selected])}}),t._v(" "),t._l(t.$props.options,(function(e,n){return[e!=t.$props.options[t.$props.selected]?a("span",{key:n,domProps:{textContent:t._s(e)},on:{click:function(e){return t.$emit("change",n)}}}):t._e()]}))]],2)])};y._withStripped=!0;var k=a(3765);const _={props:["options","selected"],events:["active","inactive"],data:()=>({active:!1,DEFAULT_LOCALE:k.ZW,selectHeight:null}),methods:{toggleActive(){let t;this.active=!this.active,t=this.active?"active":"inactive",setTimeout((()=>{this.$emit(t,t,this.$refs.wrapper)}),0)}},mounted:function(){let t=this.$refs.wrapper.getBoundingClientRect();this.selectHeight=Math.max(85,window.innerHeight-(t.y+10))}};a(6252);var S=(0,f.Z)(_,y,[],!1,null,"7da51c78",null);S.options.__file="src/html/popup/components/customSelect.vue";const W=S.exports;var P=a(7899),L=a(7710);const $={components:{checkbox:u,customSelect:W},data(){return{shiftPressed:!1,presences:[],showCategories:!1,showDelete:!1,catMDown:!1,catStartX:0,catScrollLeft:0,activeCategory:"all",categories:[{icon:"fas fa-map",text:this.$i18n.t("popup.category.all"),id:"all"},{icon:"fas fa-star",text:this.$i18n.t("popup.category.anime"),id:"anime"},{icon:"fas fa-leaf",text:this.$i18n.t("popup.category.games"),id:"games"},{icon:"fas fa-music",text:this.$i18n.t("popup.category.music"),id:"music"},{icon:"fas fa-comments",text:this.$i18n.t("popup.category.socials"),id:"socials"},{icon:"fas fa-play",text:this.$i18n.t("popup.category.videos"),id:"videos"},{icon:"fas fa-box",text:this.$i18n.t("popup.category.other"),id:"other"}],inPresenceSettingsView:!1,pSettingsPresence:null,pSettings:null,presenceSettings:[],loadingPresences:!0,loadingString:"",defaultAdded:!1}},watch:{async presences(t,e){if(e.length>0&&t.length>e.length){let a=t.filter((t=>!e.find((e=>e.metadata.service==t.metadata.service))));for(const t of a)(0,P.initPresenceLanguages)(t),t.metadata.settings&&(t.noCog=!(t.metadata.settings.findIndex((t=>t.multiLanguage&&t.values.length>1))>=0),this.$forceUpdate())}}},computed:{filteredPresences(){return this.presences.filter(((t,e)=>!t.hidden&&(t.noCog=!this.presenceSettings[e],"all"==this.categories.find((t=>t.id===this.activeCategory)).id?t:t.metadata.category==this.categories.find((t=>t.id===this.activeCategory)).id))).sort(((t,e)=>t.metaTag!==e.metaTag||t.metadata.service.toLowerCase()<e.metadata.service.toLowerCase()?-1:t.metadata.service.toLowerCase()>e.metadata.service.toLowerCase()?1:0))},filteredCategories:function(){let t=[];return this.categories.filter((t=>"all"===t.id||this.presences.some((e=>e.metadata.category===t.id)))).map((e=>{t.push(this.categories.find((t=>t.id===e.id)))})),t},presenceDescription(){let t=null;t=this.pSettingsPresence.metadata.description[chrome.i18n.getUILanguage()]?this.pSettingsPresence.metadata.description[chrome.i18n.getUILanguage()]:this.pSettingsPresence.metadata.description.en;const e=t.match(/\[([^\]]+)\]\(([^)]+)\)/g);if(!e)return t;const a=/\[([^\]]+)\]\(([^)]+)\)/g.exec(t);return t.replace(e,`<a class="link" target="_blank" href="${a[2]}">${a[1]}</a>`)},settingsFiltered(){return this.pSettings?this.pSettings.filter((t=>{if(t.if){if(Object.keys(t.if).every(((e,a)=>this.pSettings.find((t=>t.id===e)).value===Object.values(t.if)[a]))&&!t.hidden)return t}else if(!t.hidden)return t})):this.pSettings}},methods:{loadPresence(){this.shiftPressed=!1,this.$store.state.port.postMessage({action:"loadLocalPresence"})},catScroll(t,e){const a=document.querySelector("#categories");"wheel"===e?a.scrollLeft+=t.deltaY/60*15:"down"===e?(this.catMDown=!0,this.catStartX=t.pageX-a.offsetLeft,this.catScrollLeft=a.scrollLeft):"up"===e?this.catMDown=!1:"move"===e&&this.catMDown&&(a.scrollLeft=this.catScrollLeft-2*(t.pageX-a.offsetLeft-this.catStartX))},updatePresence(t,e){this.filteredPresences[t].enabled=e,chrome.storage.local.set(JSON.parse(JSON.stringify({presences:this.presences})))},async deletePresence(t){const e=this.filteredPresences[t];this.presences=this.presences.filter((t=>!(t.metadata.service===e.metadata.service&&t.tmp===e.tmp))),chrome.storage.local.set(JSON.parse(JSON.stringify({presences:this.presences}))),await pmd.getStorage("local","pSettings_"+e.metadata.service)&&chrome.storage.local.remove("pSettings_"+e.metadata.service)},async togglePresenceSettings(t){this.inPresenceSettingsView=!this.inPresenceSettingsView,this.pSettingsPresence=this.filteredPresences[t];let e=await pmd.getStorage("local","pSettings_"+this.filteredPresences[t].metadata.service);if(e=e["pSettings_"+this.pSettingsPresence.metadata.service],e){let t=e.findIndex((t=>void 0!==t.multiLanguage)),a=this.pSettingsPresence.metadata.settings.find((t=>void 0!==t.multiLanguage));t>=0&&(a?e[t].multiLanguage=!0:e.splice(t,1))}this.pSettings=e||this.pSettingsPresence.metadata.settings},kDown(t){this.shiftPressed=t.shiftKey},updatePresenceSetting(t,e){"string"==typeof e&&""===e.trim()&&(e=this.pSettingsPresence.metadata.settings.find((e=>e.id===t)).value,this.$refs[t][0].value=e),this.pSettings.find((e=>e.id===t)).value=e,chrome.storage.local.set(JSON.parse(JSON.stringify({["pSettings_"+this.pSettingsPresence.metadata.service]:this.pSettings})))},async randomLoadingString(){const t=(await pmd.getStorage("local","languages")).languages.en.loading.split(";"),e=Math.floor(Math.random()*t.length);this.loadingString=t[e]},selectToggle(t,e){if("active"===t){const t=e.getBoundingClientRect().bottom-this.$refs.settingsContainer.getBoundingClientRect().bottom;t>0&&(this.$refs.settingsContainer.style.paddingBottom=t+8+"px")}else"inactive"===t&&(this.$refs.settingsContainer.style.paddingBottom=null)},async reinit(){this.loadingPresences=!0;const t=chrome.runtime.connect({name:"app.ts"});t.onMessage.addListener((t=>{t.success?location.reload():this.loadingPresences=!1})),t.postMessage({action:"reinit"})}},created:async function(){this.randomLoadingString(),this.defaultAdded=(await(0,L.c)("local","defaultAdded")).defaultAdded,this.presences=(await pmd.getStorage("local","presences")).presences,this.presenceSettings=await Promise.all(this.presences.map((async t=>{if(t.metadata.settings){const e=await pmd.getStorage("local","pSettings_"+t.metadata.service);return(0,P.initPresenceLanguages)(t),!(e["pSettings_"+t.metadata.service]&&0===e["pSettings_"+t.metadata.service].filter((t=>!t.hidden)).length)}return!1}))),this.loadingPresences=!1,chrome.storage.onChanged.addListener((t=>{t.presences&&(this.presences=t.presences.newValue),this.pSettingsPresence&&t["pSettings_"+this.pSettingsPresence.metadata.service]&&(this.pSettings=t["pSettings_"+this.pSettingsPresence.metadata.service].newValue),this.presences.filter((t=>t.metadata.settings&&t.metadata.settings.find((t=>Object.keys(t).includes("multiLanguage"))))).forEach((async t=>{await(0,P.initPresenceLanguages)(t)})),this.$forceUpdate()})),window.addEventListener("keydown",this.kDown),window.addEventListener("keyup",this.kDown)},beforeDestroy:function(){window.removeEventListener("keydown",this.kDown),window.removeEventListener("keyup",this.kDown)}};a(5212);var C=(0,f.Z)($,x,[],!1,null,"6f7fd1c1",null);C.options.__file="src/html/popup/settings.vue";const I=C.exports;n.Z.config.productionTip=!1,n.Z.config.devtools=!1,n.Z.use(s.Z),n.Z.use(r.Z),n.Z.use(i.ZP),window.onload=async()=>{const t=(await pmd.getStorage("local","discordUser")).discordUser;new n.Z({i18n:new r.Z({locale:chrome.i18n.getUILanguage(),messages:await pmd.getStrings(chrome.i18n.getUILanguage()||"en"),fallbackLocale:"en",silentTranslationWarn:!0}),render:t=>t(w),store:new i.ZP.Store({state:{port:null,connected:!0,appVersionSupported:!0,latestExtensionVersion:{latestVersion:!0,urgentUpdate:!1},userAvatar:t&&null!==t.avatar?`https://cdn.discordapp.com/avatars/${t.id}/${t.avatar}?size=128`:"https://cdn.discordapp.com/embed/avatars/0.png?size=128",settings:(await pmd.getStorage("sync","settings")).settings},mutations:{updateConnectionState(t,e){t.connected=e.connected,t.appVersionSupported=e.appVersionSupported,t.latestExtensionVersion=e.latestExtensionVersion},updateSetting(t,e){t.settings[e].value=!t.settings[e].value,chrome.storage.sync.set({settings:t.settings})},updatePort(t,e){t.port||e.postMessage({action:"popupOpened"}),t.port=e}}}),router:new s.Z({routes:[{path:"*",redirect:"/settings"},{path:"/settings",component:I}]})}).$mount("#app")}},3216:(t,e,a)=>{"use strict";a.d(e,{Vp:()=>o,vU:()=>c});var n=a(9387);const r="font-weight: 800; padding: 2px 5px; color: white;",s="RELEASE"!==n.t0;let i;function o(t,e,a=!1){(s||a)&&(d(t),console.log("%cPreMiD%cSUCCESS%c "+e,r+"border-radius: 25px 0 0 25px; background: #596cae;",r+"border-radius: 0 25px 25px 0; background: #50ff50; color: black;","color: unset;"))}function c(t,e,a=!1){(s||a)&&(d(t),console.log("%cPreMiD%cERROR%c "+e,r+"border-radius: 25px 0 0 25px; background: #596cae;",r+"border-radius: 0 25px 25px 0; background: #ff5050;","color: unset;"))}function d(t){i!==t&&(console.groupEnd(),console.group(t),i=t)}},7710:(t,e,a)=>{"use strict";function n(t,e){return new Promise((a=>chrome.storage[t].get(e,(t=>a(t)))))}a.d(e,{c:()=>n})},5069:(t,e,a)=>{"use strict";function n(t){for(const e in t)"object"==typeof t[e]&&n(t[e]),null!==t[e]&&void 0!==t[e]||delete t[e]}a.d(e,{Z:()=>n})},3250:(t,e,a)=>{"use strict";a.d(e,{Z:()=>o,L:()=>c});var n=a(9669),r=a.n(n),s=a(9387),i=a(5069);async function o(t){const e=await r()({url:s.XJ,method:"post",data:{query:t}});return(0,i.Z)(e.data),e.data}async function c(t){const e=await o(`\n    query {\n      presences(service: "${t}") {\n        url\n        metadata {\n          author {\n            id\n            name\n          }\n          contributors {\n            id\n            name\n          }\n          altnames\n          warning\n          readLogs\n          button\n          service\n          description\n          url\n          version\n          logo\n          thumbnail\n          color\n          tags\n          category\n          iframe\n          regExp\n          iframeRegExp\n          settings {\n            id\n            title\n            icon\n            if {\n              propretyNames\n              patternProprties\n            }\n            placeholder\n            value\n            values\n            multiLanguage\n          }\n        }\n      }\n    }`);return(0,i.Z)(e.data),{data:{name:e.data.presences[0].metadata.service,url:e.data.presences[0].url,metadata:e.data.presences[0].metadata}}}},3765:(t,e,a)=>{"use strict";a.d(e,{ZW:()=>s,IG:()=>d,cc:()=>l,KF:()=>f,r2:()=>g});var n=a(3216),r=a(3250);const s="en",i=3e5;let o={};function c(t){return t.split("-")[0]}async function d(t){t||(t=s),t.includes("ja")||t.includes("zh")||t.includes("ko")||(t=c(t));let e=t,a=t,i=t;switch(t){case"ja":e="ja_JP",i="ja_JP";break;case"ja_JP":a="ja";break;case"ko":e="ko_KR",i="ko_KR";break;case"ko_KR":a="ko";break;case"zh-CN":e="zh_CN",i="zh_CN";break;case"zh_CN":a="zh-CN";break;case"zh-TW":e="zh_TW",i="zh_TW";break;case"zh_TW":a="zh-TW";break;default:const t=(await(0,r.Z)('\n\t\t\tquery {\n\t\t\t\tlangFiles(project: "extension") {\n\t\t\t\t\tlang\n\t\t\t\t}\n\t\t\t}\n\t\t\t')).data.langFiles.map((t=>t.lang));if(!t.includes(a)){const n=t.findIndex((t=>t.includes(a+"_")));n>=0&&(e=t[n],a=t[n],i=t[n])}}try{const s=await(0,r.Z)(`\n\t\t\tquery {\n\t\t\t\twebsite: langFiles(project: "website", lang: "${e}") {\n\t\t\t\t\ttranslations\n\t\t\t\t}\n\t\t\t\textension: langFiles(project: "extension", lang: "${a}") {\n\t\t\t\t\ttranslations\n\t\t\t\t}\n\t\t\t\tpresence: langFiles(project: "presence", lang: "${i}") {\n\t\t\t\t\ttranslations\n\t\t\t\t}\n\t\t\t}\n\t\t`);o[t]={name:s.data.website[0].translations["header.language"],loading:s.data.website[0].translations["header.loader.phrases"],extension:s.data.extension[0].translations,presence:s.data.presence[0].translations,updatedAt:Date.now()},(0,n.Vp)("langManager.ts",`Updated ${t} translations`)}catch(e){return void(0,n.vU)("langManager.ts",`Error while fetching langFiles of ${t} language: ${e.message}`)}o[t]&&o[t].error?o[t]=void 0:await chrome.storage.local.set({languages:o})}const p=[];async function l(t,e){return t||(t=s),e||(e=!1),t=c(t),new Promise((a=>{if(void 0!==o[t]&&a(),p.includes(t)){let e=setInterval((()=>{void 0!==o&&void 0!==o[t]&&(clearInterval(e),a())}),5)}else p.push(t),chrome.storage.local.get("languages",(async n=>{n.languages||(n.languages={});const r=[];(e&&void 0!==n.languages[s]&&Date.now()-n.languages[s].updatedAt>=i||t!==s&&void 0===n.languages[s])&&r.push(d(s)),(void 0===n.languages[t]||e&&Date.now()-n.languages[t].updatedAt>=i)&&r.push(d(t)),await Promise.all(r),o={...o,...n.languages},p.splice(p.indexOf(t),1),a()}))}))}function f(t,e){return e||(e=chrome.i18n.getUILanguage()),e=c(e),new Promise((async a=>{if(await l(e),void 0!==o[e]){if(["name","header.language"].includes(t)&&void 0!==o[e].name)return a(o[e].name);if(["loading","header.loader.phrases"].includes(t)&&void 0!==o[e].loading)return a(o[e].loading);if(void 0!==o[e].extension&&void 0!==o[e].extension[t])return a(o[e].extension[t]);if(void 0!==o[e].presence&&void 0!==o[e].presence[t])return a(o[e].presence[t])}return a(e===s?t:await f(t,s))}))}async function g(t){try{const e=await(0,r.Z)(`\n\t\t\tquery {\n\t\t\t\tlangFiles(presence: "${t.toLowerCase()}") {\n\t\t\t\t\tlang\n\t\t\t\t}\n\t\t\t\tgeneralLangFiles: langFiles(presence: "general") {\n\t\t\t\t\tlang\n\t\t\t\t}\n\t\t\t}\n\t\t`),a=[];return e.data.langFiles.length>0&&e.data.generalLangFiles.length>0?e.data.generalLangFiles.forEach((t=>{e.data.langFiles.find((e=>e.lang===t.lang))&&a.push(t.lang)})):e.data.generalLangFiles.length>0&&e.data.generalLangFiles.forEach((t=>{a.push(t.lang)})),a}catch(t){return[]}}},7899:(t,e,a)=>{"use strict";a.d(e,{initPresenceLanguages:()=>d});var n=a(3765),r=a(3216),s=a(3250),i=a(7710);async function o(){let t,e=(await(0,i.c)("local","presences")).presences;if(!e||0===e.length)return;try{const e=(await(0,s.Z)("\n\t\t\tquery {\n  \t\t\tpresences {\n    \t\t\turl\n    \t\t\tmetadata {\n      \t\t\tservice\n      \t\t\tversion\n    \t\t\t}\n  \t\t\t}\n\t\t\t}\n\t\t")).data,a=[];e.presences.forEach((t=>{a.push({name:t.metadata.service,url:t.url,version:t.metadata.version})})),t=a}catch(t){return void(0,r.vU)("presenceManager.ts","Error while updating presences: "+t.message)}let a=e.filter((t=>!t.tmp)).map((t=>({name:t.metadata.service,version:t.metadata.version}))).filter((e=>t.find((t=>t.name==e.name&&t.version!==e.version))));Promise.all(a.map((async t=>{const a=e.findIndex((e=>e.metadata.service===t.name&&!t.tmp)),n=(await(0,s.Z)(`\n\t\t\tquery {\n\t\t\t\tpresences(service: "${t.name}") {\n\t\t\t\t\tpresenceJs\n\t\t\t\t\tiframeJs\n\t\t\t\t\tmetadata {\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontributors {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t}\n\t\t\t\t\t\taltnames\n\t\t\t\t\t\twarning\n\t\t\t\t\t\treadLogs\n\t\t\t\t\t\tservice\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\turl\n\t\t\t\t\t\tversion\n\t\t\t\t\t\tlogo\n\t\t\t\t\t\tthumbnail\n\t\t\t\t\t\tcolor\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tcategory\n\t\t\t\t\t\tiframe\n\t\t\t\t\t\tregExp\n\t\t\t\t\t\tiframeRegExp\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\twarning\n\t\t\t\t\t\tsettings {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\ticon\n\t\t\t\t\t\t\tif {\n\t\t\t\t\t\t\t\tpropretyNames\n\t\t\t\t\t\t\t\tpatternProprties\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\tvalues\n\t\t\t\t\t\t\tmultiLanguage\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t`)).data,r=n.presences[0].metadata,i=[n.presences[0].presenceJs,r.iframe?n.presences[0].iframeJs:void 0].filter((t=>t));e[a].metadata=r,e[a].presence=i[0],2==i.length&&(e[a].iframe=i[1])}))).then((()=>{chrome.storage.local.set({presences:[...e]},(()=>{a.map((e=>(0,r.Vp)("presenceDevManager.ts",`Updated ${e.name} from v${e.version} to v${t.find((t=>t.name===e.name)).version}`)))}));const s=a.map((t=>t.name));e.filter((t=>s.includes(t.metadata.service))).forEach((async t=>{await d(t);const e="pSettings_"+t.metadata.service,a=(await(0,i.c)("local",e))[e];if(a){const t=a.find((t=>void 0!==t.multiLanguage));if(t&&t.values){const e=t.values.map((t=>t.value));await Promise.all(e.map((t=>(0,n.cc)(t,!0))))}}}))}))}async function c(){let t={detail:(await(0,i.c)("local","presences")).presences.filter((t=>!t.tmp)).map((t=>t.metadata.service))};"function"==typeof cloneInto&&(t=cloneInto(t,document.defaultView));const e=new CustomEvent("PreMiD_GetWebisteFallback",t);window.dispatchEvent(e)}async function d(t){if(t.metadata.settings){const e=t.metadata.settings.findIndex((t=>void 0!==t.multiLanguage));if(e>=0){const a=t.metadata.settings[e],r=await async function(t,e){switch(typeof t){case"boolean":if(!0===t)return await p(e);break;case"string":return await p(t);case"object":if(t instanceof Array){let e=[];for(const a of t)if("string"==typeof a&&a.trim().length>0){const t=await p(a);e=0===e.length?t:e.filter((e=>t.findIndex((t=>t===e))>=0))}return e}}}(a.multiLanguage,t.metadata.service);Object.keys(r).length>1?await async function(t,e){const a=t.metadata.settings.find((t=>void 0!==t.multiLanguage));let r=(await(0,i.c)("local","pSettings_"+t.metadata.service))["pSettings_"+t.metadata.service];if(!r&&t.metadata.settings&&(r=t.metadata.settings),!r.find((t=>t.id===a.id&&t.values&&t.values.length>0))){const s=chrome.i18n.getUILanguage(),i=e.find((t=>t.value===s));a.title=await(0,n.KF)("general.language",s),a.icon="fas fa-language",a.value=i?i.value:n.ZW,a.values=e;const o=r.findIndex((t=>t.id===a.id));r[o]=a,chrome.storage.local.set(JSON.parse(JSON.stringify({["pSettings_"+t.metadata.service]:r})))}}(t,r):t.metadata.settings.splice(e,1)}}}async function p(t){const e=[],a=await(0,n.r2)(t);for(const t of a)e.push({name:await(0,n.KF)("name",t),value:t});return e}"/_generated_background_page.html"!==document.location.pathname&&(document.addEventListener("DOMContentLoaded",(()=>{document.querySelector("#app")&&document.querySelector("#app").setAttribute("extension-ready","true")})),window.addEventListener("PreMiD_AddPresence",(function(t){!async function(t){let e=(await(0,i.c)("local","presences")).presences;if(e||(e=[]),"string"==typeof t){if(e.filter((t=>!t.tmp)).find((e=>e.metadata.service===t)))return void(0,r.vU)("presenceManager",`Presence ${t} already added.`)}else{const a=t.filter((t=>!e.map((t=>t.metadata.service)).includes(t)));if(0===a.length)return void(0,r.vU)("presenceManager","Presences already added.");t=a}if("string"==typeof t)(0,s.L)(t).then((async({data:t})=>{if(void 0!==t.metadata.button&&!t.metadata.button)return;const a=(await(0,s.Z)(`\n\t\t\t\t\t\tquery {\n\t\t\t\t\t\t\tpresences(service: "${t.metadata.service}") {\n    \t\t\t\t\tpresenceJs\n    \t\t\t\t\tiframeJs\n    \t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`)).data.presences[0],n={metadata:t.metadata,presence:a.presenceJs,enabled:!0};void 0!==t.metadata.iframe&&t.metadata.iframe&&(n.iframe=a.iframeJs),e.push(n),chrome.storage.local.set({presences:e}),e.map((t=>{t.metadata.settings&&chrome.storage.local.set({["pSettings_"+t.metadata.service]:t.metadata.settings})}))})).catch((()=>{}));else{const a=(await Promise.all((await Promise.all(t.map((t=>(0,s.L)(t))))).map((async({data:t})=>{if(void 0!==t.metadata.button&&!t.metadata.button)return;const e=(await(0,s.Z)(`\n\t\t\t\t\t\tquery {\n\t\t\t\t\t\t\tpresences(service: "${t.metadata.service}") {\n    \t\t\t\t\tpresenceJs\n    \t\t\t\t\tiframeJs\n    \t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t`)).data.presences[0],a={metadata:t.metadata,presence:e.presenceJs,enabled:!0};return void 0!==t.metadata.iframe&&t.metadata.iframe&&(a.iframe=e.iframeJs),a})))).filter((t=>void 0!==t));chrome.storage.local.set({presences:e.concat(a)}),e.concat(a).map((t=>{t.metadata.settings&&(chrome.storage.local.set({["pSettings_"+t.metadata.service]:t.metadata.settings}),d(t))}))}o(),(0,n.IG)(chrome.i18n.getUILanguage())}([t.detail])})),window.addEventListener("PreMiD_RemovePresence",(async function(t){const{presences:e}=await(0,i.c)("local","presences");chrome.storage.local.set({presences:e.filter((e=>e.metadata.service!==t.detail))}),o(),(0,n.IG)(chrome.i18n.getUILanguage())})),window.addEventListener("PreMiD_GetPresenceList",c),chrome.storage.onChanged.addListener((t=>{"presences"===Object.keys(t)[0]&&c()})))},6442:(t,e,a)=>{var n=a(6693);"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(5346).Z)("638326fe",n,!1,{})},425:(t,e,a)=>{var n=a(9291);"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(5346).Z)("42982157",n,!1,{})},6252:(t,e,a)=>{var n=a(8783);"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(5346).Z)("6ea84ffb",n,!1,{})},2803:(t,e,a)=>{var n=a(410);"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(5346).Z)("e4d421d0",n,!1,{})},5212:(t,e,a)=>{var n=a(3260);"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals),(0,a(5346).Z)("84a7f43c",n,!1,{})}},e={};function a(n){if(e[n])return e[n].exports;var r=e[n]={id:n,exports:{}};return t[n].call(r.exports,r,r.exports,a),r.exports}return a.m=t,a.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return a.d(e,{a:e}),e},a.d=(t,e)=>{for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),a.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t={379:0,293:0},e=[[58,999]],n=()=>{};function r(){for(var n,r=0;r<e.length;r++){for(var s=e[r],i=!0,o=1;o<s.length;o++){var c=s[o];0!==t[c]&&(i=!1)}i&&(e.splice(r--,1),n=a(a.s=s[0]))}return 0===e.length&&(a.x(),a.x=()=>{}),n}a.x=()=>{a.x=()=>{},i=i.slice();for(var t=0;t<i.length;t++)s(i[t]);return(n=r)()};var s=r=>{for(var s,i,[c,d,p,l]=r,f=0,g=[];f<c.length;f++)i=c[f],a.o(t,i)&&t[i]&&g.push(t[i][0]),t[i]=0;for(s in d)a.o(d,s)&&(a.m[s]=d[s]);for(p&&p(a),o(r);g.length;)g.shift()();return l&&e.push.apply(e,l),n()},i=self.webpackChunkpmd=self.webpackChunkpmd||[],o=i.push.bind(i);i.push=s})(),a.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9hcHAudnVlP2NiYzQiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9jaGVja2JveC52dWU/NDNkOCIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL2N1c3RvbVNlbGVjdC52dWU/ZDFiMyIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL25hdmlnYXRpb24udnVlPzE1MzUiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvc2V0dGluZ3MudnVlPzlmMWIiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2NvbmZpZy50cyIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9hcHAudnVlPzA5M2QiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9uYXZpZ2F0aW9uLnZ1ZT82MGNlIiwid2VicGFjazovL3BtZC8uL3NyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvY2hlY2tib3gudnVlPzE5MDkiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9jaGVja2JveC52dWU/NGIwMyIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL2NoZWNrYm94LnZ1ZT82ZTdlIiwid2VicGFjazovL3BtZC8uL3NyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvY2hlY2tib3gudnVlIiwid2VicGFjazovL3BtZC8uL3NyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvbmF2aWdhdGlvbi52dWU/ZDVkZSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL25hdmlnYXRpb24udnVlPzAzODciLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9uYXZpZ2F0aW9uLnZ1ZSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9hcHAudnVlP2I2M2UiLCJ3ZWJwYWNrOi8vcG1kL3NyYy9odG1sL3BvcHVwL2FwcC52dWUiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvYXBwLnZ1ZSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9zZXR0aW5ncy52dWU/ZDVkNSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL2N1c3RvbVNlbGVjdC52dWU/MTY3OCIsIndlYnBhY2s6Ly9wbWQvc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9jdXN0b21TZWxlY3QudnVlIiwid2VicGFjazovL3BtZC8uL3NyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvY3VzdG9tU2VsZWN0LnZ1ZT8wYTNiIiwid2VicGFjazovL3BtZC8uL3NyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvY3VzdG9tU2VsZWN0LnZ1ZSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9zZXR0aW5ncy52dWU/YWJlZiIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9zZXR0aW5ncy52dWU/ZTljMyIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9zZXR0aW5ncy52dWUiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvYXBwLnRzIiwid2VicGFjazovL3BtZC8uL3NyYy91dGlsL2RlYnVnLnRzIiwid2VicGFjazovL3BtZC8uL3NyYy91dGlsL2Z1bmN0aW9ucy9hc3luY1N0b3JhZ2UudHMiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL3V0aWwvZnVuY3Rpb25zL2NsZWFuT2JqZWN0LnRzIiwid2VicGFjazovL3BtZC8uL3NyYy91dGlsL2Z1bmN0aW9ucy9ncmFwaHFsLnRzIiwid2VicGFjazovL3BtZC8uL3NyYy91dGlsL2xhbmdNYW5hZ2VyLnRzIiwid2VicGFjazovL3BtZC8uL3NyYy91dGlsL3ByZXNlbmNlTWFuYWdlci50cyIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9hcHAudnVlP2U0MGQiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvY29tcG9uZW50cy9jaGVja2JveC52dWU/MTYzZSIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL2N1c3RvbVNlbGVjdC52dWU/MDU0NCIsIndlYnBhY2s6Ly9wbWQvLi9zcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL25hdmlnYXRpb24udnVlP2EwOWIiLCJ3ZWJwYWNrOi8vcG1kLy4vc3JjL2h0bWwvcG9wdXAvc2V0dGluZ3MudnVlP2I5YWMiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3BtZC93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3BtZC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vcG1kL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJhcGlCYXNlIiwicmVsZWFzZVR5cGUiLCJyZW5kZXIiLCJfdm0iLCJ0aGlzIiwiX2giLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJfdiIsIl93aXRoU3RyaXBwZWQiLCJhdHRycyIsImRyYWdnYWJsZSIsInNyYyIsIm5hbWUiLCJzaG93V2FybmluZ0Vycm9yIiwiY2xhc3MiLCIkc3RvcmUiLCJzdGF0ZSIsImNvbm5lY3RlZCIsIm9uIiwibW91c2VlbnRlciIsIiRldmVudCIsImhvdmVySW5mbyIsIm1vdXNlbGVhdmUiLCJfZSIsImRpcmVjdGl2ZXMiLCJyYXdOYW1lIiwidmFsdWUiLCJleHByZXNzaW9uIiwib25MaW5lIiwiYXBwVmVyc2lvblN1cHBvcnRlZCIsImxhdGVzdEV4dGVuc2lvblZlcnNpb24iLCJ1cmdlbnRVcGRhdGUiLCJsYXRlc3RWZXJzaW9uIiwiZG9tUHJvcHMiLCJpbm5lckhUTUwiLCJfcyIsImluZm9NZXNzYWdlIiwiaG92ZXJVc2VyIiwidXNlckF2YXRhciIsImNsaWNrIiwidXNlckNsaWNrIiwic3RhdGljQ2xhc3MiLCJjaGVja2VkIiwic2V0dGluZ3MiLCJuYXRpdmVPbiIsImNoYW5nZSIsInVwZGF0ZVNldHRpbmciLCJwbGF0Zm9ybSIsImluY2x1ZGVzIiwiaXNDaGVja2VkIiwidHlwZSIsIkFycmF5IiwiaXNBcnJheSIsIl9pIiwiJCRhIiwiJCRlbCIsInRhcmdldCIsIiQkYyIsIiQkaSIsImNvbmNhdCIsInNsaWNlIiwidXBkYXRlIiwic3R5bGUiLCJiZ0NvbG9yIiwibm9iQ29sb3IiLCJwcm9wcyIsImNvbXB1dGVkIiwiY29sb3IiLCJ0aW55Y29sb3IiLCJnZXRCcmlnaHRuZXNzIiwiYnJpZ2h0ZW4iLCJkYXJrZW4iLCJ3YXRjaCIsIm1ldGhvZHMiLCIkZW1pdCIsImNvbXBvbmVudCIsIm9wdGlvbnMiLCJfX2ZpbGUiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJPYmplY3QiLCJhc3NpZ24iLCJrZXlzIiwibWFwIiwiayIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldHRpbmdzUG9wdXAiLCJ1cGRhdGVPbmxpbmVTdGF0dXMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29tcG9uZW50cyIsImNoZWNrYm94IiwiJHQiLCJyZWdFeHAiLCJub3RDb25uZWN0ZWRTdHJpbmciLCJtc2ciLCJ0ZXN0IiwiJHJvb3QiLCIkb3B0aW9ucyIsImkxOG4iLCJmYWxsYmFja0xvY2FsZSIsIm1hdGNoIiwicmVwbGFjZSIsImxlbmd0aCIsInNldHRpbmciLCJjb21taXQiLCJtb2RlIiwiaW5QcmVzZW5jZVNldHRpbmdzVmlldyIsImtleSIsInBTZXR0aW5nc1ByZXNlbmNlIiwibWV0YWRhdGEiLCJ0aHVtYm5haWwiLCJsb2dvIiwidGV4dENvbnRlbnQiLCJzZXJ2aWNlIiwicHJlc2VuY2VEZXNjcmlwdGlvbiIsInJlZiIsIl9sIiwic2V0dGluZ3NGaWx0ZXJlZCIsImkiLCJtdWx0aUxhbmd1YWdlIiwidmFsdWVzIiwidGl0bGUiLCJpY29uIiwidXBkYXRlUHJlc2VuY2VTZXR0aW5nIiwicmVmSW5Gb3IiLCJzcGVsbGNoZWNrIiwicGxhY2Vob2xkZXIiLCJzZWxlY3RlZCIsImFjdGl2ZSIsInNlbGVjdFRvZ2dsZSIsImluYWN0aXZlIiwiZGVmYXVsdEFkZGVkIiwic2hpZnRQcmVzc2VkIiwibG9hZFByZXNlbmNlIiwicHJlc2VuY2VzIiwic2hvd0RlbGV0ZSIsInNob3dDYXRlZ29yaWVzIiwic3RhdGljU3R5bGUiLCJtb3VzZXdoZWVsIiwiY2F0U2Nyb2xsIiwibW91c2Vkb3duIiwibW91c2V1cCIsIm1vdXNlbW92ZSIsImNhdE1Eb3duIiwiZmlsdGVyZWRDYXRlZ29yaWVzIiwiY2F0ZWdvcnkiLCJhY3RpdmVDYXRlZ29yeSIsInRleHQiLCJsb2FkaW5nUHJlc2VuY2VzIiwibG9hZGluZ1N0cmluZyIsImZpbHRlcmVkUHJlc2VuY2VzIiwicHJlc2VuY2UiLCJ0bXAiLCJub0NvZyIsInRvZ2dsZVByZXNlbmNlU2V0dGluZ3MiLCJtZXRhVGFnIiwiZGVsZXRlUHJlc2VuY2UiLCJlbmFibGVkIiwidXBkYXRlUHJlc2VuY2UiLCJyZWluaXQiLCJocmVmIiwidG9nZ2xlQWN0aXZlIiwibWF4SGVpZ2h0Iiwic2VsZWN0SGVpZ2h0IiwiJHByb3BzIiwiZmluZCIsImwiLCJERUZBVUxUX0xPQ0FMRSIsImZpbHRlciIsIm8iLCJzIiwiZXZlbnRzIiwiZGF0YSIsImV2ZW50VHlwZSIsInNldFRpbWVvdXQiLCIkcmVmcyIsIndyYXBwZXIiLCJtb3VudGVkIiwiY2xpZW50UmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIk1hdGgiLCJtYXgiLCJpbm5lckhlaWdodCIsInkiLCJjdXN0b21TZWxlY3QiLCJjYXRTdGFydFgiLCJjYXRTY3JvbGxMZWZ0IiwiY2F0ZWdvcmllcyIsIiRpMThuIiwidCIsInBTZXR0aW5ncyIsInByZXNlbmNlU2V0dGluZ3MiLCJuZXdWYWx1ZSIsIm9sZFZhbHVlIiwibmV3UHJlc2VuY2VzIiwicCIsIm5ld1ByZXNlbmNlIiwiaW5pdFByZXNlbmNlTGFuZ3VhZ2VzIiwiZmluZEluZGV4IiwiJGZvcmNlVXBkYXRlIiwiaGlkZGVuIiwiYyIsInNvcnQiLCJhIiwiYiIsInRvTG93ZXJDYXNlIiwiZmlsdGVyZWQiLCJjYXQiLCJzb21lIiwiZGVzY3JpcHRpb24iLCJjaHJvbWUiLCJnZXRVSUxhbmd1YWdlIiwiZW4iLCJleGVjIiwiaWYiLCJldmVyeSIsInNpIiwicG9ydCIsInBvc3RNZXNzYWdlIiwiYWN0aW9uIiwiZSIsImV2ZW50IiwiZWwiLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsTGVmdCIsImRlbHRhWSIsInBhZ2VYIiwib2Zmc2V0TGVmdCIsInN0b3JhZ2UiLCJsb2NhbCIsInNldCIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInByZXNlbmNlVG9SZW1vdmUiLCJwbWQiLCJnZXRTdG9yYWdlIiwicmVtb3ZlIiwic3RvcmFnZUxuZ3NTZXR0aW5nc0lkeCIsInByZXNlbmNlTG5nc1NldHRpbmdzIiwic3BsaWNlIiwic2hpZnRLZXkiLCJ0cmltIiwidGV4dEFycmF5IiwibGFuZ3VhZ2VzIiwibG9hZGluZyIsInNwbGl0IiwicmFuZG9tTnVtYmVyIiwiZmxvb3IiLCJyYW5kb20iLCJkaWZmIiwiYm90dG9tIiwic2V0dGluZ3NDb250YWluZXIiLCJwYWRkaW5nQm90dG9tIiwicnVudGltZSIsImNvbm5lY3QiLCJvbk1lc3NhZ2UiLCJhZGRMaXN0ZW5lciIsInN1Y2Nlc3MiLCJsb2NhdGlvbiIsInJlbG9hZCIsImNyZWF0ZWQiLCJhc3luYyIsInJhbmRvbUxvYWRpbmdTdHJpbmciLCJQcm9taXNlIiwiYWxsIiwib25DaGFuZ2VkIiwiZm9yRWFjaCIsImtEb3duIiwiYmVmb3JlRGVzdHJveSIsIm9ubG9hZCIsImRpc2NvcmRVc2VyIiwibG9jYWxlIiwibWVzc2FnZXMiLCJnZXRTdHJpbmdzIiwic2lsZW50VHJhbnNsYXRpb25XYXJuIiwiaCIsImFwcCIsInN0b3JlIiwiYXZhdGFyIiwibXV0YXRpb25zIiwicGF5bG9hZCIsInN5bmMiLCJyb3V0ZXIiLCJyb3V0ZXMiLCJwYXRoIiwicmVkaXJlY3QiLCIkbW91bnQiLCJnZW5lcmljU3R5bGUiLCJkZWJ1Z2dpbmciLCJsYXN0RmlsZSIsImZpbGUiLCJtZXNzYWdlIiwiZm9yY2UiLCJncm91cEZpbGUiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJncm91cEVuZCIsImdyb3VwIiwicmVzb2x2ZSIsImdldCIsIml0ZW1zIiwiY2xlYW5PYmplY3QiLCJvYmoiLCJwcm9wTmFtZSIsInVuZGVmaW5lZCIsImdyYXBocWxSZXF1ZXN0IiwicXVlcnkiLCJyZXMiLCJ1cmwiLCJtZXRob2QiLCJnZXRQcmVzZW5jZU1ldGFkYXRhIiwicmVzdWx0IiwiTUlOX1VQREFURV9USU1FIiwibm9ybWFsaXplTGFuZ3VhZ2VDb2RlIiwibGFuZ3VhZ2VDb2RlIiwidXBkYXRlU3RyaW5ncyIsIndlYnNpdGVMYW5ndWFnZSIsImV4dGVuc2lvbkxhbmd1YWdlIiwicHJlc2VuY2VMYW5ndWFnZSIsImF2YWlsYWJsZUxhbmdzIiwibGFuZ0ZpbGVzIiwibGYiLCJsYW5nIiwiaW5kZXgiLCJncmFwaHFsUmVzdWx0Iiwid2Vic2l0ZSIsInRyYW5zbGF0aW9ucyIsImV4dGVuc2lvbiIsInVwZGF0ZWRBdCIsIkRhdGUiLCJub3ciLCJsb2FkaW5nTGFuZ3MiLCJsb2FkU3RyaW5ncyIsImxvYWRTdGF0dXMiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJsbmdzIiwidXBkYXRlUHJvbWlzZXMiLCJpbmRleE9mIiwiZ2V0U3RyaW5nIiwic3RyaW5nIiwiZ2V0UHJlc2VuY2VMYW5ndWFnZXMiLCJwcmVzZW5jZU5hbWUiLCJsYW5ncyIsImZpbmFsQXJyYXkiLCJnZW5lcmFsTGFuZ0ZpbGVzIiwidXBkYXRlUHJlc2VuY2VzIiwicHJlc2VuY2VWZXJzaW9ucyIsImVsZW1lbnQiLCJ2ZXJzaW9uIiwicHJlc2VuY2VzVG9VcGRhdGUiLCJwMSIsInByZXNlbmNlSW5kZXgiLCJmaWxlcyIsInByZXNlbmNlSnMiLCJpZnJhbWUiLCJpZnJhbWVKcyIsImYiLCJ0aGVuIiwicHJlc2VuY2VOYW1lc1RvVXBkYXRlIiwic2V0dGluZ05hbWUiLCJsYW5nU2V0dGluZ3MiLCJ2Iiwic2VuZEJhY2tQcmVzZW5jZXMiLCJkZXRhaWwiLCJjbG9uZUludG8iLCJkZWZhdWx0VmlldyIsIkN1c3RvbUV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsImxuZ1NldHRpbmdJZHgiLCJsbmdTZXR0aW5nIiwiY29tbW9uTG5ncyIsInByZWZpeCIsImNsIiwicHJlc2VuY2VNdWx0aUxhbmd1YWdlTGFuZ3VhZ2VzIiwidWlMYW5nIiwicHJlZmVycmVkVmFsdWUiLCJzdG9yZURlZmF1bHRMYW5ndWFnZU9mUHJlc2VuY2UiLCJzZXJ2aWNlTmFtZSIsImxhbmd1YWdlIiwicGF0aG5hbWUiLCJzZXRBdHRyaWJ1dGUiLCJidXR0b24iLCJwcmVzZW5jZUFuZElmcmFtZSIsImNhdGNoIiwicHJlc2VuY2VzVG9BZGQiLCJhZGRQcmVzZW5jZSIsImNvbnRlbnQiLCJsb2NhbHMiLCJhZGQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiY2FsbCIsIm0iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJkZWZpbml0aW9uIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImluc3RhbGxlZENodW5rcyIsIjM3OSIsIjI5MyIsImRlZmVycmVkTW9kdWxlcyIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwiY2hlY2tEZWZlcnJlZE1vZHVsZXNJbXBsIiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJ4IiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwid2VicGFja0pzb25wQ2FsbGJhY2siLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwicmVzb2x2ZXMiLCJwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiIsInNoaWZ0IiwiYXBwbHkiLCJzZWxmIiwiYmluZCJdLCJtYXBwaW5ncyI6InlDQUVBQSxFQURrQyxFQUFRLEtBQ2hDQyxFQUE0QixJQUU5QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDZxRUFBZ3NFLEtBRXp0RUQsRUFBT0gsUUFBVUEsRyxnQkNKakJBLEVBRGtDLEVBQVEsS0FDaENDLEVBQTRCLElBRTlCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksMC9GQUErZ0csS0FFeGlHRCxFQUFPSCxRQUFVQSxHLGdCQ0pqQkEsRUFEa0MsRUFBUSxLQUNoQ0MsRUFBNEIsSUFFOUJDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxvMkdBQXkzRyxLQUVsNUdELEVBQU9ILFFBQVVBLEcsZUNKakJBLEVBRGtDLEVBQVEsS0FDaENDLEVBQTRCLElBRTlCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUksK21LQUF3b0ssS0FFanFLRCxFQUFPSCxRQUFVQSxHLGdCQ0pqQkEsRUFEa0MsRUFBUSxLQUNoQ0MsRUFBNEIsSUFFOUJDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx1clRBQThzVCxLQUV2dVRELEVBQU9ILFFBQVVBLEcsdURDTlYsTUFBTUssRUFBVSw2QkFDVkMsRUFBb0QsVywyRUNEN0RDLEVBQVMsV0FDWCxJ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aUJBQUssR0FDMUVILEVBQTZCUCxFQUFtQi9hLEtBQUswYixLQUFLWCxHQUM5REEsRUFBbUIvYSxLQUFPZ2IsRyxHTnpGbkJqQyxFQUFvQitCLEsiLCJmaWxlIjoiaHRtbC9wb3B1cC9hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKjpub3QoaSl7Zm9udC1mYW1pbHk6SW50ZXJ9Ojotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDo4cHg7aGVpZ2h0OjAuNnJlbX06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6IzIzMjcyYTtib3JkZXI6bm9uZX06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1ie3RyYW5zaXRpb246YmFja2dyb3VuZCAwLjE1cyBlYXNlLW91dDtib3JkZXI6M3B4IHNvbGlkICMyMzI3MmE7Ym9yZGVyLXJhZGl1czoyMHB4O2JhY2tncm91bmQ6IzUxNWI2Mn06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVye2JhY2tncm91bmQ6IzVkNjg3MH06Oi13ZWJraXQtc2Nyb2xsYmFyLWNvcm5lcntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fTo6c2VsZWN0aW9ue2JhY2tncm91bmQtY29sb3I6IzcyODlkYTtjb2xvcjp3aGl0ZX0ubGlua3tjb2xvcjojNzI4OWRhO3RleHQtZGVjb3JhdGlvbjpub25lO2ZvbnQtd2VpZ2h0OjYwMH0qe3Njcm9sbGJhci1jb2xvcjojNTE1YjYyICMyMzI3MmE7c2Nyb2xsYmFyLXdpZHRoOnRoaW59QGtleWZyYW1lcyBwdWxzZVdhcm57MCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMjU1LDI1NSwwLDAuOCl9NzAle2JveC1zaGFkb3c6MCAwIDAgNXB4IHJnYmEoMCwwLDAsMCl9MTAwJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgwLDAsMCwwKX19QGtleWZyYW1lcyBwdWxzZUVycm9yezAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDI1NSw1MCw1MCwwLjgpfTcwJXtib3gtc2hhZG93OjAgMCAwIDVweCByZ2JhKDAsMCwwLDApfTEwMCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMCwwLDAsMCl9fS5zbGlkZURvd24tZW50ZXItYWN0aXZlLC5zbGlkZURvd24tbGVhdmUtYWN0aXZle3RyYW5zaXRpb246YWxsIDAuMTVzO3VzZXItc2VsZWN0Om5vbmV9LnNsaWRlRG93bi1lbnRlciwuc2xpZGVEb3duLWxlYXZlLXRve29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNXB4KTttYXJnaW46MH0uc2xpZGVSaWdodC1lbnRlci1hY3RpdmUsLnNsaWRlUmlnaHQtbGVhdmUtYWN0aXZle3RyYW5zaXRpb246YWxsIDAuMTVzO3VzZXItc2VsZWN0Om5vbmV9LnNsaWRlUmlnaHQtZW50ZXIsLnNsaWRlUmlnaHQtbGVhdmUtdG97b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpO21hcmdpbjowfS5jYXRlZ29yeUhlaWdodC1lbnRlci1hY3RpdmUsLmNhdGVnb3J5SGVpZ2h0LWxlYXZlLWFjdGl2ZXt0cmFuc2l0aW9uOmFsbCAwLjE1czttYXgtaGVpZ2h0OjMwcHh9LmNhdGVnb3J5SGVpZ2h0LWVudGVyLC5jYXRlZ29yeUhlaWdodC1sZWF2ZS10b3tvcGFjaXR5OjA7bWF4LWhlaWdodDowfS5mYWRlLWVudGVyLWFjdGl2ZSwuZmFkZS1sZWF2ZS1hY3RpdmV7dHJhbnNpdGlvbjphbGwgMC4xc30uZmFkZS1lbnRlciwuZmFkZS1sZWF2ZS10b3t0cmFuc2Zvcm06c2NhbGUoMC45KTtvcGFjaXR5OjB9LnBvcC1lbnRlci1hY3RpdmUsLnBvcC1sZWF2ZS1hY3RpdmV7dHJhbnNpdGlvbjphbGwgMC4xNXM7dHJhbnNmb3JtOnNjYWxlKDEpfS5wb3AtZW50ZXIsLnBvcC1sZWF2ZS10b3t0cmFuc2Zvcm06c2NhbGUoMCl9QGZvbnQtZmFjZXtmb250LWZhbWlseTpcXFwiRGlzY29yZCBGb250XFxcIjtmb250LXdlaWdodDo5MDA7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9EaXNjb3JkRm9udEJsYWNrLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpO2ZvbnQtc3R5bGU6bm9ybWFsfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9JbnRlci9JbnRlci1SZWd1bGFyLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7Zm9udC13ZWlnaHQ6NTAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItTWVkaXVtLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7Zm9udC13ZWlnaHQ6NzAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItQm9sZC53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX0qe2ZvbnQtZmFtaWx5OkludGVyO2JveC1zaXppbmc6Ym9yZGVyLWJveDt1c2VyLXNlbGVjdDpub25lfWh0bWwsYm9keXttaW4td2lkdGg6MzAwcHg7bWFyZ2luOjA7cGFkZGluZzowO2JhY2tncm91bmQtY29sb3I6IzIzMjcyYX1oMSxoMixoMyxoNCxoNSxwe21hcmdpbjowO3BhZGRpbmc6MH0ubGlua3t0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDo2MDA7Y29sb3I6IzcyODlkYX1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIipbZGF0YS12LTZkYTAwYTI0XTpub3QoaSl7Zm9udC1mYW1pbHk6SW50ZXJ9W2RhdGEtdi02ZGEwMGEyNF06Oi13ZWJraXQtc2Nyb2xsYmFye3dpZHRoOjhweDtoZWlnaHQ6MC42cmVtfVtkYXRhLXYtNmRhMDBhMjRdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOiMyMzI3MmE7Ym9yZGVyOm5vbmV9W2RhdGEtdi02ZGEwMGEyNF06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1ie3RyYW5zaXRpb246YmFja2dyb3VuZCAwLjE1cyBlYXNlLW91dDtib3JkZXI6M3B4IHNvbGlkICMyMzI3MmE7Ym9yZGVyLXJhZGl1czoyMHB4O2JhY2tncm91bmQ6IzUxNWI2Mn1bZGF0YS12LTZkYTAwYTI0XTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXJ7YmFja2dyb3VuZDojNWQ2ODcwfVtkYXRhLXYtNmRhMDBhMjRdOjotd2Via2l0LXNjcm9sbGJhci1jb3JuZXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1bZGF0YS12LTZkYTAwYTI0XTo6c2VsZWN0aW9ue2JhY2tncm91bmQtY29sb3I6IzcyODlkYTtjb2xvcjp3aGl0ZX0ubGlua1tkYXRhLXYtNmRhMDBhMjRde2NvbG9yOiM3Mjg5ZGE7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC13ZWlnaHQ6NjAwfSpbZGF0YS12LTZkYTAwYTI0XXtzY3JvbGxiYXItY29sb3I6IzUxNWI2MiAjMjMyNzJhO3Njcm9sbGJhci13aWR0aDp0aGlufUBrZXlmcmFtZXMgcHVsc2VXYXJuLWRhdGEtdi02ZGEwMGEyNHswJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgyNTUsMjU1LDAsMC44KX03MCV7Ym94LXNoYWRvdzowIDAgMCA1cHggcmdiYSgwLDAsMCwwKX0xMDAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLDApfX1Aa2V5ZnJhbWVzIHB1bHNlRXJyb3ItZGF0YS12LTZkYTAwYTI0ezAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDI1NSw1MCw1MCwwLjgpfTcwJXtib3gtc2hhZG93OjAgMCAwIDVweCByZ2JhKDAsMCwwLDApfTEwMCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMCwwLDAsMCl9fS5zbGlkZURvd24tZW50ZXItYWN0aXZlW2RhdGEtdi02ZGEwMGEyNF0sLnNsaWRlRG93bi1sZWF2ZS1hY3RpdmVbZGF0YS12LTZkYTAwYTI0XXt0cmFuc2l0aW9uOmFsbCAwLjE1czt1c2VyLXNlbGVjdDpub25lfS5zbGlkZURvd24tZW50ZXJbZGF0YS12LTZkYTAwYTI0XSwuc2xpZGVEb3duLWxlYXZlLXRvW2RhdGEtdi02ZGEwMGEyNF17b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01cHgpO21hcmdpbjowfS5zbGlkZVJpZ2h0LWVudGVyLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRdLC5zbGlkZVJpZ2h0LWxlYXZlLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRde3RyYW5zaXRpb246YWxsIDAuMTVzO3VzZXItc2VsZWN0Om5vbmV9LnNsaWRlUmlnaHQtZW50ZXJbZGF0YS12LTZkYTAwYTI0XSwuc2xpZGVSaWdodC1sZWF2ZS10b1tkYXRhLXYtNmRhMDBhMjRde29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMDAlKTttYXJnaW46MH0uY2F0ZWdvcnlIZWlnaHQtZW50ZXItYWN0aXZlW2RhdGEtdi02ZGEwMGEyNF0sLmNhdGVnb3J5SGVpZ2h0LWxlYXZlLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRde3RyYW5zaXRpb246YWxsIDAuMTVzO21heC1oZWlnaHQ6MzBweH0uY2F0ZWdvcnlIZWlnaHQtZW50ZXJbZGF0YS12LTZkYTAwYTI0XSwuY2F0ZWdvcnlIZWlnaHQtbGVhdmUtdG9bZGF0YS12LTZkYTAwYTI0XXtvcGFjaXR5OjA7bWF4LWhlaWdodDowfS5mYWRlLWVudGVyLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRdLC5mYWRlLWxlYXZlLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRde3RyYW5zaXRpb246YWxsIDAuMXN9LmZhZGUtZW50ZXJbZGF0YS12LTZkYTAwYTI0XSwuZmFkZS1sZWF2ZS10b1tkYXRhLXYtNmRhMDBhMjRde3RyYW5zZm9ybTpzY2FsZSgwLjkpO29wYWNpdHk6MH0ucG9wLWVudGVyLWFjdGl2ZVtkYXRhLXYtNmRhMDBhMjRdLC5wb3AtbGVhdmUtYWN0aXZlW2RhdGEtdi02ZGEwMGEyNF17dHJhbnNpdGlvbjphbGwgMC4xNXM7dHJhbnNmb3JtOnNjYWxlKDEpfS5wb3AtZW50ZXJbZGF0YS12LTZkYTAwYTI0XSwucG9wLWxlYXZlLXRvW2RhdGEtdi02ZGEwMGEyNF17dHJhbnNmb3JtOnNjYWxlKDApfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6XFxcIkRpc2NvcmQgRm9udFxcXCI7Zm9udC13ZWlnaHQ6OTAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvRGlzY29yZEZvbnRCbGFjay53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKTtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItUmVndWxhci53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO2ZvbnQtd2VpZ2h0OjUwMDtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0ludGVyL0ludGVyLU1lZGl1bS53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO2ZvbnQtd2VpZ2h0OjcwMDtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0ludGVyL0ludGVyLUJvbGQud29mZjJcXFwiKSBmb3JtYXQoXFxcIndvZmYyXFxcIil9I2NoZWNrYm94W2RhdGEtdi02ZGEwMGEyNF17Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jazt3aWR0aDozNXB4O2hlaWdodDoxNXB4fSNjaGVja2JveCBpbnB1dFtkYXRhLXYtNmRhMDBhMjRde3Bvc2l0aW9uOmFic29sdXRlO29wYWNpdHk6MDtoZWlnaHQ6MDt3aWR0aDowfSNjaGVja2JveCBpbnB1dDpjaGVja2VkIH4gI2NoZWNrbWFyayBzcGFuW2RhdGEtdi02ZGEwMGEyNF17bGVmdDoxNXB4fSNjaGVja2JveCAjY2hlY2ttYXJrW2RhdGEtdi02ZGEwMGEyNF17dHJhbnNpdGlvbjowLjE1cyBhbGwgZWFzZS1vdXQ7Ym9yZGVyLXJhZGl1czoxNXB4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlfSNjaGVja2JveCAjY2hlY2ttYXJrIHNwYW5bZGF0YS12LTZkYTAwYTI0XXt0cmFuc2l0aW9uOjAuMTVzIGFsbCBlYXNlLW91dDtjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlO3RvcDotMnB4O2xlZnQ6LTVweDt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O2JvcmRlci1yYWRpdXM6MTBweH1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpO1xuZXhwb3J0cyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIipbZGF0YS12LTdkYTUxYzc4XTpub3QoaSl7Zm9udC1mYW1pbHk6SW50ZXJ9W2RhdGEtdi03ZGE1MWM3OF06Oi13ZWJraXQtc2Nyb2xsYmFye3dpZHRoOjhweDtoZWlnaHQ6MC42cmVtfVtkYXRhLXYtN2RhNTFjNzhdOjotd2Via2l0LXNjcm9sbGJhci10cmFja3tiYWNrZ3JvdW5kOiMyMzI3MmE7Ym9yZGVyOm5vbmV9W2RhdGEtdi03ZGE1MWM3OF06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1ie3RyYW5zaXRpb246YmFja2dyb3VuZCAwLjE1cyBlYXNlLW91dDtib3JkZXI6M3B4IHNvbGlkICMyMzI3MmE7Ym9yZGVyLXJhZGl1czoyMHB4O2JhY2tncm91bmQ6IzUxNWI2Mn1bZGF0YS12LTdkYTUxYzc4XTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXJ7YmFja2dyb3VuZDojNWQ2ODcwfVtkYXRhLXYtN2RhNTFjNzhdOjotd2Via2l0LXNjcm9sbGJhci1jb3JuZXJ7YmFja2dyb3VuZDp0cmFuc3BhcmVudH1bZGF0YS12LTdkYTUxYzc4XTo6c2VsZWN0aW9ue2JhY2tncm91bmQtY29sb3I6IzcyODlkYTtjb2xvcjp3aGl0ZX0ubGlua1tkYXRhLXYtN2RhNTFjNzhde2NvbG9yOiM3Mjg5ZGE7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC13ZWlnaHQ6NjAwfSpbZGF0YS12LTdkYTUxYzc4XXtzY3JvbGxiYXItY29sb3I6IzUxNWI2MiAjMjMyNzJhO3Njcm9sbGJhci13aWR0aDp0aGlufUBrZXlmcmFtZXMgcHVsc2VXYXJuLWRhdGEtdi03ZGE1MWM3OHswJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgyNTUsMjU1LDAsMC44KX03MCV7Ym94LXNoYWRvdzowIDAgMCA1cHggcmdiYSgwLDAsMCwwKX0xMDAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLDApfX1Aa2V5ZnJhbWVzIHB1bHNlRXJyb3ItZGF0YS12LTdkYTUxYzc4ezAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDI1NSw1MCw1MCwwLjgpfTcwJXtib3gtc2hhZG93OjAgMCAwIDVweCByZ2JhKDAsMCwwLDApfTEwMCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMCwwLDAsMCl9fS5zbGlkZURvd24tZW50ZXItYWN0aXZlW2RhdGEtdi03ZGE1MWM3OF0sLnNsaWRlRG93bi1sZWF2ZS1hY3RpdmVbZGF0YS12LTdkYTUxYzc4XXt0cmFuc2l0aW9uOmFsbCAwLjE1czt1c2VyLXNlbGVjdDpub25lfS5zbGlkZURvd24tZW50ZXJbZGF0YS12LTdkYTUxYzc4XSwuc2xpZGVEb3duLWxlYXZlLXRvW2RhdGEtdi03ZGE1MWM3OF17b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01cHgpO21hcmdpbjowfS5zbGlkZVJpZ2h0LWVudGVyLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhdLC5zbGlkZVJpZ2h0LWxlYXZlLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhde3RyYW5zaXRpb246YWxsIDAuMTVzO3VzZXItc2VsZWN0Om5vbmV9LnNsaWRlUmlnaHQtZW50ZXJbZGF0YS12LTdkYTUxYzc4XSwuc2xpZGVSaWdodC1sZWF2ZS10b1tkYXRhLXYtN2RhNTFjNzhde29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWCgxMDAlKTttYXJnaW46MH0uY2F0ZWdvcnlIZWlnaHQtZW50ZXItYWN0aXZlW2RhdGEtdi03ZGE1MWM3OF0sLmNhdGVnb3J5SGVpZ2h0LWxlYXZlLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhde3RyYW5zaXRpb246YWxsIDAuMTVzO21heC1oZWlnaHQ6MzBweH0uY2F0ZWdvcnlIZWlnaHQtZW50ZXJbZGF0YS12LTdkYTUxYzc4XSwuY2F0ZWdvcnlIZWlnaHQtbGVhdmUtdG9bZGF0YS12LTdkYTUxYzc4XXtvcGFjaXR5OjA7bWF4LWhlaWdodDowfS5mYWRlLWVudGVyLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhdLC5mYWRlLWxlYXZlLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhde3RyYW5zaXRpb246YWxsIDAuMXN9LmZhZGUtZW50ZXJbZGF0YS12LTdkYTUxYzc4XSwuZmFkZS1sZWF2ZS10b1tkYXRhLXYtN2RhNTFjNzhde3RyYW5zZm9ybTpzY2FsZSgwLjkpO29wYWNpdHk6MH0ucG9wLWVudGVyLWFjdGl2ZVtkYXRhLXYtN2RhNTFjNzhdLC5wb3AtbGVhdmUtYWN0aXZlW2RhdGEtdi03ZGE1MWM3OF17dHJhbnNpdGlvbjphbGwgMC4xNXM7dHJhbnNmb3JtOnNjYWxlKDEpfS5wb3AtZW50ZXJbZGF0YS12LTdkYTUxYzc4XSwucG9wLWxlYXZlLXRvW2RhdGEtdi03ZGE1MWM3OF17dHJhbnNmb3JtOnNjYWxlKDApfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6XFxcIkRpc2NvcmQgRm9udFxcXCI7Zm9udC13ZWlnaHQ6OTAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvRGlzY29yZEZvbnRCbGFjay53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKTtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItUmVndWxhci53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO2ZvbnQtd2VpZ2h0OjUwMDtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0ludGVyL0ludGVyLU1lZGl1bS53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OkludGVyO2ZvbnQtd2VpZ2h0OjcwMDtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0ludGVyL0ludGVyLUJvbGQud29mZjJcXFwiKSBmb3JtYXQoXFxcIndvZmYyXFxcIil9I3NlbGVjdFtkYXRhLXYtN2RhNTFjNzhde2NvbG9yOiM5OWFhYjU7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjI1cHg7bWluLXdpZHRoOjc1cHg7Y3Vyc29yOnBvaW50ZXJ9I3NlbGVjdFtkYXRhLXYtN2RhNTFjNzhdOjphZnRlcntyaWdodDo1cHg7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcXFwiXFxcIjtib3JkZXI6NHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1jb2xvcjojZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O3RvcDoxMXB4fSNzZWxlY3QuYWN0aXZlW2RhdGEtdi03ZGE1MWM3OF06OmFmdGVye2JvcmRlci1jb2xvcjp0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmIHRyYW5zcGFyZW50O3RvcDo2cHh9I3NlbGVjdCAjc2hvd1tkYXRhLXYtN2RhNTFjNzhde2NvbG9yOndoaXRlO21hcmdpbi1yaWdodDoxM3B4O21hcmdpbi1ib3R0b206MnB4fSNzZWxlY3QgI3dyYXBwZXJbZGF0YS12LTdkYTUxYzc4XXtkaXNwbGF5OmdyaWQ7Zm9udC1zaXplOjEycHg7YmFja2dyb3VuZC1jb2xvcjojMjMyNzJhO291dGxpbmU6bm9uZTtib3JkZXItcmFkaXVzOjVweDtib3JkZXI6bm9uZTttaW4taGVpZ2h0OjI1cHg7bWluLXdpZHRoOjc1cHg7cGFkZGluZzo1cHg7b3ZlcmZsb3cteTphdXRvfSNzZWxlY3Qgc3BhbltkYXRhLXYtN2RhNTFjNzhde3RyYW5zaXRpb246MC4xNXMgYWxsIGVhc2Utb3V0fSNzZWxlY3Qgc3BhbltkYXRhLXYtN2RhNTFjNzhdOmhvdmVye2NvbG9yOndoaXRlICFpbXBvcnRhbnR9I3NlbGVjdC5hY3RpdmVbZGF0YS12LTdkYTUxYzc4XXtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjF9I3NlbGVjdC5hY3RpdmUgc3BhbltkYXRhLXYtN2RhNTFjNzhde2Rpc3BsYXk6YmxvY2t9I3NlbGVjdCBzcGFuW2RhdGEtdi03ZGE1MWM3OF17ZGlzcGxheTpub25lfVxcblwiLCBcIlwiXSk7XG4vLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHM7XG4iLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKltkYXRhLXYtNjMxMDFmZmZdOm5vdChpKXtmb250LWZhbWlseTpJbnRlcn1bZGF0YS12LTYzMTAxZmZmXTo6LXdlYmtpdC1zY3JvbGxiYXJ7d2lkdGg6OHB4O2hlaWdodDowLjZyZW19W2RhdGEtdi02MzEwMWZmZl06Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNre2JhY2tncm91bmQ6IzIzMjcyYTtib3JkZXI6bm9uZX1bZGF0YS12LTYzMTAxZmZmXTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWJ7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kIDAuMTVzIGVhc2Utb3V0O2JvcmRlcjozcHggc29saWQgIzIzMjcyYTtib3JkZXItcmFkaXVzOjIwcHg7YmFja2dyb3VuZDojNTE1YjYyfVtkYXRhLXYtNjMxMDFmZmZdOjotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlcntiYWNrZ3JvdW5kOiM1ZDY4NzB9W2RhdGEtdi02MzEwMWZmZl06Oi13ZWJraXQtc2Nyb2xsYmFyLWNvcm5lcntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50fVtkYXRhLXYtNjMxMDFmZmZdOjpzZWxlY3Rpb257YmFja2dyb3VuZC1jb2xvcjojNzI4OWRhO2NvbG9yOndoaXRlfS5saW5rW2RhdGEtdi02MzEwMWZmZl17Y29sb3I6IzcyODlkYTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDo2MDB9KltkYXRhLXYtNjMxMDFmZmZde3Njcm9sbGJhci1jb2xvcjojNTE1YjYyICMyMzI3MmE7c2Nyb2xsYmFyLXdpZHRoOnRoaW59QGtleWZyYW1lcyBwdWxzZVdhcm4tZGF0YS12LTYzMTAxZmZmezAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDI1NSwyNTUsMCwwLjgpfTcwJXtib3gtc2hhZG93OjAgMCAwIDVweCByZ2JhKDAsMCwwLDApfTEwMCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMCwwLDAsMCl9fUBrZXlmcmFtZXMgcHVsc2VFcnJvci1kYXRhLXYtNjMxMDFmZmZ7MCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMjU1LDUwLDUwLDAuOCl9NzAle2JveC1zaGFkb3c6MCAwIDAgNXB4IHJnYmEoMCwwLDAsMCl9MTAwJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgwLDAsMCwwKX19LnNsaWRlRG93bi1lbnRlci1hY3RpdmVbZGF0YS12LTYzMTAxZmZmXSwuc2xpZGVEb3duLWxlYXZlLWFjdGl2ZVtkYXRhLXYtNjMxMDFmZmZde3RyYW5zaXRpb246YWxsIDAuMTVzO3VzZXItc2VsZWN0Om5vbmV9LnNsaWRlRG93bi1lbnRlcltkYXRhLXYtNjMxMDFmZmZdLC5zbGlkZURvd24tbGVhdmUtdG9bZGF0YS12LTYzMTAxZmZmXXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTVweCk7bWFyZ2luOjB9LnNsaWRlUmlnaHQtZW50ZXItYWN0aXZlW2RhdGEtdi02MzEwMWZmZl0sLnNsaWRlUmlnaHQtbGVhdmUtYWN0aXZlW2RhdGEtdi02MzEwMWZmZl17dHJhbnNpdGlvbjphbGwgMC4xNXM7dXNlci1zZWxlY3Q6bm9uZX0uc2xpZGVSaWdodC1lbnRlcltkYXRhLXYtNjMxMDFmZmZdLC5zbGlkZVJpZ2h0LWxlYXZlLXRvW2RhdGEtdi02MzEwMWZmZl17b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpO21hcmdpbjowfS5jYXRlZ29yeUhlaWdodC1lbnRlci1hY3RpdmVbZGF0YS12LTYzMTAxZmZmXSwuY2F0ZWdvcnlIZWlnaHQtbGVhdmUtYWN0aXZlW2RhdGEtdi02MzEwMWZmZl17dHJhbnNpdGlvbjphbGwgMC4xNXM7bWF4LWhlaWdodDozMHB4fS5jYXRlZ29yeUhlaWdodC1lbnRlcltkYXRhLXYtNjMxMDFmZmZdLC5jYXRlZ29yeUhlaWdodC1sZWF2ZS10b1tkYXRhLXYtNjMxMDFmZmZde29wYWNpdHk6MDttYXgtaGVpZ2h0OjB9LmZhZGUtZW50ZXItYWN0aXZlW2RhdGEtdi02MzEwMWZmZl0sLmZhZGUtbGVhdmUtYWN0aXZlW2RhdGEtdi02MzEwMWZmZl17dHJhbnNpdGlvbjphbGwgMC4xc30uZmFkZS1lbnRlcltkYXRhLXYtNjMxMDFmZmZdLC5mYWRlLWxlYXZlLXRvW2RhdGEtdi02MzEwMWZmZl17dHJhbnNmb3JtOnNjYWxlKDAuOSk7b3BhY2l0eTowfS5wb3AtZW50ZXItYWN0aXZlW2RhdGEtdi02MzEwMWZmZl0sLnBvcC1sZWF2ZS1hY3RpdmVbZGF0YS12LTYzMTAxZmZmXXt0cmFuc2l0aW9uOmFsbCAwLjE1czt0cmFuc2Zvcm06c2NhbGUoMSl9LnBvcC1lbnRlcltkYXRhLXYtNjMxMDFmZmZdLC5wb3AtbGVhdmUtdG9bZGF0YS12LTYzMTAxZmZmXXt0cmFuc2Zvcm06c2NhbGUoMCl9QGZvbnQtZmFjZXtmb250LWZhbWlseTpcXFwiRGlzY29yZCBGb250XFxcIjtmb250LXdlaWdodDo5MDA7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9EaXNjb3JkRm9udEJsYWNrLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpO2ZvbnQtc3R5bGU6bm9ybWFsfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9JbnRlci9JbnRlci1SZWd1bGFyLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7Zm9udC13ZWlnaHQ6NTAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItTWVkaXVtLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6SW50ZXI7Zm9udC13ZWlnaHQ6NzAwO3NyYzp1cmwoXFxcIi9hc3NldHMvZm9udHMvSW50ZXIvSW50ZXItQm9sZC53b2ZmMlxcXCIpIGZvcm1hdChcXFwid29mZjJcXFwiKX0jbmF2YmFyW2RhdGEtdi02MzEwMWZmZl17cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxMDA7dXNlci1zZWxlY3Q6bm9uZTt3aWR0aDoxMDAlO2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNzI4OWRhO2hlaWdodDo0NXB4O2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6bWluLWNvbnRlbnQgYXV0byBtaW4tY29udGVudCBtaW4tY29udGVudDthbGlnbi1pdGVtczpjZW50ZXJ9I25hdmJhciAjaW5mb1BvcHVwW2RhdGEtdi02MzEwMWZmZl17cG9zaXRpb246YWJzb2x1dGU7bWF4LXdpZHRoOjIyNXB4O2JhY2tncm91bmQtY29sb3I6IzJjMmYzMztib3gtc2hhZG93OjBweCAycHggNXB4IHJnYmEoMCwwLDAsMC41KTtib3JkZXItcmFkaXVzOjVweDt0b3A6NDBweDtyaWdodDo0MnB4O3otaW5kZXg6MTAwO3BhZGRpbmc6NXB4fSNuYXZiYXIgI2luZm9Qb3B1cFtkYXRhLXYtNjMxMDFmZmZdOjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6NXB4O21hcmdpbi10b3A6LTEwcHg7Y29udGVudDpcXFwiXFxcIjt3aWR0aDowO2hlaWdodDowO2JvcmRlci1sZWZ0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbToxMHB4IHNvbGlkICMyYzJmMzN9I25hdmJhciAjaW5mb1BvcHVwIGgxW2RhdGEtdi02MzEwMWZmZl17Y29sb3I6IzcyODlkYTtmb250LXNpemU6MTVweDttYXJnaW4tbGVmdDo1cHh9I25hdmJhciAjaW5mb1BvcHVwIHBbZGF0YS12LTYzMTAxZmZmXXttYXJnaW4tbGVmdDo1cHh9I25hdmJhciAjbG9nb1tkYXRhLXYtNjMxMDFmZmZde2FsaWduLXNlbGY6Y2VudGVyO2p1c3RpZnktc2VsZjpjZW50ZXI7aGVpZ2h0OjM1cHg7bWFyZ2luLXJpZ2h0OjVweDttYXJnaW4tbGVmdDoxMHB4fSNuYXZiYXIgaDFbZGF0YS12LTYzMTAxZmZmXXtmb250LWZhbWlseTpcXFwiRGlzY29yZCBGb250XFxcIjtmb250LXNpemU6MjVweH0jbmF2YmFyICNpbmZvW2RhdGEtdi02MzEwMWZmZl17Y3Vyc29yOmhlbHA7aGVpZ2h0OjIwcHg7d2lkdGg6MjBweDttYXJnaW4tcmlnaHQ6MTBweDtjb2xvcjojMjMyNzJhO2JvcmRlci1yYWRpdXM6MTAwJTtmb250LXNpemU6MTVweDtmb250LXdlaWdodDo5MDA7dGV4dC1hbGlnbjpjZW50ZXI7Ym94LXNoYWRvdzowIDAgMCAwIGluc2V0fSNuYXZiYXIgI2luZm8uZXJyb3JbZGF0YS12LTYzMTAxZmZmXXtiYWNrZ3JvdW5kLWNvbG9yOiNmZjUwNTA7YW5pbWF0aW9uOnB1bHNlRXJyb3ItZGF0YS12LTYzMTAxZmZmIDJzIGluZmluaXRlfSNuYXZiYXIgI2luZm8ud2FybmluZ1tkYXRhLXYtNjMxMDFmZmZde2JhY2tncm91bmQtY29sb3I6I2ZmZmYwMDthbmltYXRpb246cHVsc2VXYXJuLWRhdGEtdi02MzEwMWZmZiAycyBpbmZpbml0ZX0jbmF2YmFyICN1c2VyV3JhcHBlcltkYXRhLXYtNjMxMDFmZmZde2hlaWdodDozNXB4O3dpZHRoOjM1cHg7bWFyZ2luLXJpZ2h0OjVweH0jbmF2YmFyICN1c2VyV3JhcHBlciAjdXNlcltkYXRhLXYtNjMxMDFmZmZde3RyYW5zaXRpb246MC4xcyBhbGwgZWFzZS1vdXQ7Ym9yZGVyLXJhZGl1czoxMDAlO2hlaWdodDozNXB4O2N1cnNvcjpwb2ludGVyfSNuYXZiYXIgI3VzZXJXcmFwcGVyICN1c2VyW2RhdGEtdi02MzEwMWZmZl06YWN0aXZle3RyYW5zZm9ybTpzY2FsZSgwLjkpfSNuYXZiYXIgI3VzZXJXcmFwcGVyICNzZXR0aW5nc092ZXJsYXlbZGF0YS12LTYzMTAxZmZmXXtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDo1cHg7bWFyZ2luLXRvcDo1cHg7ei1pbmRleDoxMDtiYWNrZ3JvdW5kLWNvbG9yOiMyYzJmMzM7Ym94LXNoYWRvdzowcHggMnB4IDVweCByZ2JhKDAsMCwwLDAuNSk7Ym9yZGVyLXJhZGl1czo1cHh9I25hdmJhciAjdXNlcldyYXBwZXIgI3NldHRpbmdzT3ZlcmxheVtkYXRhLXYtNjMxMDFmZmZdOjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6NXB4O21hcmdpbi10b3A6LTEwcHg7Y29udGVudDpcXFwiXFxcIjt3aWR0aDowO2hlaWdodDowO2JvcmRlci1sZWZ0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJpZ2h0OjEwcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbToxMHB4IHNvbGlkICMyYzJmMzN9I25hdmJhciAjdXNlcldyYXBwZXIgI3NldHRpbmdzT3ZlcmxheSBoMVtkYXRhLXYtNjMxMDFmZmZde2NvbG9yOiM3Mjg5ZGE7Zm9udC1zaXplOjE1cHg7bWFyZ2luLWxlZnQ6NXB4fSNuYXZiYXIgI3VzZXJXcmFwcGVyICNzZXR0aW5nc092ZXJsYXkgI3NldHRpbmdzW2RhdGEtdi02MzEwMWZmZl17ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczphdXRvO2FsaWduLWl0ZW1zOmNlbnRlcn0jbmF2YmFyICN1c2VyV3JhcHBlciAjc2V0dGluZ3NPdmVybGF5ICNzZXR0aW5ncyAjc2V0dGluZ1tkYXRhLXYtNjMxMDFmZmZde2Rpc3BsYXk6aW5saW5lLWdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOm1pbi1jb250ZW50IGF1dG8gbWluLWNvbnRlbnQ7Z3JpZC1nYXA6NXB4O2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MzBweDtmb250LXNpemU6MTdweDttYXJnaW46MCA1cHh9I25hdmJhciAjdXNlcldyYXBwZXIgI3NldHRpbmdzT3ZlcmxheSAjc2V0dGluZ3MgI3NldHRpbmcgc3ZnW2RhdGEtdi02MzEwMWZmZl17d2lkdGg6MjBweH0jbmF2YmFyICN1c2VyV3JhcHBlciAjc2V0dGluZ3NPdmVybGF5ICNzZXR0aW5ncyAjc2V0dGluZyBwW2RhdGEtdi02MzEwMWZmZl17bWFyZ2luLXJpZ2h0OjE1cHh9XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqW2RhdGEtdi02ZjdmZDFjMV06bm90KGkpe2ZvbnQtZmFtaWx5OkludGVyfVtkYXRhLXYtNmY3ZmQxYzFdOjotd2Via2l0LXNjcm9sbGJhcnt3aWR0aDo4cHg7aGVpZ2h0OjAuNnJlbX1bZGF0YS12LTZmN2ZkMWMxXTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2t7YmFja2dyb3VuZDojMjMyNzJhO2JvcmRlcjpub25lfVtkYXRhLXYtNmY3ZmQxYzFdOjotd2Via2l0LXNjcm9sbGJhci10aHVtYnt0cmFuc2l0aW9uOmJhY2tncm91bmQgMC4xNXMgZWFzZS1vdXQ7Ym9yZGVyOjNweCBzb2xpZCAjMjMyNzJhO2JvcmRlci1yYWRpdXM6MjBweDtiYWNrZ3JvdW5kOiM1MTViNjJ9W2RhdGEtdi02ZjdmZDFjMV06Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVye2JhY2tncm91bmQ6IzVkNjg3MH1bZGF0YS12LTZmN2ZkMWMxXTo6LXdlYmtpdC1zY3JvbGxiYXItY29ybmVye2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9W2RhdGEtdi02ZjdmZDFjMV06OnNlbGVjdGlvbntiYWNrZ3JvdW5kLWNvbG9yOiM3Mjg5ZGE7Y29sb3I6d2hpdGV9LmxpbmtbZGF0YS12LTZmN2ZkMWMxXXtjb2xvcjojNzI4OWRhO3RleHQtZGVjb3JhdGlvbjpub25lO2ZvbnQtd2VpZ2h0OjYwMH0qW2RhdGEtdi02ZjdmZDFjMV17c2Nyb2xsYmFyLWNvbG9yOiM1MTViNjIgIzIzMjcyYTtzY3JvbGxiYXItd2lkdGg6dGhpbn1Aa2V5ZnJhbWVzIHB1bHNlV2Fybi1kYXRhLXYtNmY3ZmQxYzF7MCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMjU1LDI1NSwwLDAuOCl9NzAle2JveC1zaGFkb3c6MCAwIDAgNXB4IHJnYmEoMCwwLDAsMCl9MTAwJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgwLDAsMCwwKX19QGtleWZyYW1lcyBwdWxzZUVycm9yLWRhdGEtdi02ZjdmZDFjMXswJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgyNTUsNTAsNTAsMC44KX03MCV7Ym94LXNoYWRvdzowIDAgMCA1cHggcmdiYSgwLDAsMCwwKX0xMDAle2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwLDApfX0uc2xpZGVEb3duLWVudGVyLWFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFdLC5zbGlkZURvd24tbGVhdmUtYWN0aXZlW2RhdGEtdi02ZjdmZDFjMV17dHJhbnNpdGlvbjphbGwgMC4xNXM7dXNlci1zZWxlY3Q6bm9uZX0uc2xpZGVEb3duLWVudGVyW2RhdGEtdi02ZjdmZDFjMV0sLnNsaWRlRG93bi1sZWF2ZS10b1tkYXRhLXYtNmY3ZmQxYzFde29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNXB4KTttYXJnaW46MH0uc2xpZGVSaWdodC1lbnRlci1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXSwuc2xpZGVSaWdodC1sZWF2ZS1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOmFsbCAwLjE1czt1c2VyLXNlbGVjdDpub25lfS5zbGlkZVJpZ2h0LWVudGVyW2RhdGEtdi02ZjdmZDFjMV0sLnNsaWRlUmlnaHQtbGVhdmUtdG9bZGF0YS12LTZmN2ZkMWMxXXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTAwJSk7bWFyZ2luOjB9LmNhdGVnb3J5SGVpZ2h0LWVudGVyLWFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFdLC5jYXRlZ29yeUhlaWdodC1sZWF2ZS1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOmFsbCAwLjE1czttYXgtaGVpZ2h0OjMwcHh9LmNhdGVnb3J5SGVpZ2h0LWVudGVyW2RhdGEtdi02ZjdmZDFjMV0sLmNhdGVnb3J5SGVpZ2h0LWxlYXZlLXRvW2RhdGEtdi02ZjdmZDFjMV17b3BhY2l0eTowO21heC1oZWlnaHQ6MH0uZmFkZS1lbnRlci1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXSwuZmFkZS1sZWF2ZS1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOmFsbCAwLjFzfS5mYWRlLWVudGVyW2RhdGEtdi02ZjdmZDFjMV0sLmZhZGUtbGVhdmUtdG9bZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2Zvcm06c2NhbGUoMC45KTtvcGFjaXR5OjB9LnBvcC1lbnRlci1hY3RpdmVbZGF0YS12LTZmN2ZkMWMxXSwucG9wLWxlYXZlLWFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFde3RyYW5zaXRpb246YWxsIDAuMTVzO3RyYW5zZm9ybTpzY2FsZSgxKX0ucG9wLWVudGVyW2RhdGEtdi02ZjdmZDFjMV0sLnBvcC1sZWF2ZS10b1tkYXRhLXYtNmY3ZmQxYzFde3RyYW5zZm9ybTpzY2FsZSgwKX1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJEaXNjb3JkIEZvbnRcXFwiO2ZvbnQtd2VpZ2h0OjkwMDtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0Rpc2NvcmRGb250QmxhY2sud29mZjJcXFwiKSBmb3JtYXQoXFxcIndvZmYyXFxcIik7Zm9udC1zdHlsZTpub3JtYWx9QGZvbnQtZmFjZXtmb250LWZhbWlseTpJbnRlcjtzcmM6dXJsKFxcXCIvYXNzZXRzL2ZvbnRzL0ludGVyL0ludGVyLVJlZ3VsYXIud29mZjJcXFwiKSBmb3JtYXQoXFxcIndvZmYyXFxcIil9QGZvbnQtZmFjZXtmb250LWZhbWlseTpJbnRlcjtmb250LXdlaWdodDo1MDA7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9JbnRlci9JbnRlci1NZWRpdW0ud29mZjJcXFwiKSBmb3JtYXQoXFxcIndvZmYyXFxcIil9QGZvbnQtZmFjZXtmb250LWZhbWlseTpJbnRlcjtmb250LXdlaWdodDo3MDA7c3JjOnVybChcXFwiL2Fzc2V0cy9mb250cy9JbnRlci9JbnRlci1Cb2xkLndvZmYyXFxcIikgZm9ybWF0KFxcXCJ3b2ZmMlxcXCIpfSNtYWluV3JhcHBlcltkYXRhLXYtNmY3ZmQxYzFde2Rpc3BsYXk6Z3JpZH0jbWFpbldyYXBwZXIgKltkYXRhLXYtNmY3ZmQxYzFde3Bvc2l0aW9uOnJlbGF0aXZlfSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5nc1tkYXRhLXYtNmY3ZmQxYzFde21heC1oZWlnaHQ6NDcwcHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXJbZGF0YS12LTZmN2ZkMWMxXXttYXgtaGVpZ2h0OjQ1MHB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5nc1tkYXRhLXYtNmY3ZmQxYzFde292ZXJmbG93LXk6c2Nyb2xsO292ZXJmbG93LXg6aGlkZGVufSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjcHJlc2VuY2VJbmZvIHBbZGF0YS12LTZmN2ZkMWMxXXttYXgtd2lkdGg6MzAwcHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzICNoZWFkaW5nV3JhcHBlcltkYXRhLXYtNmY3ZmQxYzFde2hlaWdodDoxNTBweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlU2V0dGluZ3MgI2hlYWRpbmdXcmFwcGVyICNiYWNrQnRuW2RhdGEtdi02ZjdmZDFjMV17dHJhbnNpdGlvbjowLjE1cyBhbGwgZWFzZS1vdXQ7Y3Vyc29yOnBvaW50ZXI7Y29sb3I6d2hpdGU7Zm9udC1zaXplOjI1cHg7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2luLXRvcDo1cHg7bWFyZ2luLWxlZnQ6NXB4O3otaW5kZXg6MTB9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzICNoZWFkaW5nV3JhcHBlciAjYmFja0J0bltkYXRhLXYtNmY3ZmQxYzFdOmhvdmVye2NvbG9yOiM3Mjg5ZGF9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzICNoZWFkaW5nV3JhcHBlciAjYmFja0J0bltkYXRhLXYtNmY3ZmQxYzFdOmFjdGl2ZXt0cmFuc2Zvcm06c2NhbGUoMC45KTtjb2xvcjojNWU3OGQ1fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjaGVhZGluZ1dyYXBwZXIgI2hlYWRpbmdbZGF0YS12LTZmN2ZkMWMxXXt0b3A6MTBweDtkaXNwbGF5OmdyaWQ7anVzdGlmeS1pdGVtczpjZW50ZXI7dGV4dC1hbGlnbjpjZW50ZXJ9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzICNoZWFkaW5nV3JhcHBlciAjaGVhZGluZyBoMVtkYXRhLXYtNmY3ZmQxYzFde2NvbG9yOndoaXRlO2ZvbnQtc2l6ZToyNXB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjaGVhZGluZ1dyYXBwZXIgI2hlYWRpbmcgaW1nW2RhdGEtdi02ZjdmZDFjMV17bWF4LWhlaWdodDoxMDBweDtib3JkZXItcmFkaXVzOjVweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlU2V0dGluZ3MgI2hlYWRpbmdXcmFwcGVyICNiZ1tkYXRhLXYtNmY3ZmQxYzFde3Bvc2l0aW9uOmFic29sdXRlO2ZpbHRlcjpibHVyKDNweCkgY29udHJhc3QoMC43NSk7ei1pbmRleDowO21pbi13aWR0aDoxMDAlO21heC1oZWlnaHQ6MTUwcHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzIC5jb250YWluZXJbZGF0YS12LTZmN2ZkMWMxXXttYXJnaW46NXB4O21hcmdpbi10b3A6MTVweDtwYWRkaW5nOjNweCA1cHg7YmFja2dyb3VuZC1jb2xvcjojMmMyZjMzO2JvcmRlci1yYWRpdXM6NXB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAuY29udGFpbmVyIGgxW2RhdGEtdi02ZjdmZDFjMV17Y29sb3I6IzcyODlkYTtmb250LWZhbWlseTpcXFwiRGlzY29yZCBGb250XFxcIjtmb250LXNpemU6MTVweDtwYWRkaW5nLWJvdHRvbTo1cHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVNldHRpbmdzIC5jb250YWluZXIgcFtkYXRhLXYtNmY3ZmQxYzFde2NvbG9yOiM5OWFhYjU7Zm9udC13ZWlnaHQ6NTAwfSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjc2V0dGluZ1tkYXRhLXYtNmY3ZmQxYzFde2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6YXV0byBtaW4tY29udGVudDthbGlnbi1pdGVtczpjZW50ZXI7bWluLWhlaWdodDoyNXB4O21hcmdpbjo1cHggMDttYXJnaW4tdG9wOjA7Z3JpZC1nYXA6NXB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjc2V0dGluZyBzcGFuW2RhdGEtdi02ZjdmZDFjMV17d2hpdGUtc3BhY2U6bm93cmFwO2ZvbnQtc2l6ZToxNHB4O21heC13aWR0aDoxOTBweDtvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpcztjb2xvcjojOTlhYWI1fSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjc2V0dGluZyBzcGFuIGlbZGF0YS12LTZmN2ZkMWMxXXt0ZXh0LWFsaWduOmNlbnRlcjt3aWR0aDoxNXB4O21hcmdpbi1yaWdodDo1cHg7Y29sb3I6I2ZmZn0jbWFpbldyYXBwZXIgI3ByZXNlbmNlU2V0dGluZ3MgI3NldHRpbmcgaW5wdXRbZGF0YS12LTZmN2ZkMWMxXXtncmlkLXJvdzpub25lfSNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjc2V0dGluZyBpbnB1dFtkYXRhLXYtNmY3ZmQxYzFdLCNtYWluV3JhcHBlciAjcHJlc2VuY2VTZXR0aW5ncyAjc2V0dGluZyBzZWxlY3RbZGF0YS12LTZmN2ZkMWMxXXtjb2xvcjojZmZmO2ZvbnQtc2l6ZToxMnB4O2JhY2tncm91bmQtY29sb3I6IzIzMjcyYTtvdXRsaW5lOm5vbmU7Ym9yZGVyLXJhZGl1czo1cHg7Ym9yZGVyOm5vbmU7aGVpZ2h0OjI1cHg7cGFkZGluZzowIDVweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlcltkYXRhLXYtNmY3ZmQxYzFde2Rpc3BsYXk6Z3JpZDtiYWNrZ3JvdW5kLWNvbG9yOiMyYzJmMzM7bWFyZ2luOjEwcHg7cGFkZGluZzo1cHg7Ym9yZGVyLXJhZGl1czo1cHg7b3ZlcmZsb3c6YXV0bztvdmVyZmxvdy14OmhpZGRlbn0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjdGl0bGVXcmFwcGVyW2RhdGEtdi02ZjdmZDFjMV17ZGlzcGxheTppbmxpbmUtZ3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6YXV0byBtaW4tY29udGVudDtncmlkLWdhcDoxMHB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICN0aXRsZVdyYXBwZXIgI3RpdGxlW2RhdGEtdi02ZjdmZDFjMV17Zm9udC1mYW1pbHk6XFxcIkRpc2NvcmQgRm9udFxcXCI7Y29sb3I6IzcyODlkYTtmb250LXNpemU6MTVweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjdGl0bGVXcmFwcGVyICNsb2FkUHJlc2VuY2VbZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOjAuMTVzIGNvbG9yIGVhc2Utb3V0O2N1cnNvcjpwb2ludGVyO3doaXRlLXNwYWNlOm5vd3JhcDtjb2xvcjojOTlhYWI1fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICN0aXRsZVdyYXBwZXIgI2xvYWRQcmVzZW5jZVtkYXRhLXYtNmY3ZmQxYzFdOmhvdmVye2NvbG9yOiNmZmZ9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3RpdGxlV3JhcHBlciAjbG9hZFByZXNlbmNlW2RhdGEtdi02ZjdmZDFjMV06YWN0aXZle2NvbG9yOiNlNmU2ZTZ9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3RpdGxlV3JhcHBlciAjYWN0aW9uc1tkYXRhLXYtNmY3ZmQxYzFde2Rpc3BsYXk6aW5saW5lLWdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOm1pbi1jb250ZW50IG1pbi1jb250ZW50O2dyaWQtZ2FwOjVweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjdGl0bGVXcmFwcGVyICNhY3Rpb25zIGlbZGF0YS12LTZmN2ZkMWMxXXtjdXJzb3I6cG9pbnRlcjt0cmFuc2l0aW9uOmNvbG9yIDAuMTVzIGVhc2Utb3V0O2NvbG9yOiM5OWFhYjU7Zm9udC1zaXplOjIwcHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3RpdGxlV3JhcHBlciAjYWN0aW9ucyBpW2RhdGEtdi02ZjdmZDFjMV06aG92ZXIsI21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3RpdGxlV3JhcHBlciAjYWN0aW9ucyBpLmFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFde2NvbG9yOndoaXRlfSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICN0aXRsZVdyYXBwZXIgI2FjdGlvbnMgaVtkYXRhLXYtNmY3ZmQxYzFdOmFjdGl2ZXtjb2xvcjojZTZlNmU2fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNjYXRlZ29yaWVzW2RhdGEtdi02ZjdmZDFjMV17ZGlzcGxheTpmbGV4O2ZsZXgtZmxvdzpub3dyYXA7d2lkdGg6MjYycHg7aGVpZ2h0OjMwcHg7b3ZlcmZsb3c6aGlkZGVuO2FsaWduLWl0ZW1zOmZsZXgtZW5kfSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNjYXRlZ29yaWVzIHNwYW5bZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOjAuMTVzIGFsbCBlYXNlLW91dDtoZWlnaHQ6MjVweDtjdXJzb3I6cG9pbnRlcjtkaXNwbGF5OmlubGluZS1ncmlkO2dyaWQtZ2FwOjVweDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6bWluLWNvbnRlbnQgbWF4LWNvbnRlbnQ7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbjowIDJweDtiYWNrZ3JvdW5kLWNvbG9yOiMyMzI3MmE7Y29sb3I6d2hpdGU7cGFkZGluZzowIDVweDtib3JkZXItcmFkaXVzOjVweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjY2F0ZWdvcmllcyBzcGFuIGgxW2RhdGEtdi02ZjdmZDFjMV17Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZToxNHB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNjYXRlZ29yaWVzIHNwYW5bZGF0YS12LTZmN2ZkMWMxXTpob3ZlciwjbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjY2F0ZWdvcmllcyBzcGFuLmFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFde2JhY2tncm91bmQtY29sb3I6IzcyODlkYX0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjY2F0ZWdvcmllcyBzcGFuLmFjdGl2ZVtkYXRhLXYtNmY3ZmQxYzFdOmhvdmVye2JhY2tncm91bmQtY29sb3I6Izg2OWFkZn0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjY2F0ZWdvcmllcyBzcGFuW2RhdGEtdi02ZjdmZDFjMV06YWN0aXZle2JhY2tncm91bmQtY29sb3I6IzVlNzhkNX0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjbG9hZGVyLWNvbnRhaW5lcltkYXRhLXYtNmY3ZmQxYzFde3RleHQtYWxpZ246Y2VudGVyO21hcmdpbi1ib3R0b206MTBweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjbG9hZGVyLWNvbnRhaW5lciAubG9hZGVyIGltZ1tkYXRhLXYtNmY3ZmQxYzFde3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTBweCk7YW5pbWF0aW9uOmxvYWRlckFuaW1hdGlvbi1kYXRhLXYtNmY3ZmQxYzEgMC41cyBlYXNlLW91dCBpbmZpbml0ZX0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjbG9hZGVyLWNvbnRhaW5lciAubG9hZGVyIHBbZGF0YS12LTZmN2ZkMWMxXXtjb2xvcjojZmZmO2ZvbnQtc2l6ZToxLjJlbTtmb250LXdlaWdodDpib2xkfUBrZXlmcmFtZXMgbG9hZGVyQW5pbWF0aW9uLWRhdGEtdi02ZjdmZDFjMXs1MCV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwcHgpfTEwMCV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMTBweCl9fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlW2RhdGEtdi02ZjdmZDFjMV17bWFyZ2luOjdweCAwO2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6bWluLWNvbnRlbnQgYXV0byBtaW4tY29udGVudCBtaW4tY29udGVudDtncmlkLWdhcDo1cHg7YWxpZ24taXRlbXM6Y2VudGVyfSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlW2RhdGEtdi02ZjdmZDFjMV06Zmlyc3Qtb2YtdHlwZXttYXJnaW4tdG9wOjNweH0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjcHJlc2VuY2VzICNwcmVzZW5jZSBpbWdbZGF0YS12LTZmN2ZkMWMxXXt3aWR0aDoyNXB4O2JvcmRlci1yYWRpdXM6NXB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlIGgxW2RhdGEtdi02ZjdmZDFjMV17Y29sb3I6d2hpdGU7Zm9udC1zaXplOjE3cHg7Zm9udC13ZWlnaHQ6bm9ybWFsO2p1c3RpZnktY29udGVudDpjZW50ZXI7bWF4LXdpZHRoOjEwMCU7b3ZlcmZsb3cteDpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3ByZXNlbmNlcyAjcHJlc2VuY2UgaDEgc3BhbltkYXRhLXYtNmY3ZmQxYzFde2ZvbnQtc2l6ZToxMHB4O2JhY2tncm91bmQ6I2M4NGI0Yjt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7cGFkZGluZzoycHggNHB4O2JvcmRlci1yYWRpdXM6NXB4O3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi1yaWdodDo1cHg7dG9wOi0ycHh9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3ByZXNlbmNlcyAjcHJlc2VuY2UgLmFjdGlvbltkYXRhLXYtNmY3ZmQxYzFde3RyYW5zaXRpb246MC4xcyBjb2xvciBlYXNlLW91dDtjdXJzb3I6cG9pbnRlcjtjb2xvcjojOTlhYWI1O2ZvbnQtc2l6ZToxN3B4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlIC5hY3Rpb25bZGF0YS12LTZmN2ZkMWMxXTpob3Zlcntjb2xvcjojZmZmfSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlIC5hY3Rpb24jc2V0dGluZ3NbZGF0YS12LTZmN2ZkMWMxXXttYXJnaW4tcmlnaHQ6NXB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZXMgI3ByZXNlbmNlICNjaGVja2JveFtkYXRhLXYtNmY3ZmQxYzFde2dyaWQtY29sdW1uLWVuZDo1fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNub1ByZXNlbmNlc1tkYXRhLXYtNmY3ZmQxYzFde2ZvbnQtc2l6ZToxNXB4O3RleHQtYWxpZ246Y2VudGVyO21hcmdpbi1ib3R0b206NXB4O2ZvbnQtd2VpZ2h0OjYwMDtjb2xvcjojOTlhYWI1fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNub1ByZXNlbmNlcyAjcmVpbml0W2RhdGEtdi02ZjdmZDFjMV17Y29sb3I6IzcyODlkYTtjdXJzb3I6cG9pbnRlcn0jbWFpbldyYXBwZXIgI3ByZXNlbmNlV3JhcHBlciAjbm9QcmVzZW5jZXMgI3JlaW5pdFtkYXRhLXYtNmY3ZmQxYzFdOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9I21haW5XcmFwcGVyICNwcmVzZW5jZVdyYXBwZXIgI3ByZXNlbmNlU3RvcmVCdG5bZGF0YS12LTZmN2ZkMWMxXXt0cmFuc2l0aW9uOjAuMXMgYmFja2dyb3VuZC1jb2xvciBlYXNlLW91dDtmb250LXdlaWdodDo2MDA7d2lkdGg6OTAlO2JhY2tncm91bmQtY29sb3I6IzcyODlkYTtqdXN0aWZ5LXNlbGY6Y2VudGVyO3BhZGRpbmc6NXB4IDVweDtmb250LXNpemU6MTdweDtjb2xvcjp3aGl0ZTt0ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXItcmFkaXVzOjIwcHg7bWFyZ2luLWJvdHRvbToxMHB4fSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZVN0b3JlQnRuW2RhdGEtdi02ZjdmZDFjMV06aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojODY5YWRmfSNtYWluV3JhcHBlciAjcHJlc2VuY2VXcmFwcGVyICNwcmVzZW5jZVN0b3JlQnRuW2RhdGEtdi02ZjdmZDFjMV06YWN0aXZle2JhY2tncm91bmQtY29sb3I6IzVlNzhkNX1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiZXhwb3J0IGNvbnN0IGFwaUJhc2UgPSBcImh0dHBzOi8vYXBpLnByZW1pZC5hcHAvdjMvXCI7XHJcbmV4cG9ydCBjb25zdCByZWxlYXNlVHlwZTogXCJCRVRBXCIgfCBcIkFMUEhBXCIgfCBcIlJFTEVBU0VcIiB8IFwiREVWXCIgPSBcIlJFTEVBU0VcIjtcclxuZXhwb3J0IGNvbnN0IHJlcXVpcmVkQXBwVmVyc2lvbiA9IDIxNDtcclxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCBbX2MoXCJuYXZpZ2F0aW9uXCIpLCBfdm0uX3YoXCIgXCIpLCBfYyhcInJvdXRlci12aWV3XCIpXSwgMSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAgeyBhdHRyczogeyBpZDogXCJuYXZiYXJcIiB9IH0sXG4gICAgW1xuICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICBhdHRyczoge1xuICAgICAgICAgIGlkOiBcImxvZ29cIixcbiAgICAgICAgICBkcmFnZ2FibGU6IFwiZmFsc2VcIixcbiAgICAgICAgICBzcmM6IFwiL2Fzc2V0cy9pbWFnZXMvaWNvbi5zdmdcIlxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImgxXCIsIFtfdm0uX3YoXCJQcmVNaURcIildKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcInRyYW5zaXRpb25cIiwgeyBhdHRyczogeyBuYW1lOiBcInBvcFwiIH0gfSwgW1xuICAgICAgICBfdm0uc2hvd1dhcm5pbmdFcnJvclxuICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgIFwic3BhblwiLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY2xhc3M6ICF0aGlzLiRzdG9yZS5zdGF0ZS5jb25uZWN0ZWQgPyBcIndhcm5pbmdcIiA6IFwiZXJyb3JcIixcbiAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogXCJpbmZvXCIgfSxcbiAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgbW91c2VlbnRlcjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIF92bS5ob3ZlckluZm8gPSB0cnVlXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgbW91c2VsZWF2ZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIF92bS5ob3ZlckluZm8gPSBmYWxzZVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW192bS5fdihcIiFcIildXG4gICAgICAgICAgICApXG4gICAgICAgICAgOiBfdm0uX2UoKVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJ0cmFuc2l0aW9uXCIsIHsgYXR0cnM6IHsgbmFtZTogXCJzbGlkZURvd25cIiB9IH0sIFtcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7XG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcInNob3dcIixcbiAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtc2hvd1wiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaG92ZXJJbmZvLFxuICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiaG92ZXJJbmZvXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImluZm9Qb3B1cFwiIH0sXG4gICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICBtb3VzZWVudGVyOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBfdm0uaG92ZXJJbmZvID0gdHJ1ZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBfdm0uaG92ZXJJbmZvID0gZmFsc2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgW1xuICAgICAgICAgICAgX2MoXCJoMVwiLCB7XG4gICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBcInRcIixcbiAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi10XCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogIV92bS5vbkxpbmVcbiAgICAgICAgICAgICAgICAgICAgPyBcInBvcHVwLmluZm8ubm9JbnRlcm5ldFwiXG4gICAgICAgICAgICAgICAgICAgIDogIXRoaXMuJHN0b3JlLnN0YXRlLmFwcFZlcnNpb25TdXBwb3J0ZWRcbiAgICAgICAgICAgICAgICAgICAgPyBcInBvcHVwLmluZm8udW5zdXBwb3J0ZWRBcHBWZXJzaW9uXCJcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLiRzdG9yZS5zdGF0ZS5sYXRlc3RFeHRlbnNpb25WZXJzaW9uLnVyZ2VudFVwZGF0ZVxuICAgICAgICAgICAgICAgICAgICA/IFwicG9wdXAuaW5mby5zYWZhcmkudXJnZW50VXBkYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgOiAhdGhpcy4kc3RvcmUuc3RhdGUubGF0ZXN0RXh0ZW5zaW9uVmVyc2lvbi5sYXRlc3RWZXJzaW9uXG4gICAgICAgICAgICAgICAgICAgID8gXCJwb3B1cC5pbmZvLnNhZmFyaS5vdXRkYXRlZEV4dGVuc2lvblwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJwb3B1cC5pbmZvLm5vdENvbm5lY3RlZFwiLFxuICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjpcbiAgICAgICAgICAgICAgICAgICAgXCJcXG5cXHRcXHRcXHRcXHRcXHQhb25MaW5lXFxuXFx0XFx0XFx0XFx0XFx0XFx0PyAncG9wdXAuaW5mby5ub0ludGVybmV0J1xcblxcdFxcdFxcdFxcdFxcdFxcdDogIXRoaXMuJHN0b3JlLnN0YXRlLmFwcFZlcnNpb25TdXBwb3J0ZWRcXG5cXHRcXHRcXHRcXHRcXHRcXHQ/ICdwb3B1cC5pbmZvLnVuc3VwcG9ydGVkQXBwVmVyc2lvbidcXG5cXHRcXHRcXHRcXHRcXHRcXHQ6IHRoaXMuJHN0b3JlLnN0YXRlLmxhdGVzdEV4dGVuc2lvblZlcnNpb24udXJnZW50VXBkYXRlXFxuXFx0XFx0XFx0XFx0XFx0XFx0PyAncG9wdXAuaW5mby5zYWZhcmkudXJnZW50VXBkYXRlJ1xcblxcdFxcdFxcdFxcdFxcdFxcdDogIXRoaXMuJHN0b3JlLnN0YXRlLmxhdGVzdEV4dGVuc2lvblZlcnNpb24ubGF0ZXN0VmVyc2lvblxcblxcdFxcdFxcdFxcdFxcdFxcdD8gJ3BvcHVwLmluZm8uc2FmYXJpLm91dGRhdGVkRXh0ZW5zaW9uJ1xcblxcdFxcdFxcdFxcdFxcdFxcdDogJ3BvcHVwLmluZm8ubm90Q29ubmVjdGVkJ1xcblxcdFxcdFxcdFxcdFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICBfYyhcInBcIiwgeyBkb21Qcm9wczogeyBpbm5lckhUTUw6IF92bS5fcyhfdm0uaW5mb01lc3NhZ2UpIH0gfSlcbiAgICAgICAgICBdXG4gICAgICAgIClcbiAgICAgIF0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgYXR0cnM6IHsgaWQ6IFwidXNlcldyYXBwZXJcIiB9LFxuICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICBtb3VzZWVudGVyOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgX3ZtLmhvdmVyVXNlciA9IHRydWVcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgX3ZtLmhvdmVyVXNlciA9IGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgaWQ6IFwidXNlclwiLFxuICAgICAgICAgICAgICBkcmFnZ2FibGU6IFwiZmFsc2VcIixcbiAgICAgICAgICAgICAgc3JjOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyQXZhdGFyXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIF92bS51c2VyQ2xpY2sgPSAhX3ZtLnVzZXJDbGlja1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcInRyYW5zaXRpb25cIiwgeyBhdHRyczogeyBuYW1lOiBcInNsaWRlRG93blwiIH0gfSwgW1xuICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtc2hvd1wiLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnVzZXJDbGljayxcbiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJ1c2VyQ2xpY2tcIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwic2V0dGluZ3NPdmVybGF5XCIgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgX2MoXCJoMVwiLCB7XG4gICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInRcIixcbiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtdFwiLFxuICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcInBvcHVwLm5hdmlnYXRpb24uc2V0dGluZ3NcIixcbiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcIidwb3B1cC5uYXZpZ2F0aW9uLnNldHRpbmdzJ1wiXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgYXR0cnM6IHsgaWQ6IFwic2V0dGluZ3NcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGlkOiBcInNldHRpbmdcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYXMgZmEtcG93ZXItb2ZmXCIgfSksXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJ0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJwb3B1cC5zZXR0aW5nLmVuYWJsZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcIidwb3B1cC5zZXR0aW5nLmVuYWJsZWQnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgX2MoXCJjaGVja2JveFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBjaGVja2VkOiBfdm0uc2V0dGluZ3NbXCJlbmFibGVkXCJdIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBuYXRpdmVPbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlU2V0dGluZyhcImVuYWJsZWRcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgIV92bS5wbGF0Zm9ybS5pbmNsdWRlcyhcIkxpbnV4XCIpXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogXCJzZXR0aW5nXCIgfSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYXMgZmEtcm9ja2V0XCIgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwicFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IFwicG9wdXAuc2V0dGluZy5hdXRvTGF1bmNoXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiJ3BvcHVwLnNldHRpbmcuYXV0b0xhdW5jaCdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiY2hlY2tib3hcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNoZWNrZWQ6IF92bS5zZXR0aW5nc1tcImF1dG9MYXVuY2hcIl0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS51cGRhdGVTZXR0aW5nKFwiYXV0b0xhdW5jaFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF92bS5wbGF0Zm9ybSA9PT0gXCJNYWNJbnRlbFwiXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogXCJzZXR0aW5nXCIgfSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYWIgZmEtYXBwbGVcIiB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwidFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJwb3B1cC5zZXR0aW5nLnRpdGxlTWVudWJhclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcIidwb3B1cC5zZXR0aW5nLnRpdGxlTWVudWJhcidcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiY2hlY2tib3hcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNoZWNrZWQ6IF92bS5zZXR0aW5nc1tcInRpdGxlTWVudWJhclwiXSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnVwZGF0ZVNldHRpbmcoXCJ0aXRsZU1lbnViYXJcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKVxuICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdKVxuICAgICAgICBdLFxuICAgICAgICAxXG4gICAgICApXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBpZDogXCJjaGVja2JveFwiIH0gfSwgW1xuICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgIHZhbHVlOiBfdm0uaXNDaGVja2VkLFxuICAgICAgICAgIGV4cHJlc3Npb246IFwiaXNDaGVja2VkXCJcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGF0dHJzOiB7IHR5cGU6IFwiY2hlY2tib3hcIiB9LFxuICAgICAgZG9tUHJvcHM6IHtcbiAgICAgICAgY2hlY2tlZDogX3ZtLmlzQ2hlY2tlZCxcbiAgICAgICAgY2hlY2tlZDogQXJyYXkuaXNBcnJheShfdm0uaXNDaGVja2VkKVxuICAgICAgICAgID8gX3ZtLl9pKF92bS5pc0NoZWNrZWQsIG51bGwpID4gLTFcbiAgICAgICAgICA6IF92bS5pc0NoZWNrZWRcbiAgICAgIH0sXG4gICAgICBvbjoge1xuICAgICAgICBjaGFuZ2U6IFtcbiAgICAgICAgICBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciAkJGEgPSBfdm0uaXNDaGVja2VkLFxuICAgICAgICAgICAgICAkJGVsID0gJGV2ZW50LnRhcmdldCxcbiAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlXG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSgkJGEpKSB7XG4gICAgICAgICAgICAgIHZhciAkJHYgPSBudWxsLFxuICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdilcbiAgICAgICAgICAgICAgaWYgKCQkZWwuY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgICQkaSA8IDAgJiYgKF92bS5pc0NoZWNrZWQgPSAkJGEuY29uY2F0KFskJHZdKSlcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJlxuICAgICAgICAgICAgICAgICAgKF92bS5pc0NoZWNrZWQgPSAkJGEuc2xpY2UoMCwgJCRpKS5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgX3ZtLmlzQ2hlY2tlZCA9ICQkY1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgX3ZtLnVwZGF0ZVxuICAgICAgICBdXG4gICAgICB9XG4gICAgfSksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcbiAgICAgIFwic3BhblwiLFxuICAgICAge1xuICAgICAgICBzdHlsZTogW1xuICAgICAgICAgIF92bS5pc0NoZWNrZWRcbiAgICAgICAgICAgID8geyBcImJhY2tncm91bmQtY29sb3JcIjogX3ZtLmJnQ29sb3IgfVxuICAgICAgICAgICAgOiB7IFwiYmFja2dyb3VuZC1jb2xvclwiOiBcInJnYig4NywgMTA3LCAxMjApXCIgfVxuICAgICAgICBdLFxuICAgICAgICBhdHRyczogeyBpZDogXCJjaGVja21hcmtcIiB9XG4gICAgICB9LFxuICAgICAgW1xuICAgICAgICBfYyhcInNwYW5cIiwge1xuICAgICAgICAgIHN0eWxlOiBcImJhY2tncm91bmQtY29sb3I6XCIgKyAoX3ZtLmlzQ2hlY2tlZCA/IHRoaXMubm9iQ29sb3IgOiBcIiNmZmZcIilcbiAgICAgICAgfSlcbiAgICAgIF1cbiAgICApXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cclxuaW1wb3J0IFZ1ZSBmcm9tIFwidnVlXCI7XHJcbmltcG9ydCAqIGFzIHRpbnljb2xvciBmcm9tIFwidGlueWNvbG9yMlwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7XHJcbiAgcHJvcHM6IFtcImNoZWNrZWRcIiwgXCJjb2xvclwiXSxcclxuICBkYXRhKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaXNDaGVja2VkOiB0aGlzLmNoZWNrZWRcclxuICAgIH07XHJcbiAgfSxcclxuICBjb21wdXRlZDoge1xyXG4gICAgbm9iQ29sb3IoKSB7XHJcbiAgICAgIGNvbnN0IG5DID0gdGhpcy5jb2xvclxyXG4gICAgICAgID8gdGlueWNvbG9yKHRoaXMuY29sb3IpLmdldEJyaWdodG5lc3MoKSA8PSA1MFxyXG4gICAgICAgICAgPyB0aW55Y29sb3IodGhpcy5jb2xvcikuYnJpZ2h0ZW4oMjUpXHJcbiAgICAgICAgICA6IHRoaXMuY29sb3JcclxuICAgICAgICA6IFwiI2ZmZlwiO1xyXG5cclxuICAgICAgcmV0dXJuIG5DO1xyXG4gICAgfSxcclxuICAgIGJnQ29sb3IoKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbG9yID8gdGlueWNvbG9yKHRoaXMuY29sb3IpLmRhcmtlbigyNSkgOiBcIiM3Mjg5ZGFcIjtcclxuICAgIH1cclxuICB9LFxyXG4gIHdhdGNoOiB7XHJcbiAgICBjaGVja2VkKCkge1xyXG4gICAgICB0aGlzLmlzQ2hlY2tlZCA9IHRoaXMuY2hlY2tlZDtcclxuICAgIH1cclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIHVwZGF0ZSgpIHtcclxuICAgICAgdGhpcy4kZW1pdChcImNoYW5nZVwiLCB0aGlzLmlzQ2hlY2tlZCk7XHJcbiAgICB9XHJcbiAgfVxyXG59KTtcclxuIiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdHMtbG9hZGVyL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTNbMF0ucnVsZXNbMF0udXNlWzBdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY2hlY2tib3gudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtM1swXS5ydWxlc1swXS51c2VbMF0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jaGVja2JveC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2NoZWNrYm94LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02ZGEwMGEyNCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9jaGVja2JveC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NoZWNrYm94LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9jaGVja2JveC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ZGEwMGEyNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjZkYTAwYTI0XCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcRGV2ZWxvcG1lbnRcXFxcUHJlTWlEXFxcXEV4dGVuc2lvblxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc2ZGEwMGEyNCcpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc2ZGEwMGEyNCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc2ZGEwMGEyNCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vY2hlY2tib3gudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZkYTAwYTI0JnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzZkYTAwYTI0Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvaHRtbC9wb3B1cC9jb21wb25lbnRzL2NoZWNrYm94LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWxvYWRlci9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0zWzBdLnJ1bGVzWzBdLnVzZVswXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdmlnYXRpb24udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtM1swXS5ydWxlc1swXS51c2VbMF0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9uYXZpZ2F0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIiIsIlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8vIEB0cy1pZ25vcmVcbmltcG9ydCBjaGVja2JveCBmcm9tIFwiLi9jaGVja2JveFwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG5cdGRhdGEoKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHBsYXRmb3JtOiB3aW5kb3cubmF2aWdhdG9yLnBsYXRmb3JtLFxuXHRcdFx0aG92ZXJVc2VyOiBmYWxzZSxcblx0XHRcdHVzZXJDbGljazogZmFsc2UsXG5cdFx0XHRob3ZlckluZm86IGZhbHNlLFxuXHRcdFx0c2V0dGluZ3M6IE9iamVjdC5hc3NpZ24oXG5cdFx0XHRcdHt9LFxuXHRcdFx0XHQuLi5PYmplY3Qua2V5cyh0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncykubWFwKGsgPT4ge1xuXHRcdFx0XHRcdHJldHVybiB7IFtrXTogdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3Nba10udmFsdWUgfTtcblx0XHRcdFx0fSlcblx0XHRcdCksXG5cdFx0XHRvbkxpbmU6IG5hdmlnYXRvci5vbkxpbmVcblx0XHR9O1xuXHR9LFxuXHRjcmVhdGVkKCkge1xuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnNldHRpbmdzUG9wdXApO1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsIHRoaXMudXBkYXRlT25saW5lU3RhdHVzKTtcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgdGhpcy51cGRhdGVPbmxpbmVTdGF0dXMpO1xuXHR9LFxuXHRiZWZvcmVEZXN0cm95KCkge1xuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnNldHRpbmdzUG9wdXApO1xuXHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsIHRoaXMudXBkYXRlT25saW5lU3RhdHVzKTtcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgdGhpcy51cGRhdGVPbmxpbmVTdGF0dXMpO1xuXHR9LFxuXHRjb21wb25lbnRzOiB7XG5cdFx0Y2hlY2tib3hcblx0fSxcblx0Y29tcHV0ZWQ6IHtcblx0XHRpbmZvTWVzc2FnZSgpIHtcblx0XHRcdGlmICghdGhpcy5vbkxpbmUpIHJldHVybiB0aGlzLiR0KFwicG9wdXAuaW5mby5ub0ludGVybmV0Lm1lc3NhZ2VcIik7XG5cdFx0XHRpZiAoIXRoaXMuJHN0b3JlLnN0YXRlLmFwcFZlcnNpb25TdXBwb3J0ZWQpXG5cdFx0XHRcdHJldHVybiB0aGlzLiR0KFwicG9wdXAuaW5mby51bnN1cHBvcnRlZEFwcFZlcnNpb24ubWVzc2FnZVwiKTtcblx0XHRcdGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5sYXRlc3RFeHRlbnNpb25WZXJzaW9uLnVyZ2VudFVwZGF0ZSlcblx0XHRcdFx0cmV0dXJuIHRoaXMuJHQoXCJwb3B1cC5pbmZvLnNhZmFyaS51cmdlbnRVcGRhdGUubWVzc2FnZVwiKTtcblx0XHRcdGlmICghdGhpcy4kc3RvcmUuc3RhdGUubGF0ZXN0RXh0ZW5zaW9uVmVyc2lvbi5sYXRlc3RWZXJzaW9uKVxuXHRcdFx0XHRyZXR1cm4gdGhpcy4kdChcInBvcHVwLmluZm8uc2FmYXJpLm91dGRhdGVkRXh0ZW5zaW9uLm1lc3NhZ2VcIik7XG5cdFx0XHRjb25zdCByZWdFeHAgPSAvKFxcKi4qP1xcKikvZyxcblx0XHRcdFx0bm90Q29ubmVjdGVkU3RyaW5nID0gXCJwb3B1cC5pbmZvLm5vdENvbm5lY3RlZC5tZXNzYWdlXCI7XG5cblx0XHRcdGxldCBtc2cgPSB0aGlzLiR0KG5vdENvbm5lY3RlZFN0cmluZyk7XG5cblx0XHRcdGlmICghcmVnRXhwLnRlc3QobXNnKSkge1xuXHRcdFx0XHRtc2cgPSB0aGlzLiR0KFxuXHRcdFx0XHRcdG5vdENvbm5lY3RlZFN0cmluZyxcblx0XHRcdFx0XHR0aGlzLiRyb290LiRvcHRpb25zLmkxOG4uZmFsbGJhY2tMb2NhbGVcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Y29uc3QgbWF0Y2ggPSBtc2cubWF0Y2gocmVnRXhwKVswXTtcblx0XHRcdG1zZyA9IG1zZy5yZXBsYWNlKFxuXHRcdFx0XHRtYXRjaCxcblx0XHRcdFx0YDxhIGNsYXNzPVwibGlua1wiIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCJodHRwczovL2RvY3MucHJlbWlkLmFwcC90cm91Ymxlc2hvb3RpbmdcIj4ke21hdGNoLnNsaWNlKFxuXHRcdFx0XHRcdDEsXG5cdFx0XHRcdFx0bWF0Y2gubGVuZ3RoIC0gMVxuXHRcdFx0XHQpfTwvYT5gXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIG1zZztcblx0XHR9LFxuXHRcdHNob3dXYXJuaW5nRXJyb3IoKSB7XG5cdFx0XHRyZXR1cm4gIShcblx0XHRcdFx0IXRoaXMuJHN0b3JlLnN0YXRlLmxhdGVzdEV4dGVuc2lvblZlcnNpb24udXJnZW50VXBkYXRlICYmXG5cdFx0XHRcdHRoaXMuJHN0b3JlLnN0YXRlLmxhdGVzdEV4dGVuc2lvblZlcnNpb24ubGF0ZXN0VmVyc2lvbiAmJlxuXHRcdFx0XHR0aGlzLiRzdG9yZS5zdGF0ZS5jb25uZWN0ZWQgJiZcblx0XHRcdFx0dGhpcy4kc3RvcmUuc3RhdGUuYXBwVmVyc2lvblN1cHBvcnRlZCAmJlxuXHRcdFx0XHR0aGlzLm9uTGluZVxuXHRcdFx0KTtcblx0XHR9XG5cdH0sXG5cdG1ldGhvZHM6IHtcblx0XHRzZXR0aW5nc1BvcHVwKCkge1xuXHRcdFx0IXRoaXMuaG92ZXJVc2VyICYmIHRoaXMudXNlckNsaWNrID8gKHRoaXMudXNlckNsaWNrID0gZmFsc2UpIDogXCJcIjtcblx0XHR9LFxuXHRcdHVwZGF0ZVNldHRpbmcoc2V0dGluZzogc3RyaW5nKSB7XG5cdFx0XHR0aGlzLiRzdG9yZS5jb21taXQoXCJ1cGRhdGVTZXR0aW5nXCIsIHNldHRpbmcpO1xuXHRcdFx0dGhpcy5zZXR0aW5ncyA9IE9iamVjdC5hc3NpZ24oXG5cdFx0XHRcdHt9LFxuXHRcdFx0XHQuLi5PYmplY3Qua2V5cyh0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncykubWFwKGsgPT4ge1xuXHRcdFx0XHRcdHJldHVybiB7IFtrXTogdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3Nba10udmFsdWUgfTtcblx0XHRcdFx0fSlcblx0XHRcdCk7XG5cdFx0fSxcblx0XHR1cGRhdGVPbmxpbmVTdGF0dXMoKSB7XG5cdFx0XHR0aGlzLm9uTGluZSA9IG5hdmlnYXRvci5vbkxpbmU7XG5cdFx0fVxuXHR9XG59O1xuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9uYXZpZ2F0aW9uLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02MzEwMWZmZiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9uYXZpZ2F0aW9uLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vbmF2aWdhdGlvbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vbmF2aWdhdGlvbi52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02MzEwMWZmZiZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjYzMTAxZmZmXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcRGV2ZWxvcG1lbnRcXFxcUHJlTWlEXFxcXEV4dGVuc2lvblxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc2MzEwMWZmZicpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc2MzEwMWZmZicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc2MzEwMWZmZicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vbmF2aWdhdGlvbi52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjMxMDFmZmYmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNjMxMDFmZmYnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvbmF2aWdhdGlvbi52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vYXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCI8dGVtcGxhdGU+XHJcblx0PGRpdj5cclxuXHRcdDxuYXZpZ2F0aW9uIC8+XHJcblx0XHQ8cm91dGVyLXZpZXc+PC9yb3V0ZXItdmlldz5cclxuXHQ8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblx0aW1wb3J0IG5hdmlnYXRpb24gZnJvbSBcIi4vY29tcG9uZW50cy9uYXZpZ2F0aW9uXCI7XHJcblxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdGNvbXBvbmVudHM6IHtcclxuXHRcdFx0bmF2aWdhdGlvblxyXG5cdFx0fSxcclxuXHRcdGNyZWF0ZWQ6IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR0aGlzLiRzdG9yZS5jb21taXQoXHJcblx0XHRcdFx0XCJ1cGRhdGVQb3J0XCIsXHJcblx0XHRcdFx0Y2hyb21lLnJ1bnRpbWUuY29ubmVjdCh7IG5hbWU6IFwicG9wdXBcIiB9KVxyXG5cdFx0XHQpO1xyXG5cclxuXHRcdFx0dGhpcy4kc3RvcmUuc3RhdGUucG9ydC5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIobXNnID0+XHJcblx0XHRcdFx0dGhpcy4kc3RvcmUuY29tbWl0KFwidXBkYXRlQ29ubmVjdGlvblN0YXRlXCIsIG1zZylcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHR9O1xyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBsYW5nPVwic2Nzc1wiPlxyXG5cdEBpbXBvcnQgXCIuLi8uLi9hc3NldHMvc2Nzcy9fdmFyaWFibGVzLnNjc3NcIjtcclxuXHJcblx0KiB7XHJcblx0XHRmb250LWZhbWlseTogSW50ZXI7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0dXNlci1zZWxlY3Q6IG5vbmU7XHJcblx0fVxyXG5cclxuXHRodG1sLFxyXG5cdGJvZHkge1xyXG5cdFx0bWluLXdpZHRoOiAzMDBweDtcclxuXHRcdG1hcmdpbjogMDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblxyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJG5vdFF1aXRlQmxhY2s7XHJcblx0fVxyXG5cclxuXHRoMSxcclxuXHRoMixcclxuXHRoMyxcclxuXHRoNCxcclxuXHRoNSxcclxuXHRwIHtcclxuXHRcdG1hcmdpbjogMDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5cclxuXHQubGluayB7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0XHRmb250LXdlaWdodDogNjAwO1xyXG5cdFx0Y29sb3I6ICRibHVycGxlO1xyXG5cdH1cclxuPC9zdHlsZT5cclxuIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9hcHAudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWZhZGU2ODFhJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vYXBwLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiRDpcXFxcRGV2ZWxvcG1lbnRcXFxcUHJlTWlEXFxcXEV4dGVuc2lvblxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWhvdC1yZWxvYWQtYXBpXFxcXGRpc3RcXFxcaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCdmYWRlNjgxYScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdmYWRlNjgxYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdmYWRlNjgxYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vYXBwLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mYWRlNjgxYSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdmYWRlNjgxYScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjL2h0bWwvcG9wdXAvYXBwLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICB7IGF0dHJzOiB7IGlkOiBcIm1haW5XcmFwcGVyXCIgfSB9LFxuICAgIFtcbiAgICAgIF9jKFwidHJhbnNpdGlvblwiLCB7IGF0dHJzOiB7IG5hbWU6IFwiZmFkZVwiLCBtb2RlOiBcIm91dC1pblwiIH0gfSwgW1xuICAgICAgICBfdm0uaW5QcmVzZW5jZVNldHRpbmdzVmlld1xuICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBrZXk6IFwiMVwiLCBhdHRyczogeyBpZDogXCJwcmVzZW5jZVNldHRpbmdzXCIgfSB9LCBbXG4gICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgYXR0cnM6IHsgaWQ6IFwiaGVhZGluZ1dyYXBwZXJcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWFycm93LWxlZnRcIixcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImJhY2tCdG5cIiB9LFxuICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5pblByZXNlbmNlU2V0dGluZ3NWaWV3ID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiYmdcIixcbiAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0ucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEudGh1bWJuYWlsLFxuICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IFwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBhdHRyczogeyBpZDogXCJoZWFkaW5nXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0ucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEubG9nbyxcbiAgICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IFwiZmFsc2VcIlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfYyhcImgxXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnBTZXR0aW5nc1ByZXNlbmNlLm1ldGFkYXRhLnNlcnZpY2VcbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJjb250YWluZXJcIiwgYXR0cnM6IHsgaWQ6IFwicHJlc2VuY2VJbmZvXCIgfSB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF9jKFwiaDFcIiwgW1xuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcInBvcHVwLmhlYWRpbmdzLmRlc2NyaXB0aW9uXCIpKSlcbiAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF9jKFwicFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKF92bS5wcmVzZW5jZURlc2NyaXB0aW9uKSB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICByZWY6IFwic2V0dGluZ3NDb250YWluZXJcIixcbiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImNvbnRhaW5lclwiLFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwic2V0dGluZ3NcIiB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICBfYyhcImgxXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdChcInBvcHVwLmhlYWRpbmdzLnNldHRpbmdzXCIpKSldKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogXCJzZXR0aW5nc0NvbnRhaW5lclwiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zZXR0aW5nc0ZpbHRlcmVkLCBmdW5jdGlvbihzZXR0aW5nLCBpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2Ygc2V0dGluZy52YWx1ZSA9PT0gXCJudW1iZXJcIiB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzZXR0aW5nLm11bHRpTGFuZ3VhZ2UgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmcudmFsdWVzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5nLnZhbHVlcy5sZW5ndGggPiAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcInNlbGVjdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcInNldHRpbmdcIiB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBhdHRyczogeyB0aXRsZTogc2V0dGluZy50aXRsZSB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBjbGFzczogc2V0dGluZy5pY29uIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuXFx0XFx0XFx0XFx0XFx0XFx0XFx0XCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3Moc2V0dGluZy50aXRsZSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcblxcdFxcdFxcdFxcdFxcdFxcdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIXNldHRpbmcubXVsdGlMYW5ndWFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2Ygc2V0dGluZy52YWx1ZSA9PT0gXCJib29sZWFuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiY2hlY2tib3hcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBjaGVja2VkOiBzZXR0aW5nLnZhbHVlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlUHJlc2VuY2VTZXR0aW5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5nLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHNldHRpbmcudmFsdWUgPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY6IHNldHRpbmcuaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZkluRm9yOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwZWxsY2hlY2s6IFwiZmFsc2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogc2V0dGluZy5wbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogc2V0dGluZy52YWx1ZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnVwZGF0ZVByZXNlbmNlU2V0dGluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHNldHRpbmcudmFsdWUgPT09IFwibnVtYmVyXCIgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKHNldHRpbmcubXVsdGlMYW5ndWFnZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmcudmFsdWVzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZy52YWx1ZXMubGVuZ3RoID4gMSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiY3VzdG9tU2VsZWN0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBzZXR0aW5nLnZhbHVlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogc2V0dGluZy52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnVwZGF0ZVByZXNlbmNlU2V0dGluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0dGluZy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IF92bS5zZWxlY3RUb2dnbGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5hY3RpdmU6IF92bS5zZWxlY3RUb2dnbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgMlxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgOiBfYyhcbiAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgeyBrZXk6IFwiMlwiLCBhdHRyczogeyBpZDogXCJwcmVzZW5jZVdyYXBwZXJcIiB9IH0sXG4gICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGlkOiBcInRpdGxlV3JhcHBlclwiIH0gfSxcbiAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgX3ZtLmRlZmF1bHRBZGRlZFxuICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJoMVwiLCB7IGF0dHJzOiB7IGlkOiBcInRpdGxlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcblxcdFxcdFxcdFxcdFxcdFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJwb3B1cC5oZWFkaW5ncy5wcmVzZW5jZXNcIikpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuXFx0XFx0XFx0XFx0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcInRyYW5zaXRpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IG5hbWU6IFwic2xpZGVSaWdodFwiLCBtb2RlOiBcIm91dC1pblwiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2hpZnRQcmVzc2VkICYmIF92bS4kc3RvcmUuc3RhdGUuY29ubmVjdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJzcGFuXCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImxvYWRQcmVzZW5jZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5sb2FkUHJlc2VuY2UgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG5cXHRcXHRcXHRcXHRcXHRcXHRcXHRcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJwb3B1cC5wcmVzZW5jZXMubG9hZFwiKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcblxcdFxcdFxcdFxcdFxcdFxcdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiB0aGlzLnByZXNlbmNlcy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBhdHRyczogeyBpZDogXCJhY3Rpb25zXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLnNob3dEZWxldGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLXRhZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IF92bS5zaG93Q2F0ZWdvcmllcyA/IFwiYWN0aXZlXCIgOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zaG93Q2F0ZWdvcmllcyA9ICFfdm0uc2hvd0NhdGVnb3JpZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dEZWxldGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWNoZWNrLWNpcmNsZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgXCJncmlkLWNvbHVtbi1lbmRcIjogXCJub25lXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcImRlbGV0ZVByZXNlbmNlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2hvd0RlbGV0ZSA9ICFfdm0uc2hvd0RlbGV0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfYyhcImlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLXRyYXNoLWFsdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zaG93RGVsZXRlID0gIV92bS5zaG93RGVsZXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKClcbiAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF9jKFwidHJhbnNpdGlvblwiLCB7IGF0dHJzOiB7IG5hbWU6IFwiY2F0ZWdvcnlIZWlnaHRcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgIF92bS5zaG93Q2F0ZWdvcmllc1xuICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwiY2F0ZWdvcmllc1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2V3aGVlbDogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhdFNjcm9sbCgkZXZlbnQsIFwid2hlZWxcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vdXNlZG93bjogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhdFNjcm9sbCgkZXZlbnQsIFwiZG93blwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2V1cDogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhdFNjcm9sbCgkZXZlbnQsIFwidXBcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vdXNlbW92ZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNhdFNjcm9sbCgkZXZlbnQsIFwibW92ZVwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW91c2VsZWF2ZTogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uY2F0TURvd24gPSBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uZmlsdGVyZWRDYXRlZ29yaWVzLCBmdW5jdGlvbihjYXRlZ29yeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzcGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBjYXRlZ29yeS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uYWN0aXZlQ2F0ZWdvcnkgPT09IGNhdGVnb3J5LmlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcImFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5hY3RpdmVDYXRlZ29yeSA9IGNhdGVnb3J5LmlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7IGNsYXNzOiBjYXRlZ29yeS5pY29uIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaDFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB0ZXh0Q29udGVudDogX3ZtLl9zKGNhdGVnb3J5LnRleHQpIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIDBcbiAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKClcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF92bS5sb2FkaW5nUHJlc2VuY2VzXG4gICAgICAgICAgICAgICAgICA/IF9jKFwiZGl2XCIsIHsgYXR0cnM6IHsgaWQ6IFwibG9hZGVyLWNvbnRhaW5lclwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwibG9hZGVyXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbWdcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IFwiL2Fzc2V0cy9pbWFnZXMvaWNvbi5zdmdcIiB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcInBcIiwgW192bS5fdihfdm0uX3MoX3ZtLmxvYWRpbmdTdHJpbmcpKV0pXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgIDogdGhpcy5maWx0ZXJlZFByZXNlbmNlcy5sZW5ndGggPiAwXG4gICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBpZDogXCJwcmVzZW5jZXNcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5maWx0ZXJlZFByZXNlbmNlcywgZnVuY3Rpb24ocHJlc2VuY2UsIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IFwicFwiICsgaSwgYXR0cnM6IHsgaWQ6IFwicHJlc2VuY2VcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHByZXNlbmNlLm1ldGFkYXRhLmxvZ28sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogXCJmYWxzZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogcHJlc2VuY2UubWV0YWRhdGEuc2VydmljZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImgxXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRpdGxlOiBwcmVzZW5jZS5tZXRhZGF0YS5zZXJ2aWNlIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2UudG1wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwgW192bS5fdihcIlRNUFwiKV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhwcmVzZW5jZS5tZXRhZGF0YS5zZXJ2aWNlKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcblxcdFxcdFxcdFxcdFxcdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXByZXNlbmNlLm5vQ29nICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlc2VuY2UubWV0YWRhdGEuc2V0dGluZ3MgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZS5tZXRhZGF0YS5zZXR0aW5ncy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIV92bS5zaG93RGVsZXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLWNvZyBhY3Rpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogXCJzZXR0aW5nc1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS50b2dnbGVQcmVzZW5jZVNldHRpbmdzKGkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0cmFuc2l0aW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IG5hbWU6IFwiZmFkZVwiLCBtb2RlOiBcIm91dC1pblwiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnNob3dEZWxldGUgJiYgIXByZXNlbmNlLm1ldGFUYWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwic3BhblwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLXRyYXNoLWFsdCBhY3Rpb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRlbGV0ZVByZXNlbmNlKGkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF9jKFwiY2hlY2tib3hcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IHByZXNlbmNlLmVuYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IHByZXNlbmNlLm1ldGFkYXRhLmNvbG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlUHJlc2VuY2UoaSwgJGV2ZW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICA6IF9jKFwiZGl2XCIsIHsgYXR0cnM6IHsgaWQ6IFwibm9QcmVzZW5jZXNcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uZGVmYXVsdEFkZGVkXG4gICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwicFwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS4kdChcInBvcHVwLnByZXNlbmNlcy5ub1ByZXNlbmNlc1wiKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICA6IF9jKFwiZGl2XCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInBcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcblxcdFxcdFxcdFxcdFxcdFxcdEV4dGVuc2lvbiBkaWQgbm90IGluaXRpYWxpemUgY29ycmVjdGx5LlxcblxcdFxcdFxcdFxcdFxcdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3BhblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogXCJyZWluaXRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnJlaW5pdCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihcIlJlaW5pdGlhbGl6ZVwiKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgX3ZtLmRlZmF1bHRBZGRlZFxuICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImFcIixcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwcmVzZW5jZVN0b3JlQnRuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly9wcmVtaWQuYXBwL3N0b3JlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogXCJfYmxhbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBcImZhbHNlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS4kdChcInBvcHVwLmJ1dHRvbnMucHJlc2VuY2VTdG9yZVwiKSkpXVxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIDFcbiAgICAgICAgICAgIClcbiAgICAgIF0pXG4gICAgXSxcbiAgICAxXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgY2xhc3M6IF92bS5hY3RpdmUgPyBcImFjdGl2ZVwiIDogbnVsbCxcbiAgICAgIGF0dHJzOiB7IGlkOiBcInNlbGVjdFwiIH0sXG4gICAgICBvbjogeyBjbGljazogX3ZtLnRvZ2dsZUFjdGl2ZSB9XG4gICAgfSxcbiAgICBbXG4gICAgICBfYyhcbiAgICAgICAgXCJkaXZcIixcbiAgICAgICAge1xuICAgICAgICAgIHJlZjogXCJ3cmFwcGVyXCIsXG4gICAgICAgICAgc3R5bGU6IHsgbWF4SGVpZ2h0OiBfdm0uc2VsZWN0SGVpZ2h0ICsgXCJweFwiIH0sXG4gICAgICAgICAgYXR0cnM6IHsgaWQ6IFwid3JhcHBlclwiIH1cbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF92bS4kcHJvcHMub3B0aW9ucyAmJiB0eXBlb2YgX3ZtLiRwcm9wcy5vcHRpb25zWzBdID09PSBcIm9iamVjdFwiXG4gICAgICAgICAgICA/IFtcbiAgICAgICAgICAgICAgICBfYyhcInBcIiwge1xuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6IFwic2hvd1wiIH0sXG4gICAgICAgICAgICAgICAgICBkb21Qcm9wczoge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogX3ZtLl9zKFxuICAgICAgICAgICAgICAgICAgICAgIF92bS4kcHJvcHMub3B0aW9ucy5maW5kKGZ1bmN0aW9uKGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGwudmFsdWUgPT09XG4gICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uJHByb3BzLnNlbGVjdGVkICYmIF92bS4kcHJvcHMuc2VsZWN0ZWQgIT09IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF92bS4kcHJvcHMuc2VsZWN0ZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5ERUZBVUxUX0xPQ0FMRSlcbiAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICB9KS5uYW1lXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF92bS5fbChcbiAgICAgICAgICAgICAgICAgIF92bS4kcHJvcHMub3B0aW9ucy5maWx0ZXIoZnVuY3Rpb24obykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gby52YWx1ZSAhPT0gX3ZtLiRwcm9wcy5zZWxlY3RlZFxuICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICBmdW5jdGlvbihvKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfYyhcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgICAgICAgIGtleTogby52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB0ZXh0Q29udGVudDogX3ZtLl9zKG8ubmFtZSkgfSxcbiAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRlbWl0KFwiY2hhbmdlXCIsIG8udmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgOiBbXG4gICAgICAgICAgICAgICAgX2MoXCJwXCIsIHtcbiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcInNob3dcIiB9LFxuICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dENvbnRlbnQ6IF92bS5fcyhfdm0uJHByb3BzLm9wdGlvbnNbX3ZtLiRwcm9wcy5zZWxlY3RlZF0pXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLiRwcm9wcy5vcHRpb25zLCBmdW5jdGlvbihzLCBpKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICBzICE9IF92bS4kcHJvcHMub3B0aW9uc1tfdm0uJHByb3BzLnNlbGVjdGVkXVxuICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB0ZXh0Q29udGVudDogX3ZtLl9zKHMpIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdChcImNoYW5nZVwiLCBpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgXVxuICAgICAgICBdLFxuICAgICAgICAyXG4gICAgICApXG4gICAgXVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwiPHRlbXBsYXRlPlxyXG4gIDxkaXYgaWQ9XCJzZWxlY3RcIiA6Y2xhc3M9XCJhY3RpdmUgPyAnYWN0aXZlJyA6IG51bGxcIiBAY2xpY2s9XCJ0b2dnbGVBY3RpdmVcIj5cclxuICAgIDxkaXYgaWQ9XCJ3cmFwcGVyXCIgOnN0eWxlPVwieyBtYXhIZWlnaHQ6IHNlbGVjdEhlaWdodCArICdweCd9XCIgcmVmPVwid3JhcHBlclwiPlxyXG4gICAgICA8dGVtcGxhdGUgdi1pZj1cIiRwcm9wcy5vcHRpb25zICYmIHR5cGVvZiAkcHJvcHMub3B0aW9uc1swXSA9PT0gJ29iamVjdCdcIj5cclxuICAgICAgICAgIDxwIGlkPVwic2hvd1wiIHYtdGV4dD1cIiRwcm9wcy5vcHRpb25zLmZpbmQobCA9PiBsLnZhbHVlID09PSAoKCRwcm9wcy5zZWxlY3RlZCAmJiAkcHJvcHMuc2VsZWN0ZWQgIT09IHRydWUpID8gJHByb3BzLnNlbGVjdGVkIDogREVGQVVMVF9MT0NBTEUpKS5uYW1lXCIgLz5cclxuICAgICAgICAgIDxzcGFuIHYtZm9yPVwibyBpbiAkcHJvcHMub3B0aW9ucy5maWx0ZXIobyA9PiBvLnZhbHVlICE9PSAkcHJvcHMuc2VsZWN0ZWQpXCIgOmtleT1cIm8udmFsdWVcIiB2LXRleHQ9XCJvLm5hbWVcIiBAY2xpY2s9XCIkZW1pdCgnY2hhbmdlJywgby52YWx1ZSlcIiAvPlxyXG4gICAgICA8L3RlbXBsYXRlPlxyXG4gICAgICA8dGVtcGxhdGUgdi1lbHNlPlxyXG4gICAgICAgIDxwIGlkPVwic2hvd1wiIHYtdGV4dD1cIiRwcm9wcy5vcHRpb25zWyRwcm9wcy5zZWxlY3RlZF1cIiAvPlxyXG4gICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj1cIihzLCBpKSBpbiAkcHJvcHMub3B0aW9uc1wiPlxyXG4gICAgICAgICAgPHNwYW4gdi1pZj1cInMgIT0gJHByb3BzLm9wdGlvbnNbJHByb3BzLnNlbGVjdGVkXVwiIDprZXk9XCJpXCIgdi10ZXh0PVwic1wiIEBjbGljaz1cIiRlbWl0KCdjaGFuZ2UnLGkpXCIgLz5cclxuICAgICAgICA8L3RlbXBsYXRlPlxyXG4gICAgICA8L3RlbXBsYXRlPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9kaXY+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5pbXBvcnQgeyBERUZBVUxUX0xPQ0FMRSB9IGZyb20gJy4uLy4uLy4uL3V0aWwvbGFuZ01hbmFnZXInO1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgcHJvcHM6IFtcIm9wdGlvbnNcIiwgXCJzZWxlY3RlZFwiXSxcclxuICBldmVudHM6IFtcImFjdGl2ZVwiLCBcImluYWN0aXZlXCJdLFxyXG4gIGRhdGEoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBhY3RpdmU6IGZhbHNlLFxyXG4gICAgICBERUZBVUxUX0xPQ0FMRTogREVGQVVMVF9MT0NBTEUsXHJcbiAgICAgIHNlbGVjdEhlaWdodDogbnVsbFxyXG4gICAgfTtcclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIHRvZ2dsZUFjdGl2ZSgpIHtcclxuICAgICAgdGhpcy5hY3RpdmUgPSAhdGhpcy5hY3RpdmU7XHJcblxyXG4gICAgICBsZXQgZXZlbnRUeXBlO1xyXG4gICAgICBpZiAodGhpcy5hY3RpdmUpIHtcclxuICAgICAgICBldmVudFR5cGUgPSBcImFjdGl2ZVwiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGV2ZW50VHlwZSA9IFwiaW5hY3RpdmVcIjtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gbGV0IGZpcnN0IHJlZHJhdyB0aGUgZWxlbWVudCB0byB0aGUgYnJvd3NlclxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLiRlbWl0KGV2ZW50VHlwZSwgZXZlbnRUeXBlLCB0aGlzLiRyZWZzLndyYXBwZXIpO1xyXG4gICAgICB9LCAwKTtcclxuICAgIH1cclxuICB9LFxyXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgbGV0IHdyYXBwZXIgPSB0aGlzLiRyZWZzLndyYXBwZXIsXHJcbiAgICAgIGNsaWVudFJlY3QgPSB3cmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICB0aGlzLnNlbGVjdEhlaWdodCA9IE1hdGgubWF4KDg1LCB3aW5kb3cuaW5uZXJIZWlnaHQgLSAoY2xpZW50UmVjdC55ICsgMTApKTtcclxuICB9XHJcbn07XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxyXG5AaW1wb3J0IFwiLi4vLi4vLi4vYXNzZXRzL3Njc3MvX3ZhcmlhYmxlcy5zY3NzXCI7XHJcblxyXG4jc2VsZWN0IHtcclxuICBjb2xvcjogJGdyZXlwbGU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogMjVweDtcclxuICBtaW4td2lkdGg6IDc1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAmOjphZnRlciB7XHJcbiAgICByaWdodDogNXB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xyXG4gICAgdG9wOiAxMXB4O1xyXG4gIH1cclxuXHJcbiAgJi5hY3RpdmU6OmFmdGVyIHtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiB0cmFuc3BhcmVudDtcclxuICAgIHRvcDogNnB4O1xyXG4gIH1cclxuXHJcbiAgI3Nob3cge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxM3B4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gIH1cclxuXHJcbiAgI3dyYXBwZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuXHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm90UXVpdGVCbGFjaztcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBtaW4taGVpZ2h0OiAyNXB4O1xyXG4gICAgbWluLXdpZHRoOiA3NXB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG5cclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgfVxyXG5cclxuICBzcGFuIHtcclxuICAgIHRyYW5zaXRpb246IDAuMTVzIGFsbCBlYXNlLW91dDtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmFjdGl2ZSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR6LWluZGV4OiAxO1xyXG4gICAgc3BhbiB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3BhbiB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG48L3N0eWxlPlxyXG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY3VzdG9tU2VsZWN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2N1c3RvbVNlbGVjdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2N1c3RvbVNlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2RhNTFjNzgmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vY3VzdG9tU2VsZWN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vY3VzdG9tU2VsZWN0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9jdXN0b21TZWxlY3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9N2RhNTFjNzgmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI3ZGE1MWM3OFwiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkQ6XFxcXERldmVsb3BtZW50XFxcXFByZU1pRFxcXFxFeHRlbnNpb25cXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1ob3QtcmVsb2FkLWFwaVxcXFxkaXN0XFxcXGluZGV4LmpzXCIpXG4gIGFwaS5pbnN0YWxsKHJlcXVpcmUoJ3Z1ZScpKVxuICBpZiAoYXBpLmNvbXBhdGlibGUpIHtcbiAgICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gICAgaWYgKCFhcGkuaXNSZWNvcmRlZCgnN2RhNTFjNzgnKSkge1xuICAgICAgYXBpLmNyZWF0ZVJlY29yZCgnN2RhNTFjNzgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbG9hZCgnN2RhNTFjNzgnLCBjb21wb25lbnQub3B0aW9ucylcbiAgICB9XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL2N1c3RvbVNlbGVjdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2RhNTFjNzgmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignN2RhNTFjNzgnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9odG1sL3BvcHVwL2NvbXBvbmVudHMvY3VzdG9tU2VsZWN0LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsIlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgY2hlY2tib3ggZnJvbSBcIi4vY29tcG9uZW50cy9jaGVja2JveFwiO1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IGN1c3RvbVNlbGVjdCBmcm9tIFwiLi9jb21wb25lbnRzL2N1c3RvbVNlbGVjdFwiO1xuaW1wb3J0IHsgaW5pdFByZXNlbmNlTGFuZ3VhZ2VzIH0gZnJvbSBcIi4uLy4uL3V0aWwvcHJlc2VuY2VNYW5hZ2VyXCI7XG5pbXBvcnQgeyBnZXRTdG9yYWdlIH0gZnJvbSBcIi4uLy4uL3V0aWwvZnVuY3Rpb25zL2FzeW5jU3RvcmFnZVwiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG5cdGNvbXBvbmVudHM6IHtcblx0XHRjaGVja2JveCxcblx0XHRjdXN0b21TZWxlY3Rcblx0fSxcblx0ZGF0YSgpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2hpZnRQcmVzc2VkOiBmYWxzZSxcblx0XHRcdHByZXNlbmNlczogW10sXG5cdFx0XHRzaG93Q2F0ZWdvcmllczogZmFsc2UsXG5cdFx0XHRzaG93RGVsZXRlOiBmYWxzZSxcblx0XHRcdGNhdE1Eb3duOiBmYWxzZSxcblx0XHRcdGNhdFN0YXJ0WDogMCxcblx0XHRcdGNhdFNjcm9sbExlZnQ6IDAsXG5cdFx0XHRhY3RpdmVDYXRlZ29yeTogXCJhbGxcIixcblx0XHRcdGNhdGVnb3JpZXM6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGljb246IFwiZmFzIGZhLW1hcFwiLFxuXHRcdFx0XHRcdHRleHQ6IHRoaXMuJGkxOG4udChcInBvcHVwLmNhdGVnb3J5LmFsbFwiKSxcblx0XHRcdFx0XHRpZDogXCJhbGxcIlxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0aWNvbjogXCJmYXMgZmEtc3RhclwiLFxuXHRcdFx0XHRcdHRleHQ6IHRoaXMuJGkxOG4udChcInBvcHVwLmNhdGVnb3J5LmFuaW1lXCIpLFxuXHRcdFx0XHRcdGlkOiBcImFuaW1lXCJcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGljb246IFwiZmFzIGZhLWxlYWZcIixcblx0XHRcdFx0XHR0ZXh0OiB0aGlzLiRpMThuLnQoXCJwb3B1cC5jYXRlZ29yeS5nYW1lc1wiKSxcblx0XHRcdFx0XHRpZDogXCJnYW1lc1wiXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRpY29uOiBcImZhcyBmYS1tdXNpY1wiLFxuXHRcdFx0XHRcdHRleHQ6IHRoaXMuJGkxOG4udChcInBvcHVwLmNhdGVnb3J5Lm11c2ljXCIpLFxuXHRcdFx0XHRcdGlkOiBcIm11c2ljXCJcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGljb246IFwiZmFzIGZhLWNvbW1lbnRzXCIsXG5cdFx0XHRcdFx0dGV4dDogdGhpcy4kaTE4bi50KFwicG9wdXAuY2F0ZWdvcnkuc29jaWFsc1wiKSxcblx0XHRcdFx0XHRpZDogXCJzb2NpYWxzXCJcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGljb246IFwiZmFzIGZhLXBsYXlcIixcblx0XHRcdFx0XHR0ZXh0OiB0aGlzLiRpMThuLnQoXCJwb3B1cC5jYXRlZ29yeS52aWRlb3NcIiksXG5cdFx0XHRcdFx0aWQ6IFwidmlkZW9zXCJcblx0XHRcdFx0fSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGljb246IFwiZmFzIGZhLWJveFwiLFxuXHRcdFx0XHRcdHRleHQ6IHRoaXMuJGkxOG4udChcInBvcHVwLmNhdGVnb3J5Lm90aGVyXCIpLFxuXHRcdFx0XHRcdGlkOiBcIm90aGVyXCJcblx0XHRcdFx0fVxuXHRcdFx0XSxcblx0XHRcdGluUHJlc2VuY2VTZXR0aW5nc1ZpZXc6IGZhbHNlLFxuXHRcdFx0cFNldHRpbmdzUHJlc2VuY2U6IG51bGwsXG5cdFx0XHRwU2V0dGluZ3M6IG51bGwsXG5cdFx0XHRwcmVzZW5jZVNldHRpbmdzOiBbXSxcblx0XHRcdGxvYWRpbmdQcmVzZW5jZXM6IHRydWUsXG5cdFx0XHRsb2FkaW5nU3RyaW5nOiBcIlwiLFxuXHRcdFx0ZGVmYXVsdEFkZGVkOiBmYWxzZVxuXHRcdH07XG5cdH0sXG5cdHdhdGNoOiB7XG5cdFx0YXN5bmMgcHJlc2VuY2VzKG5ld1ZhbHVlLCBvbGRWYWx1ZSkge1xuXHRcdFx0aWYgKG9sZFZhbHVlLmxlbmd0aCA+IDAgJiYgbmV3VmFsdWUubGVuZ3RoID4gb2xkVmFsdWUubGVuZ3RoKSB7XG5cdFx0XHRcdGxldCBuZXdQcmVzZW5jZXMgPSBuZXdWYWx1ZS5maWx0ZXIoXG5cdFx0XHRcdFx0cCA9PiAhb2xkVmFsdWUuZmluZChvID0+IG8ubWV0YWRhdGEuc2VydmljZSA9PSBwLm1ldGFkYXRhLnNlcnZpY2UpXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0Zm9yIChjb25zdCBuZXdQcmVzZW5jZSBvZiBuZXdQcmVzZW5jZXMpIHtcblx0XHRcdFx0XHRpbml0UHJlc2VuY2VMYW5ndWFnZXMobmV3UHJlc2VuY2UpO1xuXG5cdFx0XHRcdFx0aWYgKG5ld1ByZXNlbmNlLm1ldGFkYXRhLnNldHRpbmdzKSB7XG5cdFx0XHRcdFx0XHRuZXdQcmVzZW5jZS5ub0NvZyA9ICEoXG5cdFx0XHRcdFx0XHRcdG5ld1ByZXNlbmNlLm1ldGFkYXRhLnNldHRpbmdzLmZpbmRJbmRleChcblx0XHRcdFx0XHRcdFx0XHRzID0+IHMubXVsdGlMYW5ndWFnZSAmJiBzLnZhbHVlcy5sZW5ndGggPiAxXG5cdFx0XHRcdFx0XHRcdCkgPj0gMFxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHRoaXMuJGZvcmNlVXBkYXRlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRjb21wdXRlZDoge1xuXHRcdGZpbHRlcmVkUHJlc2VuY2VzKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHJlc2VuY2VzXG5cdFx0XHRcdC5maWx0ZXIoKHAsIGkpID0+IHtcblx0XHRcdFx0XHRpZiAocC5oaWRkZW4pIHJldHVybiBmYWxzZTtcblxuXHRcdFx0XHRcdHAubm9Db2cgPSAhdGhpcy5wcmVzZW5jZVNldHRpbmdzW2ldO1xuXG5cdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0dGhpcy5jYXRlZ29yaWVzLmZpbmQoYyA9PiBjLmlkID09PSB0aGlzLmFjdGl2ZUNhdGVnb3J5KS5pZCA9PVxuXHRcdFx0XHRcdFx0XCJhbGxcIlxuXHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdHJldHVybiBwO1xuXHRcdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0XHRwLm1ldGFkYXRhLmNhdGVnb3J5ID09XG5cdFx0XHRcdFx0XHR0aGlzLmNhdGVnb3JpZXMuZmluZChjID0+IGMuaWQgPT09IHRoaXMuYWN0aXZlQ2F0ZWdvcnkpLmlkXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fSlcblx0XHRcdFx0LnNvcnQoKGEsIGIpID0+IHtcblx0XHRcdFx0XHRpZiAoYS5tZXRhVGFnICE9PSBiLm1ldGFUYWcpIHJldHVybiAtMTtcblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRhLm1ldGFkYXRhLnNlcnZpY2UudG9Mb3dlckNhc2UoKSA8XG5cdFx0XHRcdFx0XHRiLm1ldGFkYXRhLnNlcnZpY2UudG9Mb3dlckNhc2UoKVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0XHRhLm1ldGFkYXRhLnNlcnZpY2UudG9Mb3dlckNhc2UoKSA+XG5cdFx0XHRcdFx0XHRiLm1ldGFkYXRhLnNlcnZpY2UudG9Mb3dlckNhc2UoKVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHR9KTtcblx0XHR9LFxuXHRcdGZpbHRlcmVkQ2F0ZWdvcmllczogZnVuY3Rpb24oKSB7XG5cdFx0XHRsZXQgZmlsdGVyZWQgPSBbXTtcblxuXHRcdFx0Y29uc3QgY2F0TmFtZXMgPSB0aGlzLmNhdGVnb3JpZXMuZmlsdGVyKGNhdCA9PiB7XG5cdFx0XHRcdGlmIChjYXQuaWQgPT09IFwiYWxsXCIpIHJldHVybiB0cnVlO1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5wcmVzZW5jZXMuc29tZShwID0+IHAubWV0YWRhdGEuY2F0ZWdvcnkgPT09IGNhdC5pZCk7XG5cdFx0XHR9KTtcblxuXHRcdFx0Y2F0TmFtZXMubWFwKGMgPT4ge1xuXHRcdFx0XHRmaWx0ZXJlZC5wdXNoKHRoaXMuY2F0ZWdvcmllcy5maW5kKGNhdCA9PiBjYXQuaWQgPT09IGMuaWQpKTtcblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gZmlsdGVyZWQ7XG5cdFx0fSxcblx0XHRwcmVzZW5jZURlc2NyaXB0aW9uKCkge1xuXHRcdFx0bGV0IGRlc2NyaXB0aW9uID0gbnVsbDtcblxuXHRcdFx0aWYgKFxuXHRcdFx0XHR0aGlzLnBTZXR0aW5nc1ByZXNlbmNlLm1ldGFkYXRhLmRlc2NyaXB0aW9uW1xuXHRcdFx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdFx0XHRjaHJvbWUuaTE4bi5nZXRVSUxhbmd1YWdlKClcblx0XHRcdFx0XVxuXHRcdFx0KVxuXHRcdFx0XHRkZXNjcmlwdGlvbiA9IHRoaXMucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEuZGVzY3JpcHRpb25bXG5cdFx0XHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0XHRcdGNocm9tZS5pMThuLmdldFVJTGFuZ3VhZ2UoKVxuXHRcdFx0XHRdO1xuXHRcdFx0ZWxzZSBkZXNjcmlwdGlvbiA9IHRoaXMucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEuZGVzY3JpcHRpb24uZW47XG5cblx0XHRcdGNvbnN0IG1hdGNoID0gZGVzY3JpcHRpb24ubWF0Y2goL1xcWyhbXlxcXV0rKVxcXVxcKChbXildKylcXCkvZyk7XG5cdFx0XHRpZiAoIW1hdGNoKSB7XG5cdFx0XHRcdHJldHVybiBkZXNjcmlwdGlvbjtcblx0XHRcdH1cblxuXHRcdFx0Y29uc3QgZXhlYyA9IC9cXFsoW15cXF1dKylcXF1cXCgoW14pXSspXFwpL2cuZXhlYyhkZXNjcmlwdGlvbik7XG5cblx0XHRcdHJldHVybiBkZXNjcmlwdGlvbi5yZXBsYWNlKFxuXHRcdFx0XHRtYXRjaCxcblx0XHRcdFx0YDxhIGNsYXNzPVwibGlua1wiIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCIke2V4ZWNbMl19XCI+JHtleGVjWzFdfTwvYT5gXG5cdFx0XHQpO1xuXHRcdH0sXG5cdFx0c2V0dGluZ3NGaWx0ZXJlZCgpIHtcblx0XHRcdHJldHVybiB0aGlzLnBTZXR0aW5nc1xuXHRcdFx0XHQ/IHRoaXMucFNldHRpbmdzLmZpbHRlcihzID0+IHtcblx0XHRcdFx0XHRcdGlmIChzLmlmKSB7XG5cdFx0XHRcdFx0XHRcdGlmIChcblx0XHRcdFx0XHRcdFx0XHRPYmplY3Qua2V5cyhzLmlmKS5ldmVyeShcblx0XHRcdFx0XHRcdFx0XHRcdChrLCBpKSA9PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLnBTZXR0aW5ncy5maW5kKHNpID0+IHNpLmlkID09PSBrKS52YWx1ZSA9PT1cblx0XHRcdFx0XHRcdFx0XHRcdFx0T2JqZWN0LnZhbHVlcyhzLmlmKVtpXVxuXHRcdFx0XHRcdFx0XHRcdCkgJiZcblx0XHRcdFx0XHRcdFx0XHQhcy5oaWRkZW5cblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBzO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICghcy5oaWRkZW4pIHJldHVybiBzO1xuXHRcdFx0XHQgIH0pXG5cdFx0XHRcdDogdGhpcy5wU2V0dGluZ3M7XG5cdFx0fVxuXHR9LFxuXHRtZXRob2RzOiB7XG5cdFx0bG9hZFByZXNlbmNlKCkge1xuXHRcdFx0dGhpcy5zaGlmdFByZXNzZWQgPSBmYWxzZTtcblx0XHRcdHRoaXMuJHN0b3JlLnN0YXRlLnBvcnQucG9zdE1lc3NhZ2UoeyBhY3Rpb246IFwibG9hZExvY2FsUHJlc2VuY2VcIiB9KTtcblx0XHR9LFxuXHRcdGNhdFNjcm9sbChlOiBXaGVlbEV2ZW50IHwgTW91c2VFdmVudCwgZXZlbnQ6IHN0cmluZykge1xuXHRcdFx0Y29uc3QgZWw6IEhUTUxEaXZFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXRlZ29yaWVzXCIpO1xuXG5cdFx0XHRpZiAoZXZlbnQgPT09IFwid2hlZWxcIilcblx0XHRcdFx0ZWwuc2Nyb2xsTGVmdCArPSAoKGUgYXMgV2hlZWxFdmVudCkuZGVsdGFZIC8gNjApICogMTU7XG5cdFx0XHRlbHNlIGlmIChldmVudCA9PT0gXCJkb3duXCIpIHtcblx0XHRcdFx0dGhpcy5jYXRNRG93biA9IHRydWU7XG5cdFx0XHRcdHRoaXMuY2F0U3RhcnRYID0gZS5wYWdlWCAtIGVsLm9mZnNldExlZnQ7XG5cdFx0XHRcdHRoaXMuY2F0U2Nyb2xsTGVmdCA9IGVsLnNjcm9sbExlZnQ7XG5cdFx0XHR9IGVsc2UgaWYgKGV2ZW50ID09PSBcInVwXCIpIHRoaXMuY2F0TURvd24gPSBmYWxzZTtcblx0XHRcdGVsc2UgaWYgKGV2ZW50ID09PSBcIm1vdmVcIiAmJiB0aGlzLmNhdE1Eb3duKVxuXHRcdFx0XHRlbC5zY3JvbGxMZWZ0ID1cblx0XHRcdFx0XHR0aGlzLmNhdFNjcm9sbExlZnQgLSAoZS5wYWdlWCAtIGVsLm9mZnNldExlZnQgLSB0aGlzLmNhdFN0YXJ0WCkgKiAyO1xuXHRcdH0sXG5cdFx0dXBkYXRlUHJlc2VuY2UoaTogbnVtYmVyLCB2YWx1ZTogYm9vbGVhbikge1xuXHRcdFx0dGhpcy5maWx0ZXJlZFByZXNlbmNlc1tpXS5lbmFibGVkID0gdmFsdWU7XG5cdFx0XHQvLyogWW91IG1heSBiZSB3b25kZXJpbmcsIHdoeSB0aGUgZnVjayBkbyB5b3Ugc3RyaW5naWZ5IGFuZCBwYXJzZSB0aGlzPyBHdWVzcyB3aGF0IGJlY2F1c2UgRmlyZWZveCBzdWNrcyBhbmQgYnJlYWtzIGl0cyBzdG9yYWdlXG5cdFx0XHQvL0B0cy1pZ25vcmVcblx0XHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldChcblx0XHRcdFx0SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh7IHByZXNlbmNlczogdGhpcy5wcmVzZW5jZXMgfSkpXG5cdFx0XHQpO1xuXHRcdH0sXG5cdFx0YXN5bmMgZGVsZXRlUHJlc2VuY2UoaTogbnVtYmVyKSB7XG5cdFx0XHRjb25zdCBwcmVzZW5jZVRvUmVtb3ZlID0gdGhpcy5maWx0ZXJlZFByZXNlbmNlc1tpXTtcblx0XHRcdHRoaXMucHJlc2VuY2VzID0gdGhpcy5wcmVzZW5jZXMuZmlsdGVyKFxuXHRcdFx0XHRwID0+XG5cdFx0XHRcdFx0IShcblx0XHRcdFx0XHRcdHAubWV0YWRhdGEuc2VydmljZSA9PT0gcHJlc2VuY2VUb1JlbW92ZS5tZXRhZGF0YS5zZXJ2aWNlICYmXG5cdFx0XHRcdFx0XHRwLnRtcCA9PT0gcHJlc2VuY2VUb1JlbW92ZS50bXBcblx0XHRcdFx0XHQpXG5cdFx0XHQpO1xuXG5cdFx0XHQvLyogWW91IG1heSBiZSB3b25kZXJpbmcsIHdoeSB0aGUgZnVjayBkbyB5b3Ugc3RyaW5naWZ5IGFuZCBwYXJzZSB0aGlzPyBHdWVzcyB3aGF0IGJlY2F1c2UgRmlyZWZveCBzdWNrcyBhbmQgYnJlYWtzIGl0cyBzdG9yYWdlXG5cdFx0XHQvL0B0cy1pZ25vcmVcblx0XHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldChcblx0XHRcdFx0SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh7IHByZXNlbmNlczogdGhpcy5wcmVzZW5jZXMgfSkpXG5cdFx0XHQpO1xuXG5cdFx0XHQvLyBAdHMtaWdub3JlXG5cdFx0XHRjb25zdCBzZXR0aW5ncyA9IGF3YWl0IHBtZC5nZXRTdG9yYWdlKFxuXHRcdFx0XHRcImxvY2FsXCIsXG5cdFx0XHRcdGBwU2V0dGluZ3NfJHtwcmVzZW5jZVRvUmVtb3ZlLm1ldGFkYXRhLnNlcnZpY2V9YFxuXHRcdFx0KTtcblx0XHRcdGlmIChzZXR0aW5ncykge1xuXHRcdFx0XHRjaHJvbWUuc3RvcmFnZS5sb2NhbC5yZW1vdmUoXG5cdFx0XHRcdFx0YHBTZXR0aW5nc18ke3ByZXNlbmNlVG9SZW1vdmUubWV0YWRhdGEuc2VydmljZX1gXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGFzeW5jIHRvZ2dsZVByZXNlbmNlU2V0dGluZ3MoaTogbnVtYmVyKSB7XG5cdFx0XHR0aGlzLmluUHJlc2VuY2VTZXR0aW5nc1ZpZXcgPSAhdGhpcy5pblByZXNlbmNlU2V0dGluZ3NWaWV3O1xuXHRcdFx0dGhpcy5wU2V0dGluZ3NQcmVzZW5jZSA9IHRoaXMuZmlsdGVyZWRQcmVzZW5jZXNbaV07XG5cblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGxldCBzZXR0aW5ncyA9IGF3YWl0IHBtZC5nZXRTdG9yYWdlKFxuXHRcdFx0XHRcImxvY2FsXCIsXG5cdFx0XHRcdGBwU2V0dGluZ3NfJHt0aGlzLmZpbHRlcmVkUHJlc2VuY2VzW2ldLm1ldGFkYXRhLnNlcnZpY2V9YFxuXHRcdFx0KTtcblxuXHRcdFx0c2V0dGluZ3MgPVxuXHRcdFx0XHRzZXR0aW5nc1tgcFNldHRpbmdzXyR7dGhpcy5wU2V0dGluZ3NQcmVzZW5jZS5tZXRhZGF0YS5zZXJ2aWNlfWBdO1xuXG5cdFx0XHRpZiAoc2V0dGluZ3MpIHtcblx0XHRcdFx0bGV0IHN0b3JhZ2VMbmdzU2V0dGluZ3NJZHggPSBzZXR0aW5ncy5maW5kSW5kZXgoXG5cdFx0XHRcdFx0cyA9PiB0eXBlb2Ygcy5tdWx0aUxhbmd1YWdlICE9PSBcInVuZGVmaW5lZFwiXG5cdFx0XHRcdCk7XG5cdFx0XHRcdGxldCBwcmVzZW5jZUxuZ3NTZXR0aW5ncyA9IHRoaXMucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEuc2V0dGluZ3MuZmluZChcblx0XHRcdFx0XHRzID0+IHR5cGVvZiBzLm11bHRpTGFuZ3VhZ2UgIT09IFwidW5kZWZpbmVkXCJcblx0XHRcdFx0KTtcblxuXHRcdFx0XHRpZiAoc3RvcmFnZUxuZ3NTZXR0aW5nc0lkeCA+PSAwKSB7XG5cdFx0XHRcdFx0aWYgKHByZXNlbmNlTG5nc1NldHRpbmdzKSB7XG5cdFx0XHRcdFx0XHRsZXQgc2V0dGluZyA9IHNldHRpbmdzW3N0b3JhZ2VMbmdzU2V0dGluZ3NJZHhdO1xuXHRcdFx0XHRcdFx0c2V0dGluZy5tdWx0aUxhbmd1YWdlID0gdHJ1ZTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2V0dGluZ3Muc3BsaWNlKHN0b3JhZ2VMbmdzU2V0dGluZ3NJZHgsIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnBTZXR0aW5ncyA9IHNldHRpbmdzXG5cdFx0XHRcdD8gc2V0dGluZ3Ncblx0XHRcdFx0OiB0aGlzLnBTZXR0aW5nc1ByZXNlbmNlLm1ldGFkYXRhLnNldHRpbmdzO1xuXHRcdH0sXG5cdFx0a0Rvd24oZTogS2V5Ym9hcmRFdmVudCkge1xuXHRcdFx0dGhpcy5zaGlmdFByZXNzZWQgPSBlLnNoaWZ0S2V5O1xuXHRcdH0sXG5cdFx0dXBkYXRlUHJlc2VuY2VTZXR0aW5nKHNldHRpbmcsIHZhbHVlKSB7XG5cdFx0XHRpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlLnRyaW0oKSA9PT0gXCJcIikge1xuXHRcdFx0XHR2YWx1ZSA9IHRoaXMucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEuc2V0dGluZ3MuZmluZChcblx0XHRcdFx0XHRzID0+IHMuaWQgPT09IHNldHRpbmdcblx0XHRcdFx0KS52YWx1ZTtcblxuXHRcdFx0XHQvLyogRGVidWcgZm9yIGlucHV0IHNvbWV0aW1lcyBub3QgdXBkYXRpbmdcblx0XHRcdFx0dGhpcy4kcmVmc1tzZXR0aW5nXVswXS52YWx1ZSA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLnBTZXR0aW5ncy5maW5kKHMgPT4gcy5pZCA9PT0gc2V0dGluZykudmFsdWUgPSB2YWx1ZTtcblxuXHRcdFx0Ly8qIFlvdSBtYXkgYmUgd29uZGVyaW5nLCB3aHkgdGhlIGZ1Y2sgZG8geW91IHN0cmluZ2lmeSBhbmQgcGFyc2UgdGhpcz8gR3Vlc3Mgd2hhdCBiZWNhdXNlIEZpcmVmb3ggc3Vja3MgYW5kIGJyZWFrcyBpdHMgc3RvcmFnZVxuXHRcdFx0Ly9AdHMtaWdub3JlXG5cdFx0XHRjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoXG5cdFx0XHRcdEpTT04ucGFyc2UoXG5cdFx0XHRcdFx0SlNPTi5zdHJpbmdpZnkoe1xuXHRcdFx0XHRcdFx0W2BwU2V0dGluZ3NfJHt0aGlzLnBTZXR0aW5nc1ByZXNlbmNlLm1ldGFkYXRhLnNlcnZpY2V9YF06IHRoaXNcblx0XHRcdFx0XHRcdFx0LnBTZXR0aW5nc1xuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdClcblx0XHRcdCk7XG5cdFx0fSxcblx0XHRhc3luYyByYW5kb21Mb2FkaW5nU3RyaW5nKCkge1xuXHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0Y29uc3QgbGFuZ3VhZ2VzQXJyYXkgPSBhd2FpdCBwbWQuZ2V0U3RvcmFnZShcImxvY2FsXCIsIFwibGFuZ3VhZ2VzXCIpLFxuXHRcdFx0XHR0ZXh0QXJyYXkgPSBsYW5ndWFnZXNBcnJheS5sYW5ndWFnZXMuZW4ubG9hZGluZy5zcGxpdChcIjtcIiksXG5cdFx0XHRcdHJhbmRvbU51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRleHRBcnJheS5sZW5ndGgpO1xuXG5cdFx0XHR0aGlzLmxvYWRpbmdTdHJpbmcgPSB0ZXh0QXJyYXlbcmFuZG9tTnVtYmVyXTtcblx0XHR9LFxuXHRcdHNlbGVjdFRvZ2dsZShldmVudFR5cGUsIHdyYXBwZXIpIHtcblx0XHRcdGlmIChldmVudFR5cGUgPT09IFwiYWN0aXZlXCIpIHtcblx0XHRcdFx0Y29uc3QgZGlmZiA9XG5cdFx0XHRcdFx0d3JhcHBlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5ib3R0b20gLVxuXHRcdFx0XHRcdHRoaXMuJHJlZnMuc2V0dGluZ3NDb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuYm90dG9tO1xuXG5cdFx0XHRcdGlmIChkaWZmID4gMCkge1xuXHRcdFx0XHRcdHRoaXMuJHJlZnMuc2V0dGluZ3NDb250YWluZXIuc3R5bGUucGFkZGluZ0JvdHRvbSA9IGRpZmYgKyA4ICsgXCJweFwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGV2ZW50VHlwZSA9PT0gXCJpbmFjdGl2ZVwiKSB7XG5cdFx0XHRcdHRoaXMuJHJlZnMuc2V0dGluZ3NDb250YWluZXIuc3R5bGUucGFkZGluZ0JvdHRvbSA9IG51bGw7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRhc3luYyByZWluaXQoKSB7XG5cdFx0XHR0aGlzLmxvYWRpbmdQcmVzZW5jZXMgPSB0cnVlO1xuXHRcdFx0Y29uc3QgcG9ydCA9IGNocm9tZS5ydW50aW1lLmNvbm5lY3QoeyBuYW1lOiBcImFwcC50c1wiIH0pO1xuXG5cdFx0XHRwb3J0Lm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihtc2cgPT4ge1xuXHRcdFx0XHRpZiAobXNnLnN1Y2Nlc3MpIHtcblx0XHRcdFx0XHRsb2NhdGlvbi5yZWxvYWQoKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR0aGlzLmxvYWRpbmdQcmVzZW5jZXMgPSBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdHBvcnQucG9zdE1lc3NhZ2UoeyBhY3Rpb246IFwicmVpbml0XCIgfSk7XG5cdFx0fVxuXHR9LFxuXHRjcmVhdGVkOiBhc3luYyBmdW5jdGlvbigpIHtcblx0XHR0aGlzLnJhbmRvbUxvYWRpbmdTdHJpbmcoKTtcblxuXHRcdHRoaXMuZGVmYXVsdEFkZGVkID0gKFxuXHRcdFx0YXdhaXQgZ2V0U3RvcmFnZShcImxvY2FsXCIsIFwiZGVmYXVsdEFkZGVkXCIpXG5cdFx0KS5kZWZhdWx0QWRkZWQ7XG5cblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0KHRoaXMucHJlc2VuY2VzID0gKGF3YWl0IHBtZC5nZXRTdG9yYWdlKFwibG9jYWxcIiwgXCJwcmVzZW5jZXNcIikpLnByZXNlbmNlcyksXG5cdFx0XHQodGhpcy5wcmVzZW5jZVNldHRpbmdzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG5cdFx0XHRcdHRoaXMucHJlc2VuY2VzLm1hcChhc3luYyBwID0+IHtcblx0XHRcdFx0XHRpZiAocC5tZXRhZGF0YS5zZXR0aW5ncykge1xuXHRcdFx0XHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0XHRcdFx0Y29uc3QgcHJlc2VuY2VTZXR0aW5ncyA9IGF3YWl0IHBtZC5nZXRTdG9yYWdlKFxuXHRcdFx0XHRcdFx0XHRcImxvY2FsXCIsXG5cdFx0XHRcdFx0XHRcdGBwU2V0dGluZ3NfJHtwLm1ldGFkYXRhLnNlcnZpY2V9YFxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0aW5pdFByZXNlbmNlTGFuZ3VhZ2VzKHApO1xuXG5cdFx0XHRcdFx0XHRyZXR1cm4gIShcblx0XHRcdFx0XHRcdFx0cHJlc2VuY2VTZXR0aW5nc1tgcFNldHRpbmdzXyR7cC5tZXRhZGF0YS5zZXJ2aWNlfWBdICYmXG5cdFx0XHRcdFx0XHRcdHByZXNlbmNlU2V0dGluZ3NbYHBTZXR0aW5nc18ke3AubWV0YWRhdGEuc2VydmljZX1gXS5maWx0ZXIoXG5cdFx0XHRcdFx0XHRcdFx0cyA9PiAhcy5oaWRkZW5cblx0XHRcdFx0XHRcdFx0KS5sZW5ndGggPT09IDBcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSBlbHNlIHJldHVybiBmYWxzZTtcblx0XHRcdFx0fSlcblx0XHRcdCkpO1xuXG5cdFx0dGhpcy5sb2FkaW5nUHJlc2VuY2VzID0gZmFsc2U7XG5cblx0XHQvLyogUHJlc2VuY2UgaG90IHJlbG9hZFxuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRjaHJvbWUuc3RvcmFnZS5vbkNoYW5nZWQuYWRkTGlzdGVuZXIoc3RvcmFnZSA9PiB7XG5cdFx0XHRpZiAoc3RvcmFnZS5wcmVzZW5jZXMpIHRoaXMucHJlc2VuY2VzID0gc3RvcmFnZS5wcmVzZW5jZXMubmV3VmFsdWU7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdHRoaXMucFNldHRpbmdzUHJlc2VuY2UgJiZcblx0XHRcdFx0c3RvcmFnZVtgcFNldHRpbmdzXyR7dGhpcy5wU2V0dGluZ3NQcmVzZW5jZS5tZXRhZGF0YS5zZXJ2aWNlfWBdXG5cdFx0XHQpXG5cdFx0XHRcdHRoaXMucFNldHRpbmdzID1cblx0XHRcdFx0XHRzdG9yYWdlW1xuXHRcdFx0XHRcdFx0YHBTZXR0aW5nc18ke3RoaXMucFNldHRpbmdzUHJlc2VuY2UubWV0YWRhdGEuc2VydmljZX1gXG5cdFx0XHRcdFx0XS5uZXdWYWx1ZTtcblxuXHRcdFx0dGhpcy5wcmVzZW5jZXNcblx0XHRcdFx0LmZpbHRlcihcblx0XHRcdFx0XHRwID0+XG5cdFx0XHRcdFx0XHRwLm1ldGFkYXRhLnNldHRpbmdzICYmXG5cdFx0XHRcdFx0XHRwLm1ldGFkYXRhLnNldHRpbmdzLmZpbmQocyA9PlxuXHRcdFx0XHRcdFx0XHRPYmplY3Qua2V5cyhzKS5pbmNsdWRlcyhcIm11bHRpTGFuZ3VhZ2VcIilcblx0XHRcdFx0XHRcdClcblx0XHRcdFx0KVxuXHRcdFx0XHQuZm9yRWFjaChhc3luYyBwID0+IHtcblx0XHRcdFx0XHRhd2FpdCBpbml0UHJlc2VuY2VMYW5ndWFnZXMocCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0dGhpcy4kZm9yY2VVcGRhdGUoKTtcblx0XHR9KTtcblxuXHRcdC8vKiBQcmVzZW5jZSBEZXZcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5rRG93bik7XG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLmtEb3duKTtcblx0fSxcblx0YmVmb3JlRGVzdHJveTogZnVuY3Rpb24oKSB7XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMua0Rvd24pO1xuXHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5rRG93bik7XG5cdH1cbn07XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P2Nsb25lZFJ1bGVTZXQtM1swXS5ydWxlc1swXS51c2VbMF0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zZXR0aW5ncy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3RzLWxvYWRlci9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC0zWzBdLnJ1bGVzWzBdLnVzZVswXSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3NldHRpbmdzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vc2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTZmN2ZkMWMxJnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3NldHRpbmdzLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz10cyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vc2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3NldHRpbmdzLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTZmN2ZkMWMxJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNmY3ZmQxYzFcIixcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHtcbiAgdmFyIGFwaSA9IHJlcXVpcmUoXCJEOlxcXFxEZXZlbG9wbWVudFxcXFxQcmVNaURcXFxcRXh0ZW5zaW9uXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzZmN2ZkMWMxJykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzZmN2ZkMWMxJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzZmN2ZkMWMxJywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9zZXR0aW5ncy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NmY3ZmQxYzEmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGFwaS5yZXJlbmRlcignNmY3ZmQxYzEnLCB7XG4gICAgICAgIHJlbmRlcjogcmVuZGVyLFxuICAgICAgICBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZuc1xuICAgICAgfSlcbiAgICB9KVxuICB9XG59XG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyYy9odG1sL3BvcHVwL3NldHRpbmdzLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyIsImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xyXG5pbXBvcnQgVnVlSTE4biBmcm9tIFwidnVlLWkxOG5cIjtcclxuaW1wb3J0IFZ1ZVJvdXRlciBmcm9tIFwidnVlLXJvdXRlclwiO1xyXG5pbXBvcnQgVnVleCBmcm9tIFwidnVleFwiO1xyXG5cclxuLy8gQHRzLWlnbm9yZVxyXG5pbXBvcnQgYXBwVmlldyBmcm9tIFwiLi9hcHAudnVlXCI7XHJcbi8vIEB0cy1pZ25vcmVcclxuaW1wb3J0IHNldHRpbmdzIGZyb20gXCIuL3NldHRpbmdzLnZ1ZVwiO1xyXG5cclxuVnVlLmNvbmZpZy5wcm9kdWN0aW9uVGlwID0gZmFsc2U7XHJcblZ1ZS5jb25maWcuZGV2dG9vbHMgPSBmYWxzZTtcclxuXHJcblZ1ZS51c2UoVnVlUm91dGVyKTtcclxuVnVlLnVzZShWdWVJMThuKTtcclxuVnVlLnVzZShWdWV4KTtcclxuXHJcbndpbmRvdy5vbmxvYWQgPSBhc3luYyAoKSA9PiB7XHJcblx0Ly8gQHRzLWlnbm9yZVxyXG5cdGNvbnN0IGRpc2NvcmRVc2VyID0gKGF3YWl0IHBtZC5nZXRTdG9yYWdlKFwibG9jYWxcIiwgXCJkaXNjb3JkVXNlclwiKSlcclxuXHRcdC5kaXNjb3JkVXNlcjtcclxuXHJcblx0bmV3IFZ1ZSh7XHJcblx0XHRpMThuOiBuZXcgVnVlSTE4bih7XHJcblx0XHRcdGxvY2FsZTogY2hyb21lLmkxOG4uZ2V0VUlMYW5ndWFnZSgpLFxyXG5cdFx0XHQvLyBAdHMtaWdub3JlXHJcblx0XHRcdG1lc3NhZ2VzOiBhd2FpdCBwbWQuZ2V0U3RyaW5ncyhjaHJvbWUuaTE4bi5nZXRVSUxhbmd1YWdlKCkgfHwgXCJlblwiKSxcclxuXHRcdFx0ZmFsbGJhY2tMb2NhbGU6IFwiZW5cIixcclxuXHRcdFx0c2lsZW50VHJhbnNsYXRpb25XYXJuOiB0cnVlXHJcblx0XHR9KSxcclxuXHRcdHJlbmRlcjogaCA9PiBoKGFwcFZpZXcpLFxyXG5cdFx0c3RvcmU6IG5ldyBWdWV4LlN0b3JlKHtcclxuXHRcdFx0c3RhdGU6IHtcclxuXHRcdFx0XHRwb3J0OiBudWxsLFxyXG5cdFx0XHRcdGNvbm5lY3RlZDogdHJ1ZSxcclxuXHRcdFx0XHRhcHBWZXJzaW9uU3VwcG9ydGVkOiB0cnVlLFxyXG5cdFx0XHRcdGxhdGVzdEV4dGVuc2lvblZlcnNpb246IHsgbGF0ZXN0VmVyc2lvbjogdHJ1ZSwgdXJnZW50VXBkYXRlOiBmYWxzZSB9LFxyXG5cdFx0XHRcdHVzZXJBdmF0YXI6XHJcblx0XHRcdFx0XHRkaXNjb3JkVXNlciAmJiBkaXNjb3JkVXNlci5hdmF0YXIgIT09IG51bGxcclxuXHRcdFx0XHRcdFx0PyBgaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXZhdGFycy8ke2Rpc2NvcmRVc2VyLmlkfS8ke2Rpc2NvcmRVc2VyLmF2YXRhcn0/c2l6ZT0xMjhgXHJcblx0XHRcdFx0XHRcdDogXCJodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9lbWJlZC9hdmF0YXJzLzAucG5nP3NpemU9MTI4XCIsXHJcblx0XHRcdFx0Ly8gQHRzLWlnbm9yZVxyXG5cdFx0XHRcdHNldHRpbmdzOiAoYXdhaXQgcG1kLmdldFN0b3JhZ2UoXCJzeW5jXCIsIFwic2V0dGluZ3NcIikpLnNldHRpbmdzXHJcblx0XHRcdH0sXHJcblx0XHRcdG11dGF0aW9uczoge1xyXG5cdFx0XHRcdHVwZGF0ZUNvbm5lY3Rpb25TdGF0ZShzdGF0ZSwgcGF5bG9hZCkge1xyXG5cdFx0XHRcdFx0c3RhdGUuY29ubmVjdGVkID0gcGF5bG9hZC5jb25uZWN0ZWQ7XHJcblx0XHRcdFx0XHRzdGF0ZS5hcHBWZXJzaW9uU3VwcG9ydGVkID0gcGF5bG9hZC5hcHBWZXJzaW9uU3VwcG9ydGVkO1xyXG5cdFx0XHRcdFx0c3RhdGUubGF0ZXN0RXh0ZW5zaW9uVmVyc2lvbiA9IHBheWxvYWQubGF0ZXN0RXh0ZW5zaW9uVmVyc2lvbjtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHVwZGF0ZVNldHRpbmcoc3RhdGUsIHBheWxvYWQpIHtcclxuXHRcdFx0XHRcdHN0YXRlLnNldHRpbmdzW3BheWxvYWRdLnZhbHVlID0gIXN0YXRlLnNldHRpbmdzW3BheWxvYWRdLnZhbHVlO1xyXG5cclxuXHRcdFx0XHRcdGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHsgc2V0dGluZ3M6IHN0YXRlLnNldHRpbmdzIH0pO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0dXBkYXRlUG9ydChzdGF0ZSwgcGF5bG9hZCkge1xyXG5cdFx0XHRcdFx0aWYgKCFzdGF0ZS5wb3J0KSBwYXlsb2FkLnBvc3RNZXNzYWdlKHsgYWN0aW9uOiBcInBvcHVwT3BlbmVkXCIgfSk7XHJcblx0XHRcdFx0XHRzdGF0ZS5wb3J0ID0gcGF5bG9hZDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0pLFxyXG5cdFx0cm91dGVyOiBuZXcgVnVlUm91dGVyKHtcclxuXHRcdFx0cm91dGVzOiBbXHJcblx0XHRcdFx0eyBwYXRoOiBcIipcIiwgcmVkaXJlY3Q6IFwiL3NldHRpbmdzXCIgfSxcclxuXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0cGF0aDogXCIvc2V0dGluZ3NcIixcclxuXHRcdFx0XHRcdGNvbXBvbmVudDogc2V0dGluZ3NcclxuXHRcdFx0XHR9XHJcblx0XHRcdF1cclxuXHRcdH0pXHJcblx0fSkuJG1vdW50KFwiI2FwcFwiKTtcclxufTtcclxuIiwiaW1wb3J0IHsgcmVsZWFzZVR5cGUgfSBmcm9tIFwiLi4vY29uZmlnXCI7XHJcblxyXG5jb25zdCBnZW5lcmljU3R5bGUgPSBcImZvbnQtd2VpZ2h0OiA4MDA7IHBhZGRpbmc6IDJweCA1cHg7IGNvbG9yOiB3aGl0ZTtcIixcclxuXHRkZWJ1Z2dpbmcgPSByZWxlYXNlVHlwZSAhPT0gXCJSRUxFQVNFXCI7XHJcbmxldCBsYXN0RmlsZTogc3RyaW5nO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluZm8oZmlsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGZvcmNlID0gZmFsc2UpIHtcclxuXHRpZiAoIWRlYnVnZ2luZyAmJiAhZm9yY2UpIHJldHVybjtcclxuXHJcblx0Ly8qIEdyb3VwIGJ5IGZpbGVcclxuXHRncm91cEZpbGUoZmlsZSk7XHJcblx0Y29uc29sZS5sb2coXHJcblx0XHRcIiVjUHJlTWlEJWNJTkZPJWMgXCIgKyBtZXNzYWdlLFxyXG5cdFx0Z2VuZXJpY1N0eWxlICsgXCJib3JkZXItcmFkaXVzOiAyNXB4IDAgMCAyNXB4OyBiYWNrZ3JvdW5kOiAjNTk2Y2FlO1wiLFxyXG5cdFx0Z2VuZXJpY1N0eWxlICsgXCJib3JkZXItcmFkaXVzOiAwIDI1cHggMjVweCAwOyBiYWNrZ3JvdW5kOiAjNTA1MGZmO1wiLFxyXG5cdFx0XCJjb2xvcjogdW5zZXQ7XCJcclxuXHQpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc3VjY2VzcyhmaWxlOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgZm9yY2UgPSBmYWxzZSkge1xyXG5cdGlmICghZGVidWdnaW5nICYmICFmb3JjZSkgcmV0dXJuO1xyXG5cclxuXHQvLyogR3JvdXAgYnkgZmlsZVxyXG5cdGdyb3VwRmlsZShmaWxlKTtcclxuXHRjb25zb2xlLmxvZyhcclxuXHRcdFwiJWNQcmVNaUQlY1NVQ0NFU1MlYyBcIiArIG1lc3NhZ2UsXHJcblx0XHRnZW5lcmljU3R5bGUgKyBcImJvcmRlci1yYWRpdXM6IDI1cHggMCAwIDI1cHg7IGJhY2tncm91bmQ6ICM1OTZjYWU7XCIsXHJcblx0XHRnZW5lcmljU3R5bGUgK1xyXG5cdFx0XHRcImJvcmRlci1yYWRpdXM6IDAgMjVweCAyNXB4IDA7IGJhY2tncm91bmQ6ICM1MGZmNTA7IGNvbG9yOiBibGFjaztcIixcclxuXHRcdFwiY29sb3I6IHVuc2V0O1wiXHJcblx0KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGVycm9yKGZpbGU6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBmb3JjZSA9IGZhbHNlKSB7XHJcblx0aWYgKCFkZWJ1Z2dpbmcgJiYgIWZvcmNlKSByZXR1cm47XHJcblxyXG5cdC8vKiBHcm91cCBieSBmaWxlXHJcblx0Z3JvdXBGaWxlKGZpbGUpO1xyXG5cdGNvbnNvbGUubG9nKFxyXG5cdFx0XCIlY1ByZU1pRCVjRVJST1IlYyBcIiArIG1lc3NhZ2UsXHJcblx0XHRnZW5lcmljU3R5bGUgKyBcImJvcmRlci1yYWRpdXM6IDI1cHggMCAwIDI1cHg7IGJhY2tncm91bmQ6ICM1OTZjYWU7XCIsXHJcblx0XHRnZW5lcmljU3R5bGUgKyBcImJvcmRlci1yYWRpdXM6IDAgMjVweCAyNXB4IDA7IGJhY2tncm91bmQ6ICNmZjUwNTA7XCIsXHJcblx0XHRcImNvbG9yOiB1bnNldDtcIlxyXG5cdCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdyb3VwRmlsZShmaWxlOiBzdHJpbmcpIHtcclxuXHRpZiAobGFzdEZpbGUgIT09IGZpbGUpIHtcclxuXHRcdGNvbnNvbGUuZ3JvdXBFbmQoKTtcclxuXHRcdGNvbnNvbGUuZ3JvdXAoZmlsZSk7XHJcblx0XHRsYXN0RmlsZSA9IGZpbGU7XHJcblx0fVxyXG59XHJcbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRTdG9yYWdlKFxyXG5cdHR5cGU6IFwibG9jYWxcIiB8IFwic3luY1wiLFxyXG5cdG5hbWU6IHN0cmluZyB8IEFycmF5PHN0cmluZz5cclxuKSB7XHJcblx0cmV0dXJuIG5ldyBQcm9taXNlPGFueT4ocmVzb2x2ZSA9PlxyXG5cdFx0Y2hyb21lLnN0b3JhZ2VbdHlwZV0uZ2V0KG5hbWUsIGl0ZW1zID0+IHJlc29sdmUoaXRlbXMpKVxyXG5cdCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRTdG9yYWdlKFxyXG5cdHR5cGU6IFwibG9jYWxcIiB8IFwic3luY1wiLFxyXG5cdGl0ZW1zOiBPYmplY3RcclxuKSB7XHJcblx0cmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KHJlc29sdmUgPT5cclxuXHRcdGNocm9tZS5zdG9yYWdlW3R5cGVdLnNldChpdGVtcywgcmVzb2x2ZSlcclxuXHQpO1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsZWFuT2JqZWN0KG9iajogb2JqZWN0KTogdm9pZCB7XHJcblx0Zm9yIChjb25zdCBwcm9wTmFtZSBpbiBvYmopIHtcclxuXHRcdGlmICh0eXBlb2Ygb2JqW3Byb3BOYW1lXSA9PSBcIm9iamVjdFwiKSB7XHJcblx0XHRcdGNsZWFuT2JqZWN0KG9ialtwcm9wTmFtZV0pO1xyXG5cdFx0fVxyXG5cdFx0aWYgKG9ialtwcm9wTmFtZV0gPT09IG51bGwgfHwgb2JqW3Byb3BOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdGRlbGV0ZSBvYmpbcHJvcE5hbWVdO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcblxyXG5pbXBvcnQgeyBhcGlCYXNlIH0gZnJvbSBcIi4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgY2xlYW5PYmplY3QgZnJvbSBcIi4vY2xlYW5PYmplY3RcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdyYXBocWxSZXF1ZXN0KHF1ZXJ5OiBzdHJpbmcpIHtcclxuXHRjb25zdCByZXMgPSBhd2FpdCBheGlvcyh7XHJcblx0XHR1cmw6IGFwaUJhc2UsXHJcblx0XHRtZXRob2Q6IFwicG9zdFwiLFxyXG5cdFx0ZGF0YToge1xyXG5cdFx0XHRxdWVyeTogcXVlcnlcclxuXHRcdH1cclxuXHR9KTtcclxuXHRjbGVhbk9iamVjdChyZXMuZGF0YSk7XHJcblxyXG5cdHJldHVybiByZXMuZGF0YTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByZXNlbmNlTWV0YWRhdGEocHJlc2VuY2U6IHN0cmluZykge1xyXG5cdGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdyYXBocWxSZXF1ZXN0KGBcclxuICAgIHF1ZXJ5IHtcclxuICAgICAgcHJlc2VuY2VzKHNlcnZpY2U6IFwiJHtwcmVzZW5jZX1cIikge1xyXG4gICAgICAgIHVybFxyXG4gICAgICAgIG1ldGFkYXRhIHtcclxuICAgICAgICAgIGF1dGhvciB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGNvbnRyaWJ1dG9ycyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGFsdG5hbWVzXHJcbiAgICAgICAgICB3YXJuaW5nXHJcbiAgICAgICAgICByZWFkTG9nc1xyXG4gICAgICAgICAgYnV0dG9uXHJcbiAgICAgICAgICBzZXJ2aWNlXHJcbiAgICAgICAgICBkZXNjcmlwdGlvblxyXG4gICAgICAgICAgdXJsXHJcbiAgICAgICAgICB2ZXJzaW9uXHJcbiAgICAgICAgICBsb2dvXHJcbiAgICAgICAgICB0aHVtYm5haWxcclxuICAgICAgICAgIGNvbG9yXHJcbiAgICAgICAgICB0YWdzXHJcbiAgICAgICAgICBjYXRlZ29yeVxyXG4gICAgICAgICAgaWZyYW1lXHJcbiAgICAgICAgICByZWdFeHBcclxuICAgICAgICAgIGlmcmFtZVJlZ0V4cFxyXG4gICAgICAgICAgc2V0dGluZ3Mge1xyXG4gICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICB0aXRsZVxyXG4gICAgICAgICAgICBpY29uXHJcbiAgICAgICAgICAgIGlmIHtcclxuICAgICAgICAgICAgICBwcm9wcmV0eU5hbWVzXHJcbiAgICAgICAgICAgICAgcGF0dGVyblByb3BydGllc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyXHJcbiAgICAgICAgICAgIHZhbHVlXHJcbiAgICAgICAgICAgIHZhbHVlc1xyXG4gICAgICAgICAgICBtdWx0aUxhbmd1YWdlXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9YCk7XHJcblx0Y2xlYW5PYmplY3QocmVzdWx0LmRhdGEpO1xyXG5cdGNvbnN0IGZpbmFsID0ge1xyXG5cdFx0ZGF0YToge1xyXG5cdFx0XHRuYW1lOiByZXN1bHQuZGF0YS5wcmVzZW5jZXNbMF0ubWV0YWRhdGEuc2VydmljZSxcclxuXHRcdFx0dXJsOiByZXN1bHQuZGF0YS5wcmVzZW5jZXNbMF0udXJsLFxyXG5cdFx0XHRtZXRhZGF0YTogcmVzdWx0LmRhdGEucHJlc2VuY2VzWzBdLm1ldGFkYXRhXHJcblx0XHR9XHJcblx0fTtcclxuXHRyZXR1cm4gZmluYWw7XHJcbn1cclxuIiwiaW1wb3J0IHsgZXJyb3IsIHN1Y2Nlc3MgfSBmcm9tIFwiLi9kZWJ1Z1wiO1xyXG5cclxuaW1wb3J0IHsgZ2V0U3RvcmFnZSB9IGZyb20gXCIuL2Z1bmN0aW9ucy9hc3luY1N0b3JhZ2VcIjtcclxuaW1wb3J0IGdyYXBocWxSZXF1ZXN0IGZyb20gXCIuL2Z1bmN0aW9ucy9ncmFwaHFsXCI7XHJcblxyXG4vKipcclxuICogRGVmYXVsdCBsYW5ndWFnZSBjb2RlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgREVGQVVMVF9MT0NBTEUgPSBcImVuXCI7XHJcblxyXG4vKipcclxuICogTWluaW11bSB0aW1lIGJldHdlZW4gc3RyaW5ncyB1cGRhdGVcclxuICovXHJcbmNvbnN0IE1JTl9VUERBVEVfVElNRSA9IDEwMDAgKiA2MCAqIDU7XHJcblxyXG5sZXQgbGFuZ3VhZ2VzOiBvYmplY3QgPSB7fTtcclxuXHJcbmZ1bmN0aW9uIG5vcm1hbGl6ZUxhbmd1YWdlQ29kZShsYW5ndWFnZUNvZGU6IHN0cmluZyk6IHN0cmluZyB7XHJcblx0cmV0dXJuIGxhbmd1YWdlQ29kZS5zcGxpdChcIi1cIilbMF07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVcGRhdGUgc3RyaW5ncyB2YWx1ZXMgKGV4dGVuc2lvbiBhbmQgcHJlc2VuY2UgZW5kcG9pbnRzKSBmcm9tIHRoZSBBUEkgd2Vic2l0ZVxyXG4gKlxyXG4gKiBAcGFyYW0gbGFuZ3VhZ2VDb2RlIGxhbmd1YWdlIGNvZGUgZm9sbG93aW5nIElTTzYzOS0xIHNwZWNcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVTdHJpbmdzKGxhbmd1YWdlQ29kZT86IHN0cmluZykge1xyXG5cdGlmICghbGFuZ3VhZ2VDb2RlKSBsYW5ndWFnZUNvZGUgPSBERUZBVUxUX0xPQ0FMRTtcclxuXHRpZiAoXHJcblx0XHQhbGFuZ3VhZ2VDb2RlLmluY2x1ZGVzKFwiamFcIikgJiZcclxuXHRcdCFsYW5ndWFnZUNvZGUuaW5jbHVkZXMoXCJ6aFwiKSAmJlxyXG5cdFx0IWxhbmd1YWdlQ29kZS5pbmNsdWRlcyhcImtvXCIpXHJcblx0KVxyXG5cdFx0bGFuZ3VhZ2VDb2RlID0gbm9ybWFsaXplTGFuZ3VhZ2VDb2RlKGxhbmd1YWdlQ29kZSk7XHJcblxyXG5cdGxldCB3ZWJzaXRlTGFuZ3VhZ2U6IHN0cmluZyA9IGxhbmd1YWdlQ29kZSxcclxuXHRcdGV4dGVuc2lvbkxhbmd1YWdlOiBzdHJpbmcgPSBsYW5ndWFnZUNvZGUsXHJcblx0XHRwcmVzZW5jZUxhbmd1YWdlOiBzdHJpbmcgPSBsYW5ndWFnZUNvZGU7XHJcblxyXG5cdHN3aXRjaCAobGFuZ3VhZ2VDb2RlKSB7XHJcblx0XHRjYXNlIFwiamFcIjpcclxuXHRcdFx0d2Vic2l0ZUxhbmd1YWdlID0gXCJqYV9KUFwiO1xyXG5cdFx0XHRwcmVzZW5jZUxhbmd1YWdlID0gXCJqYV9KUFwiO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgXCJqYV9KUFwiOlxyXG5cdFx0XHRleHRlbnNpb25MYW5ndWFnZSA9IFwiamFcIjtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlIFwia29cIjpcclxuXHRcdFx0d2Vic2l0ZUxhbmd1YWdlID0gXCJrb19LUlwiO1xyXG5cdFx0XHRwcmVzZW5jZUxhbmd1YWdlID0gXCJrb19LUlwiO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgXCJrb19LUlwiOlxyXG5cdFx0XHRleHRlbnNpb25MYW5ndWFnZSA9IFwia29cIjtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlIFwiemgtQ05cIjpcclxuXHRcdFx0d2Vic2l0ZUxhbmd1YWdlID0gXCJ6aF9DTlwiO1xyXG5cdFx0XHRwcmVzZW5jZUxhbmd1YWdlID0gXCJ6aF9DTlwiO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgXCJ6aF9DTlwiOlxyXG5cdFx0XHRleHRlbnNpb25MYW5ndWFnZSA9IFwiemgtQ05cIjtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlIFwiemgtVFdcIjpcclxuXHRcdFx0d2Vic2l0ZUxhbmd1YWdlID0gXCJ6aF9UV1wiO1xyXG5cdFx0XHRwcmVzZW5jZUxhbmd1YWdlID0gXCJ6aF9UV1wiO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgXCJ6aF9UV1wiOlxyXG5cdFx0XHRleHRlbnNpb25MYW5ndWFnZSA9IFwiemgtVFdcIjtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRjb25zdCByZXNwb25zZUxhbmdzID0gYXdhaXQgZ3JhcGhxbFJlcXVlc3QoYFxyXG5cdFx0XHRxdWVyeSB7XHJcblx0XHRcdFx0bGFuZ0ZpbGVzKHByb2plY3Q6IFwiZXh0ZW5zaW9uXCIpIHtcclxuXHRcdFx0XHRcdGxhbmdcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0YCksXHJcblx0XHRcdFx0YXZhaWxhYmxlTGFuZ3M6IHN0cmluZ1tdID0gcmVzcG9uc2VMYW5ncy5kYXRhLmxhbmdGaWxlcy5tYXAoXHJcblx0XHRcdFx0XHRsZiA9PiBsZi5sYW5nXHJcblx0XHRcdFx0KTtcclxuXHJcblx0XHRcdGlmICghYXZhaWxhYmxlTGFuZ3MuaW5jbHVkZXMoZXh0ZW5zaW9uTGFuZ3VhZ2UpKSB7XHJcblx0XHRcdFx0Y29uc3QgaW5kZXggPSBhdmFpbGFibGVMYW5ncy5maW5kSW5kZXgoYyA9PlxyXG5cdFx0XHRcdFx0Yy5pbmNsdWRlcyhleHRlbnNpb25MYW5ndWFnZSArIFwiX1wiKVxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdFx0aWYgKGluZGV4ID49IDApIHtcclxuXHRcdFx0XHRcdHdlYnNpdGVMYW5ndWFnZSA9IGF2YWlsYWJsZUxhbmdzW2luZGV4XTtcclxuXHRcdFx0XHRcdGV4dGVuc2lvbkxhbmd1YWdlID0gYXZhaWxhYmxlTGFuZ3NbaW5kZXhdO1xyXG5cdFx0XHRcdFx0cHJlc2VuY2VMYW5ndWFnZSA9IGF2YWlsYWJsZUxhbmdzW2luZGV4XTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0YnJlYWs7XHJcblx0fVxyXG5cclxuXHR0cnkge1xyXG5cdFx0Y29uc3QgZ3JhcGhxbFJlc3VsdCA9IGF3YWl0IGdyYXBocWxSZXF1ZXN0KGBcclxuXHRcdFx0cXVlcnkge1xyXG5cdFx0XHRcdHdlYnNpdGU6IGxhbmdGaWxlcyhwcm9qZWN0OiBcIndlYnNpdGVcIiwgbGFuZzogXCIke3dlYnNpdGVMYW5ndWFnZX1cIikge1xyXG5cdFx0XHRcdFx0dHJhbnNsYXRpb25zXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGV4dGVuc2lvbjogbGFuZ0ZpbGVzKHByb2plY3Q6IFwiZXh0ZW5zaW9uXCIsIGxhbmc6IFwiJHtleHRlbnNpb25MYW5ndWFnZX1cIikge1xyXG5cdFx0XHRcdFx0dHJhbnNsYXRpb25zXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHByZXNlbmNlOiBsYW5nRmlsZXMocHJvamVjdDogXCJwcmVzZW5jZVwiLCBsYW5nOiBcIiR7cHJlc2VuY2VMYW5ndWFnZX1cIikge1xyXG5cdFx0XHRcdFx0dHJhbnNsYXRpb25zXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRgKTtcclxuXHJcblx0XHRsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXSA9IHtcclxuXHRcdFx0bmFtZTogZ3JhcGhxbFJlc3VsdC5kYXRhLndlYnNpdGVbMF0udHJhbnNsYXRpb25zW1wiaGVhZGVyLmxhbmd1YWdlXCJdLFxyXG5cdFx0XHRsb2FkaW5nOlxyXG5cdFx0XHRcdGdyYXBocWxSZXN1bHQuZGF0YS53ZWJzaXRlWzBdLnRyYW5zbGF0aW9uc1tcImhlYWRlci5sb2FkZXIucGhyYXNlc1wiXSxcclxuXHRcdFx0ZXh0ZW5zaW9uOiBncmFwaHFsUmVzdWx0LmRhdGEuZXh0ZW5zaW9uWzBdLnRyYW5zbGF0aW9ucyxcclxuXHRcdFx0cHJlc2VuY2U6IGdyYXBocWxSZXN1bHQuZGF0YS5wcmVzZW5jZVswXS50cmFuc2xhdGlvbnMsXHJcblx0XHRcdHVwZGF0ZWRBdDogRGF0ZS5ub3coKVxyXG5cdFx0fTtcclxuXHJcblx0XHRzdWNjZXNzKFwibGFuZ01hbmFnZXIudHNcIiwgYFVwZGF0ZWQgJHtsYW5ndWFnZUNvZGV9IHRyYW5zbGF0aW9uc2ApO1xyXG5cdH0gY2F0Y2ggKGUpIHtcclxuXHRcdGVycm9yKFxyXG5cdFx0XHRcImxhbmdNYW5hZ2VyLnRzXCIsXHJcblx0XHRcdGBFcnJvciB3aGlsZSBmZXRjaGluZyBsYW5nRmlsZXMgb2YgJHtsYW5ndWFnZUNvZGV9IGxhbmd1YWdlOiAke2UubWVzc2FnZX1gXHJcblx0XHQpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0aWYgKGxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdICYmIGxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdLmVycm9yKSB7XHJcblx0XHRsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXSA9IHVuZGVmaW5lZDtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGF3YWl0IGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7IGxhbmd1YWdlcyB9KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUFsbFN0cmluZ3MoKSB7XHJcblx0Y29uc3QgbGFuZ3VhZ2VzID0gT2JqZWN0LmtleXMoKGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBcImxhbmd1YWdlc1wiKSkubGFuZ3VhZ2VzKTtcclxuXHRhd2FpdCBQcm9taXNlLmFsbChcclxuXHRcdGxhbmd1YWdlcy5tYXAobG5nID0+IGxvYWRTdHJpbmdzKGxuZywgdHJ1ZSkpXHJcblx0KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFN0cmluZ3MgdGhhdCBhcmUgYmVpbmcgbG9hZGVkIGJ5IGxvYWRTdHJpbmdzIGZ1bmN0aW9uXHJcbiAqL1xyXG5jb25zdCBsb2FkaW5nTGFuZ3MgPSBbXTtcclxuXHJcbi8qKlxyXG4gKiBMb2FkIHRoZSBzdHJpbmdzIGZyb20gdGhlIGJyb3dzZXIgbG9jYWwgc3RvcmFnZSwgaWYgdGhleSBhcmUgbm90IGZvdW5kIGluIHRoZSBzdG9yYWdlIHRoZXkgd2lsbCBiZVxyXG4gKiBmZXRjaCBmcm9tIHRoZSBBUEkuXHJcbiAqXHJcbiAqIEBwYXJhbSBsYW5ndWFnZUNvZGUgbGFuZ3VhZ2UgY29kZSBJU082MzktMSBpZiBub3Qgc3BlY2lmaWVkIERFRkFVTFRfTE9DQUxFIGlzIHVzZWRcclxuICogQHBhcmFtIHVwZGF0ZSBib29sZWFuIHRvIGZvcmNlIGFuIHVwZGF0ZSBvZiB0aGUgc3RyaW5ncyBpbiB0aGUgZ2l2ZW4gbG9jYWxlXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZFN0cmluZ3MobGFuZ3VhZ2VDb2RlPzogc3RyaW5nLCB1cGRhdGU/OiBib29sZWFuKSB7XHJcblx0aWYgKCFsYW5ndWFnZUNvZGUpIGxhbmd1YWdlQ29kZSA9IERFRkFVTFRfTE9DQUxFO1xyXG5cdGlmICghdXBkYXRlKSB1cGRhdGUgPSBmYWxzZTtcclxuXHRsYW5ndWFnZUNvZGUgPSBub3JtYWxpemVMYW5ndWFnZUNvZGUobGFuZ3VhZ2VDb2RlKTtcclxuXHJcblx0cmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KHJlc29sdmUgPT4ge1xyXG5cdFx0aWYgKHR5cGVvZiBsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXSAhPT0gXCJ1bmRlZmluZWRcIikgcmVzb2x2ZSgpO1xyXG5cclxuXHRcdGlmICghbG9hZGluZ0xhbmdzLmluY2x1ZGVzKGxhbmd1YWdlQ29kZSkpIHtcclxuXHRcdFx0bG9hZGluZ0xhbmdzLnB1c2gobGFuZ3VhZ2VDb2RlKTtcclxuXHJcblx0XHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLmdldChcImxhbmd1YWdlc1wiLCBhc3luYyBsbmdzID0+IHtcclxuXHRcdFx0XHRpZiAoIWxuZ3MubGFuZ3VhZ2VzKSB7XHJcblx0XHRcdFx0XHRsbmdzLmxhbmd1YWdlcyA9IHt9O1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Y29uc3QgdXBkYXRlUHJvbWlzZXMgPSBbXTtcclxuXHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHQoXHJcblx0XHRcdFx0XHRcdHVwZGF0ZSAmJlxyXG5cdFx0XHRcdFx0XHR0eXBlb2YgbG5ncy5sYW5ndWFnZXNbREVGQVVMVF9MT0NBTEVdICE9PSBcInVuZGVmaW5lZFwiICYmXHJcblx0XHRcdFx0XHRcdERhdGUubm93KCkgLSBsbmdzLmxhbmd1YWdlc1tERUZBVUxUX0xPQ0FMRV0udXBkYXRlZEF0ID49IE1JTl9VUERBVEVfVElNRVxyXG5cdFx0XHRcdFx0KSB8fFxyXG5cdFx0XHRcdFx0KFxyXG5cdFx0XHRcdFx0XHRsYW5ndWFnZUNvZGUgIT09IERFRkFVTFRfTE9DQUxFICYmXHJcblx0XHRcdFx0XHRcdHR5cGVvZiBsbmdzLmxhbmd1YWdlc1tERUZBVUxUX0xPQ0FMRV0gPT09IFwidW5kZWZpbmVkXCJcclxuXHRcdFx0XHRcdClcclxuXHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdHVwZGF0ZVByb21pc2VzLnB1c2godXBkYXRlU3RyaW5ncyhERUZBVUxUX0xPQ0FMRSkpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKFxyXG5cdFx0XHRcdFx0dHlwZW9mIGxuZ3MubGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0gPT09IFwidW5kZWZpbmVkXCIgfHxcclxuXHRcdFx0XHRcdChcclxuXHRcdFx0XHRcdFx0dXBkYXRlICYmXHJcblx0XHRcdFx0XHRcdC8vIGFscmVhZHkgY2hlY2tlZCBpZiBsbmdzLmxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdIGlzIHVuZGVmaW5lZFxyXG5cdFx0XHRcdFx0XHREYXRlLm5vdygpIC0gbG5ncy5sYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXS51cGRhdGVkQXQgPj0gTUlOX1VQREFURV9USU1FXHJcblx0XHRcdFx0XHQpXHJcblxyXG5cdFx0XHRcdCkge1xyXG5cdFx0XHRcdFx0dXBkYXRlUHJvbWlzZXMucHVzaCh1cGRhdGVTdHJpbmdzKGxhbmd1YWdlQ29kZSkpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0YXdhaXQgUHJvbWlzZS5hbGwodXBkYXRlUHJvbWlzZXMpO1xyXG5cclxuXHRcdFx0XHQvLyBtZXJnZSBhbGwgbGFuZ3VhZ2VzXHJcblx0XHRcdFx0bGFuZ3VhZ2VzID0geyAuLi5sYW5ndWFnZXMsIC4uLmxuZ3MubGFuZ3VhZ2VzIH07XHJcblxyXG5cdFx0XHRcdGxvYWRpbmdMYW5ncy5zcGxpY2UobG9hZGluZ0xhbmdzLmluZGV4T2YobGFuZ3VhZ2VDb2RlKSwgMSk7XHJcblx0XHRcdFx0cmVzb2x2ZSgpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGxldCBsb2FkU3RhdHVzID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG5cdFx0XHRcdGlmIChcclxuXHRcdFx0XHRcdHR5cGVvZiBsYW5ndWFnZXMgIT09IFwidW5kZWZpbmVkXCIgJiZcclxuXHRcdFx0XHRcdHR5cGVvZiBsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXSAhPT0gXCJ1bmRlZmluZWRcIlxyXG5cdFx0XHRcdCkge1xyXG5cdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbChsb2FkU3RhdHVzKTtcclxuXHRcdFx0XHRcdHJlc29sdmUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIDUpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59XHJcblxyXG4vKipcclxuICogR2V0IGFsbCB0aGUgdHJhbnNsYXRpb25zIGluIHRoZSBnaXZlbiBsYW5ndWFnZSBhbmQgREVGQVVMVF9MT0NBTEVcclxuICpcclxuICogQHBhcmFtIGxhbmd1YWdlQ29kZSBsYW5ndWFnZSBjb2RlIElTTzYzOS0xIGlmIG5vdCBzcGVjaWZpZWQgREVGQVVMVF9MT0NBTEUgaXMgdXNlZFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0cmluZ3MobGFuZ3VhZ2VDb2RlPzogc3RyaW5nKSB7XHJcblx0aWYgKCFsYW5ndWFnZUNvZGUpIGxhbmd1YWdlQ29kZSA9IERFRkFVTFRfTE9DQUxFO1xyXG5cdGxhbmd1YWdlQ29kZSA9IG5vcm1hbGl6ZUxhbmd1YWdlQ29kZShsYW5ndWFnZUNvZGUpO1xyXG5cclxuXHRyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgcmVzb2x2ZSA9PiB7XHJcblx0XHRhd2FpdCBsb2FkU3RyaW5ncyhsYW5ndWFnZUNvZGUpO1xyXG5cclxuXHRcdGlmICh0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0gPT09IFwidW5kZWZpbmVkXCIpIHtcclxuXHRcdFx0aWYgKCFsYW5ndWFnZXNbREVGQVVMVF9MT0NBTEVdKSB7XHJcblx0XHRcdFx0cmVzb2x2ZSh7fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJlc29sdmUoe1xyXG5cdFx0XHRcdFtERUZBVUxUX0xPQ0FMRV06IHtcclxuXHRcdFx0XHRcdC4uLmxhbmd1YWdlc1tERUZBVUxUX0xPQ0FMRV0uZXh0ZW5zaW9uLFxyXG5cdFx0XHRcdFx0Li4ubGFuZ3VhZ2VzW0RFRkFVTFRfTE9DQUxFXS5wcmVzZW5jZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRyZXNvbHZlKHtcclxuXHRcdFx0XHRbbGFuZ3VhZ2VDb2RlXToge1xyXG5cdFx0XHRcdFx0Li4ubGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0uZXh0ZW5zaW9uLFxyXG5cdFx0XHRcdFx0Li4ubGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0ucHJlc2VuY2VcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdFtERUZBVUxUX0xPQ0FMRV06IHtcclxuXHRcdFx0XHRcdC4uLmxhbmd1YWdlc1tERUZBVUxUX0xPQ0FMRV0uZXh0ZW5zaW9uLFxyXG5cdFx0XHRcdFx0Li4ubGFuZ3VhZ2VzW0RFRkFVTFRfTE9DQUxFXS5wcmVzZW5jZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBHZXQgdHJhbnNsYXRpb24gb2YgYSBzcGVjaWZpYyBrZXlcclxuICpcclxuICogQHBhcmFtIHN0cmluZyBuYW1lIG9mIHRoZSBzdHJpbmcsIHRvIGdldCB0aGUgbmFtZSBvZiB0aGUgbGFuZ3VhZ2UgdXNlIFwibmFtZVwiIG9yIFwiaGVhZGVyLmxhbmd1YWdlXCJcclxuICogQHBhcmFtIGxhbmd1YWdlQ29kZSBsYW5ndWFnZSBjb2RlIElTTzYzOS0xIGlmIG5vdCBzcGVjaWZpZWQgREVGQVVMVF9MT0NBTEUgaXMgdXNlZFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0cmluZyhzdHJpbmc6IHN0cmluZywgbGFuZ3VhZ2VDb2RlPzogc3RyaW5nKSB7XHJcblx0aWYgKCFsYW5ndWFnZUNvZGUpIGxhbmd1YWdlQ29kZSA9IGNocm9tZS5pMThuLmdldFVJTGFuZ3VhZ2UoKTtcclxuXHRsYW5ndWFnZUNvZGUgPSBub3JtYWxpemVMYW5ndWFnZUNvZGUobGFuZ3VhZ2VDb2RlKTtcclxuXHJcblx0cmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIHJlc29sdmUgPT4ge1xyXG5cdFx0YXdhaXQgbG9hZFN0cmluZ3MobGFuZ3VhZ2VDb2RlKTtcclxuXHJcblx0XHRpZiAodHlwZW9mIGxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcblx0XHRcdGlmIChcclxuXHRcdFx0XHRbXCJuYW1lXCIsIFwiaGVhZGVyLmxhbmd1YWdlXCJdLmluY2x1ZGVzKHN0cmluZykgJiZcclxuXHRcdFx0XHR0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0ubmFtZSAhPT0gXCJ1bmRlZmluZWRcIlxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVzb2x2ZShsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXS5uYW1lKTtcclxuXHRcdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0XHRbXCJsb2FkaW5nXCIsIFwiaGVhZGVyLmxvYWRlci5waHJhc2VzXCJdLmluY2x1ZGVzKHN0cmluZykgJiZcclxuXHRcdFx0XHR0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0ubG9hZGluZyAhPT0gXCJ1bmRlZmluZWRcIlxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVzb2x2ZShsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXS5sb2FkaW5nKTtcclxuXHRcdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0XHR0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0uZXh0ZW5zaW9uICE9PSBcInVuZGVmaW5lZFwiICYmXHJcblx0XHRcdFx0dHlwZW9mIGxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdLmV4dGVuc2lvbltzdHJpbmddICE9PSBcInVuZGVmaW5lZFwiXHJcblx0XHRcdCkge1xyXG5cdFx0XHRcdHJldHVybiByZXNvbHZlKGxhbmd1YWdlc1tsYW5ndWFnZUNvZGVdLmV4dGVuc2lvbltzdHJpbmddKTtcclxuXHRcdFx0fSBlbHNlIGlmIChcclxuXHRcdFx0XHR0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0ucHJlc2VuY2UgIT09IFwidW5kZWZpbmVkXCIgJiZcclxuXHRcdFx0XHR0eXBlb2YgbGFuZ3VhZ2VzW2xhbmd1YWdlQ29kZV0ucHJlc2VuY2Vbc3RyaW5nXSAhPT0gXCJ1bmRlZmluZWRcIlxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVzb2x2ZShsYW5ndWFnZXNbbGFuZ3VhZ2VDb2RlXS5wcmVzZW5jZVtzdHJpbmddKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIHByZXZlbnQgaW5maW5pdGUgbG9vcHNcclxuXHRcdGlmIChsYW5ndWFnZUNvZGUgPT09IERFRkFVTFRfTE9DQUxFKSB7XHJcblx0XHRcdHJldHVybiByZXNvbHZlKHN0cmluZyk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHJlc29sdmUoYXdhaXQgZ2V0U3RyaW5nKHN0cmluZywgREVGQVVMVF9MT0NBTEUpKTtcclxuXHR9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIE9idGFpbiBhbGwgbGFuZ3VhZ2VzIHRoYXQgYXJlIDEwMCUgdHJhbnNsYXRlZCBmb3IgYSBwcmVzZW5jZSBhbmQgdGhhdCBhbHNvIGhhdmUgdGhlIGdlbmVyYWwgZmlsZSAxMDAlIHRyYW5zbGF0ZWRcclxuICpcclxuICogQHBhcmFtIHByZXNlbmNlTmFtZSBuYW1lIG9mIHRoZSBwcmVzZW5jZSBhcyBzcGVjaWZpZWQgaW4gdGhlIFwic2VydmljZVwiIGtleSBvZiB0aGUgbWV0YWRhdGEuanNvbiBmaWxlXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJlc2VuY2VMYW5ndWFnZXMocHJlc2VuY2VOYW1lOiBzdHJpbmcpIHtcclxuXHR0cnkge1xyXG5cdFx0Y29uc3QgbGFuZ3MgPSBhd2FpdCBncmFwaHFsUmVxdWVzdChgXHJcblx0XHRcdHF1ZXJ5IHtcclxuXHRcdFx0XHRsYW5nRmlsZXMocHJlc2VuY2U6IFwiJHtwcmVzZW5jZU5hbWUudG9Mb3dlckNhc2UoKX1cIikge1xyXG5cdFx0XHRcdFx0bGFuZ1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRnZW5lcmFsTGFuZ0ZpbGVzOiBsYW5nRmlsZXMocHJlc2VuY2U6IFwiZ2VuZXJhbFwiKSB7XHJcblx0XHRcdFx0XHRsYW5nXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRgKTtcclxuXHJcblx0XHRjb25zdCBmaW5hbEFycmF5ID0gW107XHJcblx0XHRpZiAoXHJcblx0XHRcdGxhbmdzLmRhdGEubGFuZ0ZpbGVzLmxlbmd0aCA+IDAgJiZcclxuXHRcdFx0bGFuZ3MuZGF0YS5nZW5lcmFsTGFuZ0ZpbGVzLmxlbmd0aCA+IDBcclxuXHRcdCkge1xyXG5cdFx0XHRsYW5ncy5kYXRhLmdlbmVyYWxMYW5nRmlsZXMuZm9yRWFjaChsYW5nID0+IHtcclxuXHRcdFx0XHRjb25zdCBmb3VuZCA9IGxhbmdzLmRhdGEubGFuZ0ZpbGVzLmZpbmQocCA9PiBwLmxhbmcgPT09IGxhbmcubGFuZyk7XHJcblx0XHRcdFx0aWYgKGZvdW5kKSBmaW5hbEFycmF5LnB1c2gobGFuZy5sYW5nKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9IGVsc2UgaWYgKGxhbmdzLmRhdGEuZ2VuZXJhbExhbmdGaWxlcy5sZW5ndGggPiAwKSB7XHJcblx0XHRcdGxhbmdzLmRhdGEuZ2VuZXJhbExhbmdGaWxlcy5mb3JFYWNoKGxhbmcgPT4ge1xyXG5cdFx0XHRcdGZpbmFsQXJyYXkucHVzaChsYW5nLmxhbmcpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBmaW5hbEFycmF5O1xyXG5cdH0gY2F0Y2ggKGUpIHtcclxuXHRcdHJldHVybiBbXTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuXHRERUZBVUxUX0xPQ0FMRSxcclxuXHRnZXRTdHJpbmcsXHJcblx0Z2V0UHJlc2VuY2VMYW5ndWFnZXMgYXMgcHJlc2VuY2VMYW5ndWFnZXMsXHJcblx0dXBkYXRlU3RyaW5nc1xyXG59IGZyb20gXCIuL2xhbmdNYW5hZ2VyXCI7XHJcbmltcG9ydCB7IGVycm9yLCBzdWNjZXNzIH0gZnJvbSBcIi4vZGVidWdcIjtcclxuaW1wb3J0IGdyYXBocWxSZXF1ZXN0LCB7IGdldFByZXNlbmNlTWV0YWRhdGEgfSBmcm9tIFwiLi9mdW5jdGlvbnMvZ3JhcGhxbFwiO1xyXG5cclxuaW1wb3J0IHsgZ2V0U3RvcmFnZSB9IGZyb20gXCIuL2Z1bmN0aW9ucy9hc3luY1N0b3JhZ2VcIjtcclxuaW1wb3J0IHsgbG9hZFN0cmluZ3MgfSBmcm9tIFwiLi9sYW5nTWFuYWdlclwiO1xyXG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBwbGF0Zm9ybVR5cGUge1xyXG5cdG9zOiBzdHJpbmc7XHJcblx0YXJjaDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlc2VuY2VTY2llbmNlKCkge1xyXG5cdGxldCBpZGVudGlmaWVyID0gKGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBcImlkZW50aWZpZXJcIikpLmlkZW50aWZpZXIsXHJcblx0XHRwcmVzZW5jZXM6IHByZXNlbmNlU3RvcmFnZSA9IChhd2FpdCBnZXRTdG9yYWdlKFwibG9jYWxcIiwgXCJwcmVzZW5jZXNcIikpXHJcblx0XHRcdC5wcmVzZW5jZXM7XHJcblxyXG5cdGlmICghaWRlbnRpZmllcikge1xyXG5cdFx0aWRlbnRpZmllciA9IHV1aWR2NCgpO1xyXG5cdFx0Y2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgaWRlbnRpZmllcjogaWRlbnRpZmllciB9KTtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHBsYXRmb3JtOiBwbGF0Zm9ybVR5cGUgPSBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+XHJcblx0XHRcdGNocm9tZS5ydW50aW1lLmdldFBsYXRmb3JtSW5mbyhpbmZvID0+XHJcblx0XHRcdFx0cmVzb2x2ZSh7IG9zOiBpbmZvLm9zLCBhcmNoOiBpbmZvLmFyY2ggfSlcclxuXHRcdFx0KVxyXG5cdFx0KSxcclxuXHRcdHByZXNlbmNlc0FycmF5ID0gcHJlc2VuY2VzLmZpbHRlcihwID0+ICFwLnRtcCkubWFwKHAgPT4gcC5tZXRhZGF0YS5zZXJ2aWNlKTtcclxuXHJcblx0Z3JhcGhxbFJlcXVlc3QoYFxyXG5cdG11dGF0aW9uIHtcclxuXHRcdGFkZFNjaWVuY2UoaWRlbnRpZmllcjogXCIke2lkZW50aWZpZXJ9XCIsIHByZXNlbmNlczogW1wiJHtwcmVzZW5jZXNBcnJheVxyXG5cdFx0LnRvU3RyaW5nKClcclxuXHRcdC5zcGxpdChcIixcIilcclxuXHRcdC5qb2luKGBcIiwgXCJgKX1cIl0sIG9zOiBcIiR7cGxhdGZvcm0ub3N9XCIsIGFyY2g6XCIke3BsYXRmb3JtLmFyY2h9XCIpIHtcclxuXHRcdFx0aWRlbnRpZmllclxyXG5cdFx0fVxyXG5cdH1cclxuXHRgKTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVByZXNlbmNlcygpIHtcclxuXHRsZXQgcHJlc2VuY2VWZXJzaW9uczogQXJyYXk8eyBuYW1lOiBzdHJpbmc7IHZlcnNpb246IHN0cmluZzsgdXJsOiBzdHJpbmcgfT4sXHJcblx0XHRwcmVzZW5jZXM6IHByZXNlbmNlU3RvcmFnZSA9IChhd2FpdCBnZXRTdG9yYWdlKFwibG9jYWxcIiwgXCJwcmVzZW5jZXNcIikpXHJcblx0XHRcdC5wcmVzZW5jZXM7XHJcblxyXG5cdGlmICghcHJlc2VuY2VzIHx8IHByZXNlbmNlcy5sZW5ndGggPT09IDApIHJldHVybjtcclxuXHJcblx0Ly8qIENhdGNoIGZldGNoIGVycm9yXHJcblx0dHJ5IHtcclxuXHRcdGNvbnN0IGdyYXBocWxSZXN1bHQgPSAoXHJcblx0XHRcdGF3YWl0IGdyYXBocWxSZXF1ZXN0KGBcclxuXHRcdFx0cXVlcnkge1xyXG4gIFx0XHRcdHByZXNlbmNlcyB7XHJcbiAgICBcdFx0XHR1cmxcclxuICAgIFx0XHRcdG1ldGFkYXRhIHtcclxuICAgICAgXHRcdFx0c2VydmljZVxyXG4gICAgICBcdFx0XHR2ZXJzaW9uXHJcbiAgICBcdFx0XHR9XHJcbiAgXHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRgKVxyXG5cdFx0KS5kYXRhO1xyXG5cclxuXHRcdGNvbnN0IHJlc3VsdCA9IFtdO1xyXG5cclxuXHRcdGdyYXBocWxSZXN1bHQucHJlc2VuY2VzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcblx0XHRcdHJlc3VsdC5wdXNoKHtcclxuXHRcdFx0XHRuYW1lOiBlbGVtZW50Lm1ldGFkYXRhLnNlcnZpY2UsXHJcblx0XHRcdFx0dXJsOiBlbGVtZW50LnVybCxcclxuXHRcdFx0XHR2ZXJzaW9uOiBlbGVtZW50Lm1ldGFkYXRhLnZlcnNpb25cclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHJcblx0XHRwcmVzZW5jZVZlcnNpb25zID0gcmVzdWx0O1xyXG5cdH0gY2F0Y2ggKGUpIHtcclxuXHRcdGVycm9yKFwicHJlc2VuY2VNYW5hZ2VyLnRzXCIsIGBFcnJvciB3aGlsZSB1cGRhdGluZyBwcmVzZW5jZXM6ICR7ZS5tZXNzYWdlfWApO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0bGV0IGN1cnJQcmVzZW5jZVZlcnNpb25zID0gcHJlc2VuY2VzXHJcblx0XHRcdC5maWx0ZXIocCA9PiAhcC50bXApXHJcblx0XHRcdC5tYXAocCA9PiB7XHJcblx0XHRcdFx0cmV0dXJuIHsgbmFtZTogcC5tZXRhZGF0YS5zZXJ2aWNlLCB2ZXJzaW9uOiBwLm1ldGFkYXRhLnZlcnNpb24gfTtcclxuXHRcdFx0fSksXHJcblx0XHRwcmVzZW5jZXNUb1VwZGF0ZSA9IGN1cnJQcmVzZW5jZVZlcnNpb25zLmZpbHRlcihwID0+XHJcblx0XHRcdHByZXNlbmNlVmVyc2lvbnMuZmluZChwMSA9PiBwMS5uYW1lID09IHAubmFtZSAmJiBwMS52ZXJzaW9uICE9PSBwLnZlcnNpb24pXHJcblx0XHQpO1xyXG5cclxuXHRQcm9taXNlLmFsbChcclxuXHRcdHByZXNlbmNlc1RvVXBkYXRlLm1hcChhc3luYyBwID0+IHtcclxuXHRcdFx0Y29uc3QgcHJlc2VuY2VJbmRleCA9IHByZXNlbmNlcy5maW5kSW5kZXgoXHJcblx0XHRcdFx0Ly9AdHMtaWdub3JlXHJcblx0XHRcdFx0cDEgPT4gcDEubWV0YWRhdGEuc2VydmljZSA9PT0gcC5uYW1lICYmICFwLnRtcFxyXG5cdFx0XHQpO1xyXG5cclxuXHRcdFx0Y29uc3QgZ3JhcGhxbFJlc3VsdCA9IChcclxuXHRcdFx0XHRhd2FpdCBncmFwaHFsUmVxdWVzdChgXHJcblx0XHRcdHF1ZXJ5IHtcclxuXHRcdFx0XHRwcmVzZW5jZXMoc2VydmljZTogXCIke3AubmFtZX1cIikge1xyXG5cdFx0XHRcdFx0cHJlc2VuY2VKc1xyXG5cdFx0XHRcdFx0aWZyYW1lSnNcclxuXHRcdFx0XHRcdG1ldGFkYXRhIHtcclxuXHRcdFx0XHRcdFx0YXV0aG9yIHtcclxuXHRcdFx0XHRcdFx0XHRuYW1lXHJcblx0XHRcdFx0XHRcdFx0aWRcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRjb250cmlidXRvcnMge1xyXG5cdFx0XHRcdFx0XHRcdG5hbWVcclxuXHRcdFx0XHRcdFx0XHRpZFxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGFsdG5hbWVzXHJcblx0XHRcdFx0XHRcdHdhcm5pbmdcclxuXHRcdFx0XHRcdFx0cmVhZExvZ3NcclxuXHRcdFx0XHRcdFx0c2VydmljZVxyXG5cdFx0XHRcdFx0XHRkZXNjcmlwdGlvblxyXG5cdFx0XHRcdFx0XHR1cmxcclxuXHRcdFx0XHRcdFx0dmVyc2lvblxyXG5cdFx0XHRcdFx0XHRsb2dvXHJcblx0XHRcdFx0XHRcdHRodW1ibmFpbFxyXG5cdFx0XHRcdFx0XHRjb2xvclxyXG5cdFx0XHRcdFx0XHR0YWdzXHJcblx0XHRcdFx0XHRcdGNhdGVnb3J5XHJcblx0XHRcdFx0XHRcdGlmcmFtZVxyXG5cdFx0XHRcdFx0XHRyZWdFeHBcclxuXHRcdFx0XHRcdFx0aWZyYW1lUmVnRXhwXHJcblx0XHRcdFx0XHRcdGJ1dHRvblxyXG5cdFx0XHRcdFx0XHR3YXJuaW5nXHJcblx0XHRcdFx0XHRcdHNldHRpbmdzIHtcclxuXHRcdFx0XHRcdFx0XHRpZFxyXG5cdFx0XHRcdFx0XHRcdHRpdGxlXHJcblx0XHRcdFx0XHRcdFx0aWNvblxyXG5cdFx0XHRcdFx0XHRcdGlmIHtcclxuXHRcdFx0XHRcdFx0XHRcdHByb3ByZXR5TmFtZXNcclxuXHRcdFx0XHRcdFx0XHRcdHBhdHRlcm5Qcm9wcnRpZXNcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXJcclxuXHRcdFx0XHRcdFx0XHR2YWx1ZVxyXG5cdFx0XHRcdFx0XHRcdHZhbHVlc1xyXG5cdFx0XHRcdFx0XHRcdG11bHRpTGFuZ3VhZ2VcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRgKVxyXG5cdFx0XHQpLmRhdGE7XHJcblxyXG5cdFx0XHRjb25zdCBtZXRhZGF0YSA9IGdyYXBocWxSZXN1bHQucHJlc2VuY2VzWzBdLm1ldGFkYXRhLFxyXG5cdFx0XHRcdGZpbGVzID0gW1xyXG5cdFx0XHRcdFx0Z3JhcGhxbFJlc3VsdC5wcmVzZW5jZXNbMF0ucHJlc2VuY2VKcyxcclxuXHRcdFx0XHRcdG1ldGFkYXRhLmlmcmFtZSA/IGdyYXBocWxSZXN1bHQucHJlc2VuY2VzWzBdLmlmcmFtZUpzIDogdW5kZWZpbmVkXHJcblx0XHRcdFx0XS5maWx0ZXIoZiA9PiBmKTtcclxuXHJcblx0XHRcdHByZXNlbmNlc1twcmVzZW5jZUluZGV4XS5tZXRhZGF0YSA9IG1ldGFkYXRhO1xyXG5cdFx0XHRwcmVzZW5jZXNbcHJlc2VuY2VJbmRleF0ucHJlc2VuY2UgPSBmaWxlc1swXTtcclxuXHRcdFx0Ly8gQHRzLWlnbm9yZVxyXG5cdFx0XHRpZiAoZmlsZXMubGVuZ3RoID09IDIpIHByZXNlbmNlc1twcmVzZW5jZUluZGV4XS5pZnJhbWUgPSBmaWxlc1sxXTtcclxuXHRcdH0pXHJcblx0KS50aGVuKCgpID0+IHtcclxuXHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7IHByZXNlbmNlczogWy4uLnByZXNlbmNlc10gfSwgKCkgPT4ge1xyXG5cdFx0XHRwcmVzZW5jZXNUb1VwZGF0ZS5tYXAocCA9PlxyXG5cdFx0XHRcdHN1Y2Nlc3MoXHJcblx0XHRcdFx0XHRcInByZXNlbmNlRGV2TWFuYWdlci50c1wiLFxyXG5cdFx0XHRcdFx0YFVwZGF0ZWQgJHtwLm5hbWV9IGZyb20gdiR7cC52ZXJzaW9ufSB0byB2JHtcclxuXHRcdFx0XHRcdFx0cHJlc2VuY2VWZXJzaW9ucy5maW5kKHAxID0+IHAxLm5hbWUgPT09IHAubmFtZSkudmVyc2lvblxyXG5cdFx0XHRcdFx0fWBcclxuXHRcdFx0XHQpXHJcblx0XHRcdCk7XHJcblx0XHR9KTtcclxuXHRcdGNvbnN0IHByZXNlbmNlTmFtZXNUb1VwZGF0ZSA9IHByZXNlbmNlc1RvVXBkYXRlLm1hcChwID0+IHAubmFtZSksXHJcblx0XHRcdHVwZGF0ZWRQcmVzZW5jZXMgPSBwcmVzZW5jZXMuZmlsdGVyKHAgPT4gcHJlc2VuY2VOYW1lc1RvVXBkYXRlLmluY2x1ZGVzKHAubWV0YWRhdGEuc2VydmljZSkpO1xyXG5cclxuXHRcdHVwZGF0ZWRQcmVzZW5jZXMuZm9yRWFjaChhc3luYyBwID0+IHtcclxuXHRcdFx0XHRhd2FpdCBpbml0UHJlc2VuY2VMYW5ndWFnZXMocCk7XHJcblxyXG5cdFx0XHRcdGNvbnN0IHNldHRpbmdOYW1lID0gYHBTZXR0aW5nc18ke3AubWV0YWRhdGEuc2VydmljZX1gLFxyXG5cdFx0XHRcdFx0c2V0dGluZ3MgPSAoYXdhaXQgZ2V0U3RvcmFnZShcImxvY2FsXCIsIHNldHRpbmdOYW1lKSlbc2V0dGluZ05hbWVdO1xyXG5cclxuXHRcdFx0XHRpZiAoc2V0dGluZ3MpIHtcclxuXHRcdFx0XHRcdGNvbnN0IGxhbmdTZXR0aW5ncyA9IHNldHRpbmdzLmZpbmQocyA9PiB0eXBlb2Ygcy5tdWx0aUxhbmd1YWdlICE9PSBcInVuZGVmaW5lZFwiKTtcclxuXHJcblx0XHRcdFx0XHRpZiAobGFuZ1NldHRpbmdzICYmIGxhbmdTZXR0aW5ncy52YWx1ZXMpIHtcclxuXHRcdFx0XHRcdFx0Y29uc3QgbGFuZ3MgPSBsYW5nU2V0dGluZ3MudmFsdWVzLm1hcCh2ID0+IHYudmFsdWUpO1xyXG5cclxuXHRcdFx0XHRcdFx0YXdhaXQgUHJvbWlzZS5hbGwoXHJcblx0XHRcdFx0XHRcdFx0bGFuZ3MubWFwKGxhbmcgPT4gbG9hZFN0cmluZ3MobGFuZywgdHJ1ZSkpXHJcblx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRQcmVzZW5jZShuYW1lOiBzdHJpbmcgfCBBcnJheTxzdHJpbmc+KSB7XHJcblx0bGV0IHByZXNlbmNlczogcHJlc2VuY2VTdG9yYWdlID0gKGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBcInByZXNlbmNlc1wiKSlcclxuXHRcdC5wcmVzZW5jZXM7XHJcblxyXG5cdGlmICghcHJlc2VuY2VzKSBwcmVzZW5jZXMgPSBbXTtcclxuXHQvLyogRmlsdGVyIG91dCB0bXAgcHJlc2VuY2VzXHJcblxyXG5cdGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIikge1xyXG5cdFx0aWYgKHByZXNlbmNlcy5maWx0ZXIocCA9PiAhcC50bXApLmZpbmQocCA9PiBwLm1ldGFkYXRhLnNlcnZpY2UgPT09IG5hbWUpKSB7XHJcblx0XHRcdGVycm9yKFwicHJlc2VuY2VNYW5hZ2VyXCIsIGBQcmVzZW5jZSAke25hbWV9IGFscmVhZHkgYWRkZWQuYCk7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHR9IGVsc2Uge1xyXG5cdFx0Y29uc3QgcmVzID0gbmFtZS5maWx0ZXIoXHJcblx0XHRcdHMgPT4gIXByZXNlbmNlcy5tYXAocCA9PiBwLm1ldGFkYXRhLnNlcnZpY2UpLmluY2x1ZGVzKHMpXHJcblx0XHQpO1xyXG5cclxuXHRcdGlmIChyZXMubGVuZ3RoID09PSAwKSB7XHJcblx0XHRcdGVycm9yKFwicHJlc2VuY2VNYW5hZ2VyXCIsIFwiUHJlc2VuY2VzIGFscmVhZHkgYWRkZWQuXCIpO1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9IGVsc2UgbmFtZSA9IHJlcztcclxuXHR9XHJcblxyXG5cdGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIikge1xyXG5cdFx0Z2V0UHJlc2VuY2VNZXRhZGF0YShuYW1lKVxyXG5cdFx0XHQudGhlbihhc3luYyAoeyBkYXRhIH0pID0+IHtcclxuXHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHR0eXBlb2YgZGF0YS5tZXRhZGF0YS5idXR0b24gIT09IFwidW5kZWZpbmVkXCIgJiZcclxuXHRcdFx0XHRcdCFkYXRhLm1ldGFkYXRhLmJ1dHRvblxyXG5cdFx0XHRcdClcclxuXHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRjb25zdCBwcmVzZW5jZUFuZElmcmFtZSA9IChcclxuXHRcdFx0XHRcdGF3YWl0IGdyYXBocWxSZXF1ZXN0KGBcclxuXHRcdFx0XHRcdFx0cXVlcnkge1xyXG5cdFx0XHRcdFx0XHRcdHByZXNlbmNlcyhzZXJ2aWNlOiBcIiR7ZGF0YS5tZXRhZGF0YS5zZXJ2aWNlfVwiKSB7XHJcbiAgICBcdFx0XHRcdFx0cHJlc2VuY2VKc1xyXG4gICAgXHRcdFx0XHRcdGlmcmFtZUpzXHJcbiAgICBcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGApXHJcblx0XHRcdFx0KS5kYXRhLnByZXNlbmNlc1swXTtcclxuXHJcblx0XHRcdFx0Y29uc3QgcmVzOiBhbnkgPSB7XHJcblx0XHRcdFx0XHRtZXRhZGF0YTogZGF0YS5tZXRhZGF0YSxcclxuXHRcdFx0XHRcdHByZXNlbmNlOiBwcmVzZW5jZUFuZElmcmFtZS5wcmVzZW5jZUpzLFxyXG5cdFx0XHRcdFx0ZW5hYmxlZDogdHJ1ZVxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHRcdGlmICh0eXBlb2YgZGF0YS5tZXRhZGF0YS5pZnJhbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZGF0YS5tZXRhZGF0YS5pZnJhbWUpXHJcblx0XHRcdFx0XHRyZXMuaWZyYW1lID0gcHJlc2VuY2VBbmRJZnJhbWUuaWZyYW1lSnM7XHJcblxyXG5cdFx0XHRcdHByZXNlbmNlcy5wdXNoKHJlcyk7XHJcblx0XHRcdFx0Y2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgcHJlc2VuY2VzOiBwcmVzZW5jZXMgfSk7XHJcblx0XHRcdFx0cHJlc2VuY2VzLm1hcChwID0+IHtcclxuXHRcdFx0XHRcdGlmIChwLm1ldGFkYXRhLnNldHRpbmdzKSB7XHJcblx0XHRcdFx0XHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7XHJcblx0XHRcdFx0XHRcdFx0W2BwU2V0dGluZ3NfJHtwLm1ldGFkYXRhLnNlcnZpY2V9YF06IHAubWV0YWRhdGEuc2V0dGluZ3NcclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5jYXRjaCgoKSA9PiB7fSk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvbnN0IHByZXNlbmNlc1RvQWRkOiBhbnkgPSAoXHJcblx0XHRcdGF3YWl0IFByb21pc2UuYWxsKFxyXG5cdFx0XHRcdChcclxuXHRcdFx0XHRcdGF3YWl0IFByb21pc2UuYWxsKFxyXG5cdFx0XHRcdFx0XHRuYW1lLm1hcChuYW1lID0+IHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0UHJlc2VuY2VNZXRhZGF0YShuYW1lKTtcclxuXHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdClcclxuXHRcdFx0XHQpLm1hcChhc3luYyAoeyBkYXRhIH0pID0+IHtcclxuXHRcdFx0XHRcdGlmIChcclxuXHRcdFx0XHRcdFx0dHlwZW9mIGRhdGEubWV0YWRhdGEuYnV0dG9uICE9PSBcInVuZGVmaW5lZFwiICYmXHJcblx0XHRcdFx0XHRcdCFkYXRhLm1ldGFkYXRhLmJ1dHRvblxyXG5cdFx0XHRcdFx0KVxyXG5cdFx0XHRcdFx0XHRyZXR1cm47XHJcblxyXG5cdFx0XHRcdFx0Y29uc3QgcHJlc2VuY2VBbmRJZnJhbWUgPSAoXHJcblx0XHRcdFx0XHRcdGF3YWl0IGdyYXBocWxSZXF1ZXN0KGBcclxuXHRcdFx0XHRcdFx0cXVlcnkge1xyXG5cdFx0XHRcdFx0XHRcdHByZXNlbmNlcyhzZXJ2aWNlOiBcIiR7ZGF0YS5tZXRhZGF0YS5zZXJ2aWNlfVwiKSB7XHJcbiAgICBcdFx0XHRcdFx0cHJlc2VuY2VKc1xyXG4gICAgXHRcdFx0XHRcdGlmcmFtZUpzXHJcbiAgICBcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGApXHJcblx0XHRcdFx0XHQpLmRhdGEucHJlc2VuY2VzWzBdO1xyXG5cclxuXHRcdFx0XHRcdGNvbnN0IHJlczogYW55ID0ge1xyXG5cdFx0XHRcdFx0XHRtZXRhZGF0YTogZGF0YS5tZXRhZGF0YSxcclxuXHRcdFx0XHRcdFx0cHJlc2VuY2U6IHByZXNlbmNlQW5kSWZyYW1lLnByZXNlbmNlSnMsXHJcblx0XHRcdFx0XHRcdGVuYWJsZWQ6IHRydWVcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHRcdHR5cGVvZiBkYXRhLm1ldGFkYXRhLmlmcmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxyXG5cdFx0XHRcdFx0XHRkYXRhLm1ldGFkYXRhLmlmcmFtZVxyXG5cdFx0XHRcdFx0KVxyXG5cdFx0XHRcdFx0XHRyZXMuaWZyYW1lID0gcHJlc2VuY2VBbmRJZnJhbWUuaWZyYW1lSnM7XHJcblxyXG5cdFx0XHRcdFx0cmV0dXJuIHJlcztcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHQpXHJcblx0XHQpLmZpbHRlcihwID0+IHR5cGVvZiBwICE9PSBcInVuZGVmaW5lZFwiKTtcclxuXHJcblx0XHRjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoeyBwcmVzZW5jZXM6IHByZXNlbmNlcy5jb25jYXQocHJlc2VuY2VzVG9BZGQpIH0pO1xyXG5cdFx0cHJlc2VuY2VzLmNvbmNhdChwcmVzZW5jZXNUb0FkZCkubWFwKHAgPT4ge1xyXG5cdFx0XHRpZiAocC5tZXRhZGF0YS5zZXR0aW5ncykge1xyXG5cdFx0XHRcdGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldCh7XHJcblx0XHRcdFx0XHRbYHBTZXR0aW5nc18ke3AubWV0YWRhdGEuc2VydmljZX1gXTogcC5tZXRhZGF0YS5zZXR0aW5nc1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdC8vKiBOb3QgYXdhaXRpbmcgaXQsIGl0IGNvdWxkIHRha2UgYSBsb3Qgb2YgdGltZVxyXG5cdFx0XHRcdGluaXRQcmVzZW5jZUxhbmd1YWdlcyhwKTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHR1cGRhdGVQcmVzZW5jZXMoKTtcclxuXHR1cGRhdGVTdHJpbmdzKGNocm9tZS5pMThuLmdldFVJTGFuZ3VhZ2UoKSk7XHJcbn1cclxuXHJcbi8vKiBPbmx5IGFkZCB0aGVzZSBpZiBpcyBub3QgYmFja2dyb3VuZCBwYWdlXHJcbmlmIChkb2N1bWVudC5sb2NhdGlvbi5wYXRobmFtZSAhPT0gXCIvX2dlbmVyYXRlZF9iYWNrZ3JvdW5kX3BhZ2UuaHRtbFwiKSB7XHJcblx0Ly8qIEFkZCBleHRlbnNpb25cclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XHJcblx0XHRpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhcHBcIikpXHJcblx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXBwXCIpLnNldEF0dHJpYnV0ZShcImV4dGVuc2lvbi1yZWFkeVwiLCBcInRydWVcIik7XHJcblx0fSk7XHJcblxyXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiUHJlTWlEX0FkZFByZXNlbmNlXCIsIGZ1bmN0aW9uKGRhdGE6IEN1c3RvbUV2ZW50KSB7XHJcblx0XHRhZGRQcmVzZW5jZShbZGF0YS5kZXRhaWxdKTtcclxuXHR9KTtcclxuXHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJQcmVNaURfUmVtb3ZlUHJlc2VuY2VcIiwgYXN5bmMgZnVuY3Rpb24oXHJcblx0XHRkYXRhOiBDdXN0b21FdmVudFxyXG5cdCkge1xyXG5cdFx0Y29uc3QgeyBwcmVzZW5jZXMgfSA9IGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBcInByZXNlbmNlc1wiKTtcclxuXHJcblx0XHRjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoe1xyXG5cdFx0XHRwcmVzZW5jZXM6IChwcmVzZW5jZXMgYXMgcHJlc2VuY2VTdG9yYWdlKS5maWx0ZXIoXHJcblx0XHRcdFx0cCA9PiBwLm1ldGFkYXRhLnNlcnZpY2UgIT09IGRhdGEuZGV0YWlsXHJcblx0XHRcdClcclxuXHRcdH0pO1xyXG5cdFx0dXBkYXRlUHJlc2VuY2VzKCk7XHJcblx0XHR1cGRhdGVTdHJpbmdzKGNocm9tZS5pMThuLmdldFVJTGFuZ3VhZ2UoKSk7XHJcblx0fSk7XHJcblxyXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiUHJlTWlEX0dldFByZXNlbmNlTGlzdFwiLCBzZW5kQmFja1ByZXNlbmNlcyk7XHJcblxyXG5cdC8vKiBPbiBwcmVzZW5jZSBjaGFuZ2UgdXBkYXRlXHJcblx0Y2hyb21lLnN0b3JhZ2Uub25DaGFuZ2VkLmFkZExpc3RlbmVyKGtleSA9PiB7XHJcblx0XHRpZiAoT2JqZWN0LmtleXMoa2V5KVswXSA9PT0gXCJwcmVzZW5jZXNcIikgc2VuZEJhY2tQcmVzZW5jZXMoKTtcclxuXHR9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gc2VuZEJhY2tQcmVzZW5jZXMoKSB7XHJcblx0Y29uc3QgcHJlc2VuY2VzID0gKGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBcInByZXNlbmNlc1wiKSlcclxuXHRcdC5wcmVzZW5jZXMgYXMgcHJlc2VuY2VTdG9yYWdlO1xyXG5cdGxldCBkYXRhID0ge1xyXG5cdFx0ZGV0YWlsOiBwcmVzZW5jZXMuZmlsdGVyKHAgPT4gIXAudG1wKS5tYXAocCA9PiBwLm1ldGFkYXRhLnNlcnZpY2UpXHJcblx0fTtcclxuXHJcblx0Ly8gQHRzLWlnbm9yZVxyXG5cdGlmICh0eXBlb2YgY2xvbmVJbnRvID09PSBcImZ1bmN0aW9uXCIpXHJcblx0XHQvLyBAdHMtaWdub3JlXHJcblx0XHRkYXRhID0gY2xvbmVJbnRvKGRhdGEsIGRvY3VtZW50LmRlZmF1bHRWaWV3KTtcclxuXHJcblx0Y29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoXCJQcmVNaURfR2V0V2ViaXN0ZUZhbGxiYWNrXCIsIGRhdGEpO1xyXG5cdHdpbmRvdy5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluaXRQcmVzZW5jZUxhbmd1YWdlcyhwKSB7XHJcblx0aWYgKHAubWV0YWRhdGEuc2V0dGluZ3MpIHtcclxuXHRcdGNvbnN0IGxuZ1NldHRpbmdJZHggPSBwLm1ldGFkYXRhLnNldHRpbmdzLmZpbmRJbmRleChcclxuXHRcdFx0cyA9PiB0eXBlb2Ygcy5tdWx0aUxhbmd1YWdlICE9PSBcInVuZGVmaW5lZFwiXHJcblx0XHQpO1xyXG5cclxuXHRcdGlmIChsbmdTZXR0aW5nSWR4ID49IDApIHtcclxuXHRcdFx0Y29uc3QgbG5nU2V0dGluZyA9IHAubWV0YWRhdGEuc2V0dGluZ3NbbG5nU2V0dGluZ0lkeF0sXHJcblx0XHRcdFx0bGFuZ3VhZ2VzID0gYXdhaXQgcHJlc2VuY2VNdWx0aUxhbmd1YWdlTGFuZ3VhZ2VzKFxyXG5cdFx0XHRcdFx0bG5nU2V0dGluZy5tdWx0aUxhbmd1YWdlLFxyXG5cdFx0XHRcdFx0cC5tZXRhZGF0YS5zZXJ2aWNlXHJcblx0XHRcdFx0KTtcclxuXHJcblx0XHRcdGlmIChPYmplY3Qua2V5cyhsYW5ndWFnZXMpLmxlbmd0aCA+IDEpIHtcclxuXHRcdFx0XHRhd2FpdCBzdG9yZURlZmF1bHRMYW5ndWFnZU9mUHJlc2VuY2UocCwgbGFuZ3VhZ2VzKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRwLm1ldGFkYXRhLnNldHRpbmdzLnNwbGljZShsbmdTZXR0aW5nSWR4LCAxKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0UHJlc2VuY2VMYW5ndWFnZXMoc2VydmljZU5hbWUpIHtcclxuXHRjb25zdCB2YWx1ZXMgPSBbXSxcclxuXHRcdGxhbmd1YWdlcyA9IGF3YWl0IHByZXNlbmNlTGFuZ3VhZ2VzKHNlcnZpY2VOYW1lKTtcclxuXHJcblx0Zm9yIChjb25zdCBsYW5ndWFnZSBvZiBsYW5ndWFnZXMpIHtcclxuXHRcdHZhbHVlcy5wdXNoKHtcclxuXHRcdFx0bmFtZTogYXdhaXQgZ2V0U3RyaW5nKFwibmFtZVwiLCBsYW5ndWFnZSksXHJcblx0XHRcdHZhbHVlOiBsYW5ndWFnZVxyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdmFsdWVzO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBwcmVzZW5jZU11bHRpTGFuZ3VhZ2VMYW5ndWFnZXMobXVsdGlMYW5ndWFnZSwgc2VydmljZSkge1xyXG5cdHN3aXRjaCAodHlwZW9mIG11bHRpTGFuZ3VhZ2UpIHtcclxuXHRcdGNhc2UgXCJib29sZWFuXCI6XHJcblx0XHRcdGlmIChtdWx0aUxhbmd1YWdlID09PSB0cnVlKSByZXR1cm4gYXdhaXQgZ2V0UHJlc2VuY2VMYW5ndWFnZXMoc2VydmljZSk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSBcInN0cmluZ1wiOlxyXG5cdFx0XHRyZXR1cm4gYXdhaXQgZ2V0UHJlc2VuY2VMYW5ndWFnZXMobXVsdGlMYW5ndWFnZSk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSBcIm9iamVjdFwiOlxyXG5cdFx0XHRpZiAobXVsdGlMYW5ndWFnZSBpbnN0YW5jZW9mIEFycmF5KSB7XHJcblx0XHRcdFx0bGV0IGNvbW1vbkxuZ3MgPSBbXTtcclxuXHJcblx0XHRcdFx0Zm9yIChjb25zdCBwcmVmaXggb2YgbXVsdGlMYW5ndWFnZSkge1xyXG5cdFx0XHRcdFx0aWYgKHR5cGVvZiBwcmVmaXggPT09IFwic3RyaW5nXCIgJiYgcHJlZml4LnRyaW0oKS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdGNvbnN0IGxuZ3MgPSBhd2FpdCBnZXRQcmVzZW5jZUxhbmd1YWdlcyhwcmVmaXgpO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gb25seSBsb2FkIGNvbW1vbiBsYW5ndWFnZXNcclxuXHRcdFx0XHRcdFx0aWYgKGNvbW1vbkxuZ3MubGVuZ3RoID09PSAwKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29tbW9uTG5ncyA9IGxuZ3M7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0Y29tbW9uTG5ncyA9IGNvbW1vbkxuZ3MuZmlsdGVyKFxyXG5cdFx0XHRcdFx0XHRcdFx0Y2wgPT4gbG5ncy5maW5kSW5kZXgobCA9PiBsID09PSBjbCkgPj0gMFxyXG5cdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBjb21tb25MbmdzO1xyXG5cdFx0XHR9XHJcblx0XHRcdGJyZWFrO1xyXG5cdH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gc3RvcmVEZWZhdWx0TGFuZ3VhZ2VPZlByZXNlbmNlKHAsIGxhbmd1YWdlcykge1xyXG5cdGNvbnN0IGxuZ1NldHRpbmcgPSBwLm1ldGFkYXRhLnNldHRpbmdzLmZpbmQoXHJcblx0XHRzID0+IHR5cGVvZiBzLm11bHRpTGFuZ3VhZ2UgIT09IFwidW5kZWZpbmVkXCJcclxuXHQpO1xyXG5cclxuXHRsZXQgcHJlc2VuY2VTZXR0aW5ncyA9IChcclxuXHRcdGF3YWl0IGdldFN0b3JhZ2UoXCJsb2NhbFwiLCBgcFNldHRpbmdzXyR7cC5tZXRhZGF0YS5zZXJ2aWNlfWApXHJcblx0KVtgcFNldHRpbmdzXyR7cC5tZXRhZGF0YS5zZXJ2aWNlfWBdO1xyXG5cclxuXHRpZiAoIXByZXNlbmNlU2V0dGluZ3MgJiYgcC5tZXRhZGF0YS5zZXR0aW5ncykge1xyXG5cdFx0cHJlc2VuY2VTZXR0aW5ncyA9IHAubWV0YWRhdGEuc2V0dGluZ3M7XHJcblx0fVxyXG5cclxuXHRpZiAoXHJcblx0XHQhcHJlc2VuY2VTZXR0aW5ncy5maW5kKFxyXG5cdFx0XHRzID0+IHMuaWQgPT09IGxuZ1NldHRpbmcuaWQgJiYgcy52YWx1ZXMgJiYgcy52YWx1ZXMubGVuZ3RoID4gMFxyXG5cdFx0KVxyXG5cdCkge1xyXG5cdFx0Y29uc3QgdWlMYW5nID0gY2hyb21lLmkxOG4uZ2V0VUlMYW5ndWFnZSgpLFxyXG5cdFx0XHRwcmVmZXJyZWRWYWx1ZSA9IGxhbmd1YWdlcy5maW5kKGwgPT4gbC52YWx1ZSA9PT0gdWlMYW5nKTtcclxuXHJcblx0XHRsbmdTZXR0aW5nLnRpdGxlID0gYXdhaXQgZ2V0U3RyaW5nKFwiZ2VuZXJhbC5sYW5ndWFnZVwiLCB1aUxhbmcpO1xyXG5cdFx0bG5nU2V0dGluZy5pY29uID0gXCJmYXMgZmEtbGFuZ3VhZ2VcIjtcclxuXHRcdGxuZ1NldHRpbmcudmFsdWUgPSBwcmVmZXJyZWRWYWx1ZSA/IHByZWZlcnJlZFZhbHVlLnZhbHVlIDogREVGQVVMVF9MT0NBTEU7XHJcblx0XHRsbmdTZXR0aW5nLnZhbHVlcyA9IGxhbmd1YWdlcztcclxuXHJcblx0XHRjb25zdCBsbmdTZXR0aW5nSWR4ID0gcHJlc2VuY2VTZXR0aW5ncy5maW5kSW5kZXgoXHJcblx0XHRcdHMgPT4gcy5pZCA9PT0gbG5nU2V0dGluZy5pZFxyXG5cdFx0KTtcclxuXHRcdHByZXNlbmNlU2V0dGluZ3NbbG5nU2V0dGluZ0lkeF0gPSBsbmdTZXR0aW5nO1xyXG5cclxuXHRcdC8vKiBZb3UgbWF5IGJlIHdvbmRlcmluZywgd2h5IHRoZSBmdWNrIGRvIHlvdSBzdHJpbmdpZnkgYW5kIHBhcnNlIHRoaXM/IEd1ZXNzIHdoYXQgYmVjYXVzZSBGaXJlZm94IHN1Y2tzIGFuZCBicmVha3MgaXRzIHN0b3JhZ2VcclxuXHRcdC8vQHRzLWlnbm9yZVxyXG5cdFx0Y2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KFxyXG5cdFx0XHRKU09OLnBhcnNlKFxyXG5cdFx0XHRcdEpTT04uc3RyaW5naWZ5KHtcclxuXHRcdFx0XHRcdFtgcFNldHRpbmdzXyR7cC5tZXRhZGF0YS5zZXJ2aWNlfWBdOiBwcmVzZW5jZVNldHRpbmdzXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0KVxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9hcHAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2MzgzMjZmZVwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2FwcC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNjc3MmXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9hcHAudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jaGVja2JveC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ZGEwMGEyNCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjQyOTgyMTU3XCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY2hlY2tib3gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NmRhMDBhMjQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vY2hlY2tib3gudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NmRhMDBhMjQmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jdXN0b21TZWxlY3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9N2RhNTFjNzgmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI2ZWE4NGZmYlwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2N1c3RvbVNlbGVjdC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD03ZGE1MWM3OCZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jdXN0b21TZWxlY3QudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9N2RhNTFjNzgmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9uYXZpZ2F0aW9uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTYzMTAxZmZmJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiZTRkNDIxZDBcIiwgY29udGVudCwgZmFsc2UsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcbiAvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuIGlmKCFjb250ZW50LmxvY2Fscykge1xuICAgbW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9uYXZpZ2F0aW9uLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTYzMTAxZmZmJmxhbmc9c2NzcyZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24oKSB7XG4gICAgIHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL25hdmlnYXRpb24udnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjMxMDFmZmYmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9zZXR0aW5ncy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD02ZjdmZDFjMSZsYW5nPXNjc3Mmc2NvcGVkPXRydWUmXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjg0YTdmNDNjXCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NmY3ZmQxYzEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc2V0dGluZ3MudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NmY3ZmQxYzEmbGFuZz1zY3NzJnNjb3BlZD10cnVlJlwiKTtcbiAgICAgaWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG4gICAgIHVwZGF0ZShuZXdDb250ZW50KTtcbiAgIH0pO1xuIH1cbiAvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG4gbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gbW9kdWxlIGV4cG9ydHMgbXVzdCBiZSByZXR1cm5lZCBmcm9tIHJ1bnRpbWUgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHJ1biBzdGFydHVwXG5yZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy54KCk7XG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiBtb2R1bGVbJ2RlZmF1bHQnXSA6XG5cdFx0KCkgPT4gbW9kdWxlO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gUHJvbWlzZSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDM3OTogMCxcblx0MjkzOiAwXG59O1xuXG52YXIgZGVmZXJyZWRNb2R1bGVzID0gW1xuXHRbNTgsOTk5XVxuXTtcbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbnZhciBjaGVja0RlZmVycmVkTW9kdWxlcyA9ICgpID0+IHtcblxufTtcbmZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzSW1wbCgpIHtcblx0dmFyIHJlc3VsdDtcblx0Zm9yKHZhciBpID0gMDsgaSA8IGRlZmVycmVkTW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBkZWZlcnJlZE1vZHVsZSA9IGRlZmVycmVkTW9kdWxlc1tpXTtcblx0XHR2YXIgZnVsZmlsbGVkID0gdHJ1ZTtcblx0XHRmb3IodmFyIGogPSAxOyBqIDwgZGVmZXJyZWRNb2R1bGUubGVuZ3RoOyBqKyspIHtcblx0XHRcdHZhciBkZXBJZCA9IGRlZmVycmVkTW9kdWxlW2pdO1xuXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2RlcElkXSAhPT0gMCkgZnVsZmlsbGVkID0gZmFsc2U7XG5cdFx0fVxuXHRcdGlmKGZ1bGZpbGxlZCkge1xuXHRcdFx0ZGVmZXJyZWRNb2R1bGVzLnNwbGljZShpLS0sIDEpO1xuXHRcdFx0cmVzdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBkZWZlcnJlZE1vZHVsZVswXSk7XG5cdFx0fVxuXHR9XG5cdGlmKGRlZmVycmVkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLngoKTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnggPSAoKSA9PiB7XG5cblx0XHR9XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn1cbl9fd2VicGFja19yZXF1aXJlX18ueCA9ICgpID0+IHtcblx0Ly8gcmVzZXQgc3RhcnR1cCBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgY2FsbGVkIGFnYWluIHdoZW4gbW9yZSBzdGFydHVwIGNvZGUgaXMgYWRkZWRcblx0X193ZWJwYWNrX3JlcXVpcmVfXy54ID0gKCkgPT4ge1xuXG5cdH1cblx0Y2h1bmtMb2FkaW5nR2xvYmFsID0gY2h1bmtMb2FkaW5nR2xvYmFsLnNsaWNlKCk7XG5cdGZvcih2YXIgaSA9IDA7IGkgPCBjaHVua0xvYWRpbmdHbG9iYWwubGVuZ3RoOyBpKyspIHdlYnBhY2tKc29ucENhbGxiYWNrKGNodW5rTG9hZGluZ0dsb2JhbFtpXSk7XG5cdHJldHVybiAoY2hlY2tEZWZlcnJlZE1vZHVsZXMgPSBjaGVja0RlZmVycmVkTW9kdWxlc0ltcGwpKCk7XG59O1xuXG4vLyBpbnN0YWxsIGEgSlNPTlAgY2FsbGJhY2sgZm9yIGNodW5rIGxvYWRpbmdcbnZhciB3ZWJwYWNrSnNvbnBDYWxsYmFjayA9IChkYXRhKSA9PiB7XG5cdHZhciBbY2h1bmtJZHMsIG1vcmVNb2R1bGVzLCBydW50aW1lLCBleGVjdXRlTW9kdWxlc10gPSBkYXRhO1xuXHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcblx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG5cdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDAsIHJlc29sdmVzID0gW107XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0cmVzb2x2ZXMucHVzaChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0pO1xuXHRcdH1cblx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHR9XG5cdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdH1cblx0fVxuXHRpZihydW50aW1lKSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHRwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG5cdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuXHR9XG5cblx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuXHRpZihleGVjdXRlTW9kdWxlcykgZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyk7XG5cblx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG5cdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xufVxuXG52YXIgY2h1bmtMb2FkaW5nR2xvYmFsID0gc2VsZltcIndlYnBhY2tDaHVua3BtZFwiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmtwbWRcIl0gfHwgW107XG52YXIgcGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24gPSBjaHVua0xvYWRpbmdHbG9iYWwucHVzaC5iaW5kKGNodW5rTG9hZGluZ0dsb2JhbCk7XG5jaHVua0xvYWRpbmdHbG9iYWwucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrOyJdLCJzb3VyY2VSb290IjoiIn0=